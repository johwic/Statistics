function sum(e) {
    var t = 0;
    for (var n in e)
        e[n] && (t += e[n]);
    return t
}
(function() {
    var e = this,
        t = e._,
        n = {},
        r = Array.prototype,
        i = Object.prototype,
        s = Function.prototype,
        o = r.push,
        u = r.slice,
        a = r.concat,
        f = i.toString,
        l = i.hasOwnProperty,
        c = r.forEach,
        h = r.map,
        p = r.reduce,
        d = r.reduceRight,
        v = r.filter,
        m = r.every,
        g = r.some,
        y = r.indexOf,
        b = r.lastIndexOf,
        w = Array.isArray,
        E = Object.keys,
        S = s.bind,
        x = function(e) {
            return e instanceof x ? e : this instanceof x ? (this._wrapped = e, void 0) : new x(e)
        };
    "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = x), exports._ = x) : e._ = x, x.VERSION = "1.5.2";
    var T = x.each = x.forEach = function(e, t, r) {
        if (null != e)
            if (c && e.forEach === c)
                e.forEach(t, r);
            else if (e.length === +e.length) {
                for (var i = 0, s = e.length; s > i; i++)
                    if (t.call(r, e[i], i, e) === n)
                        return
            } else
                for (var o = x.keys(e), i = 0, s = o.length; s > i; i++)
                    if (t.call(r, e[o[i]], o[i], e) === n)
                        return
    };
    x.map = x.collect = function(e, t, n) {
        var r = [];
        return null == e ? r : h && e.map === h ? e.map(t, n) : (T(e, function(e, i, s) {
            r.push(t.call(n, e, i, s))
        }), r)
    };
    var N = "Reduce of empty array with no initial value";
    x.reduce = x.foldl = x.inject = function(e, t, n, r) {
        var i = arguments.length > 2;
        if (null == e && (e = []), p && e.reduce === p)
            return r && (t = x.bind(t, r)), i ? e.reduce(t, n) : e.reduce(t);
        if (T(e, function(e, s, o) {
                i ? n = t.call(r, n, e, s, o) : (n = e, i = !0)
            }), !i)
            throw new TypeError(N);
        return n
    }, x.reduceRight = x.foldr = function(e, t, n, r) {
        var i = arguments.length > 2;
        if (null == e && (e = []), d && e.reduceRight === d)
            return r && (t = x.bind(t, r)), i ? e.reduceRight(t, n) : e.reduceRight(t);
        var s = e.length;
        if (s !== +s) {
            var o = x.keys(e);
            s = o.length
        }
        if (T(e, function(u, a, f) {
                a = o ? o[--s] : --s, i ? n = t.call(r, n, e[a], a, f) : (n = e[a], i = !0)
            }), !i)
            throw new TypeError(N);
        return n
    }, x.find = x.detect = function(e, t, n) {
        var r;
        return C(e, function(e, i, s) {
            return t.call(n, e, i, s) ? (r = e, !0) : void 0
        }), r
    }, x.filter = x.select = function(e, t, n) {
        var r = [];
        return null == e ? r : v && e.filter === v ? e.filter(t, n) : (T(e, function(e, i, s) {
            t.call(n, e, i, s) && r.push(e)
        }), r)
    }, x.reject = function(e, t, n) {
        return x.filter(e, function(e, r, i) {
            return !t.call(n, e, r, i)
        }, n)
    }, x.every = x.all = function(e, t, r) {
        t || (t = x.identity);
        var i = !0;
        return null == e ? i : m && e.every === m ? e.every(t, r) : (T(e, function(e, s, o) {
            return (i = i && t.call(r, e, s, o)) ? void 0 : n
        }), !!i)
    };
    var C = x.some = x.any = function(e, t, r) {
        t || (t = x.identity);
        var i = !1;
        return null == e ? i : g && e.some === g ? e.some(t, r) : (T(e, function(e, s, o) {
            return i || (i = t.call(r, e, s, o)) ? n : void 0
        }), !!i)
    };
    x.contains = x.include = function(e, t) {
        return null == e ? !1 : y && e.indexOf === y ? e.indexOf(t) != -1 : C(e, function(e) {
            return e === t
        })
    }, x.invoke = function(e, t) {
        var n = u.call(arguments, 2),
            r = x.isFunction(t);
        return x.map(e, function(e) {
            return (r ? t : e[t]).apply(e, n)
        })
    }, x.pluck = function(e, t) {
        return x.map(e, function(e) {
            return e[t]
        })
    }, x.where = function(e, t, n) {
        return x.isEmpty(t) ? n ? void 0 : [] : x[n ? "find" : "filter"](e, function(e) {
            for (var n in t)
                if (t[n] !== e[n])
                    return !1;
            return !0
        })
    }, x.findWhere = function(e, t) {
        return x.where(e, t, !0)
    }, x.max = function(e, t, n) {
        if (!t && x.isArray(e) && e[0] === +e[0] && e.length < 65535)
            return Math.max.apply(Math, e);
        if (!t && x.isEmpty(e))
            return -1 / 0;
        var r = {
            computed: -1 / 0,
            value: -1 / 0
        };
        return T(e, function(e, i, s) {
            var o = t ? t.call(n, e, i, s) : e;
            o > r.computed && (r = {
                value: e,
                computed: o
            })
        }), r.value
    }, x.min = function(e, t, n) {
        if (!t && x.isArray(e) && e[0] === +e[0] && e.length < 65535)
            return Math.min.apply(Math, e);
        if (!t && x.isEmpty(e))
            return 1 / 0;
        var r = {
            computed: 1 / 0,
            value: 1 / 0
        };
        return T(e, function(e, i, s) {
            var o = t ? t.call(n, e, i, s) : e;
            o < r.computed && (r = {
                value: e,
                computed: o
            })
        }), r.value
    }, x.shuffle = function(e) {
        var t, n = 0,
            r = [];
        return T(e, function(e) {
            t = x.random(n++), r[n - 1] = r[t], r[t] = e
        }), r
    }, x.sample = function(e, t, n) {
        return arguments.length < 2 || n ? e[x.random(e.length - 1)] : x.shuffle(e).slice(0, Math.max(0, t))
    };
    var k = function(e) {
        return x.isFunction(e) ? e : function(t) {
            return t[e]
        }
    };
    x.sortBy = function(e, t, n) {
        var r = k(t);
        return x.pluck(x.map(e, function(e, t, i) {
            return {
                value: e,
                index: t,
                criteria: r.call(n, e, t, i)
            }
        }).sort(function(e, t) {
            var n = e.criteria,
                r = t.criteria;
            if (n !== r) {
                if (n > r || n === void 0)
                    return 1;
                if (r > n || r === void 0)
                    return -1
            }
            return e.index - t.index
        }), "value")
    };
    var L = function(e) {
        return function(t, n, r) {
            var i = {},
                s = null == n ? x.identity : k(n);
            return T(t, function(n, o) {
                var u = s.call(r, n, o, t);
                e(i, u, n)
            }), i
        }
    };
    x.groupBy = L(function(e, t, n) {
        (x.has(e, t) ? e[t] : e[t] = []).push(n)
    }), x.indexBy = L(function(e, t, n) {
        e[t] = n
    }), x.countBy = L(function(e, t) {
        x.has(e, t) ? e[t] ++ : e[t] = 1
    }), x.sortedIndex = function(e, t, n, r) {
        n = null == n ? x.identity : k(n);
        for (var i = n.call(r, t), s = 0, o = e.length; o > s;) {
            var u = s + o >>> 1;
            n.call(r, e[u]) < i ? s = u + 1 : o = u
        }
        return s
    }, x.toArray = function(e) {
        return e ? x.isArray(e) ? u.call(e) : e.length === +e.length ? x.map(e, x.identity) : x.values(e) : []
    }, x.size = function(e) {
        return null == e ? 0 : e.length === +e.length ? e.length : x.keys(e).length
    }, x.first = x.head = x.take = function(e, t, n) {
        return null == e ? void 0 : null == t || n ? e[0] : u.call(e, 0, t)
    }, x.initial = function(e, t, n) {
        return u.call(e, 0, e.length - (null == t || n ? 1 : t))
    }, x.last = function(e, t, n) {
        return null == e ? void 0 : null == t || n ? e[e.length - 1] : u.call(e, Math.max(e.length - t, 0))
    }, x.rest = x.tail = x.drop = function(e, t, n) {
        return u.call(e, null == t || n ? 1 : t)
    }, x.compact = function(e) {
        return x.filter(e, x.identity)
    };
    var A = function(e, t, n) {
        return t && x.every(e, x.isArray) ? a.apply(n, e) : (T(e, function(e) {
            x.isArray(e) || x.isArguments(e) ? t ? o.apply(n, e) : A(e, t, n) : n.push(e)
        }), n)
    };
    x.flatten = function(e, t) {
        return A(e, t, [])
    }, x.without = function(e) {
        return x.difference(e, u.call(arguments, 1))
    }, x.uniq = x.unique = function(e, t, n, r) {
        x.isFunction(t) && (r = n, n = t, t = !1);
        var i = n ? x.map(e, n, r) : e,
            s = [],
            o = [];
        return T(i, function(n, r) {
            (t ? r && o[o.length - 1] === n : x.contains(o, n)) || (o.push(n), s.push(e[r]))
        }), s
    }, x.union = function() {
        return x.uniq(x.flatten(arguments, !0))
    }, x.intersection = function(e) {
        var t = u.call(arguments, 1);
        return x.filter(x.uniq(e), function(e) {
            return x.every(t, function(t) {
                return x.indexOf(t, e) >= 0
            })
        })
    }, x.difference = function(e) {
        var t = a.apply(r, u.call(arguments, 1));
        return x.filter(e, function(e) {
            return !x.contains(t, e)
        })
    }, x.zip = function() {
        for (var e = x.max(x.pluck(arguments, "length").concat(0)), t = new Array(e), n = 0; e > n; n++)
            t[n] = x.pluck(arguments, "" + n);
        return t
    }, x.object = function(e, t) {
        if (null == e)
            return {};
        for (var n = {}, r = 0, i = e.length; i > r; r++)
            t ? n[e[r]] = t[r] : n[e[r][0]] = e[r][1];
        return n
    }, x.indexOf = function(e, t, n) {
        if (null == e)
            return -1;
        var r = 0,
            i = e.length;
        if (n) {
            if ("number" != typeof n)
                return r = x.sortedIndex(e, t), e[r] === t ? r : -1;
            r = 0 > n ? Math.max(0, i + n) : n
        }
        if (y && e.indexOf === y)
            return e.indexOf(t, n);
        for (; i > r; r++)
            if (e[r] === t)
                return r;
        return -1
    }, x.lastIndexOf = function(e, t, n) {
        if (null == e)
            return -1;
        var r = null != n;
        if (b && e.lastIndexOf === b)
            return r ? e.lastIndexOf(t, n) : e.lastIndexOf(t);
        for (var i = r ? n : e.length; i--;)
            if (e[i] === t)
                return i;
        return -1
    }, x.range = function(e, t, n) {
        arguments.length <= 1 && (t = e || 0, e = 0), n = arguments[2] || 1;
        for (var r = Math.max(Math.ceil((t - e) / n), 0), i = 0, s = new Array(r); r > i;)
            s[i++] = e, e += n;
        return s
    };
    var O = function() {};
    x.bind = function(e, t) {
        var n, r;
        if (S && e.bind === S)
            return S.apply(e, u.call(arguments, 1));
        if (!x.isFunction(e))
            throw new TypeError;
        return n = u.call(arguments, 2), r = function() {
            if (this instanceof r) {
                O.prototype = e.prototype;
                var i = new O;
                O.prototype = null;
                var s = e.apply(i, n.concat(u.call(arguments)));
                return Object(s) === s ? s : i
            }
            return e.apply(t, n.concat(u.call(arguments)))
        }
    }, x.partial = function(e) {
        var t = u.call(arguments, 1);
        return function() {
            return e.apply(this, t.concat(u.call(arguments)))
        }
    }, x.bindAll = function(e) {
        var t = u.call(arguments, 1);
        if (0 === t.length)
            throw new Error("bindAll must be passed function names");
        return T(t, function(t) {
            e[t] = x.bind(e[t], e)
        }), e
    }, x.memoize = function(e, t) {
        var n = {};
        return t || (t = x.identity),
            function() {
                var r = t.apply(this, arguments);
                return x.has(n, r) ? n[r] : n[r] = e.apply(this, arguments)
            }
    }, x.delay = function(e, t) {
        var n = u.call(arguments, 2);
        return setTimeout(function() {
            return e.apply(null, n)
        }, t)
    }, x.defer = function(e) {
        return x.delay.apply(x, [e, 1].concat(u.call(arguments, 1)))
    }, x.throttle = function(e, t, n) {
        var r, i, s, o = null,
            u = 0;
        n || (n = {});
        var a = function() {
            u = n.leading === !1 ? 0 : new Date, o = null, s = e.apply(r, i)
        };
        return function() {
            var f = new Date;
            u || n.leading !== !1 || (u = f);
            var l = t - (f - u);
            return r = this, i = arguments, 0 >= l ? (clearTimeout(o), o = null, u = f, s = e.apply(r, i)) : o || n.trailing === !1 || (o = setTimeout(a, l)), s
        }
    }, x.debounce = function(e, t, n) {
        var r, i, s, o, u;
        return function() {
            s = this, i = arguments, o = new Date;
            var a = function() {
                    var f = new Date - o;
                    t > f ? r = setTimeout(a, t - f) : (r = null, n || (u = e.apply(s, i)))
                },
                f = n && !r;
            return r || (r = setTimeout(a, t)), f && (u = e.apply(s, i)), u
        }
    }, x.once = function(e) {
        var t, n = !1;
        return function() {
            return n ? t : (n = !0, t = e.apply(this, arguments), e = null, t)
        }
    }, x.wrap = function(e, t) {
        return function() {
            var n = [e];
            return o.apply(n, arguments), t.apply(this, n)
        }
    }, x.compose = function() {
        var e = arguments;
        return function() {
            for (var t = arguments, n = e.length - 1; n >= 0; n--)
                t = [e[n].apply(this, t)];
            return t[0]
        }
    }, x.after = function(e, t) {
        return function() {
            return --e < 1 ? t.apply(this, arguments) : void 0
        }
    }, x.keys = E || function(e) {
        if (e !== Object(e))
            throw new TypeError("Invalid object");
        var t = [];
        for (var n in e)
            x.has(e, n) && t.push(n);
        return t
    }, x.values = function(e) {
        for (var t = x.keys(e), n = t.length, r = new Array(n), i = 0; n > i; i++)
            r[i] = e[t[i]];
        return r
    }, x.pairs = function(e) {
        for (var t = x.keys(e), n = t.length, r = new Array(n), i = 0; n > i; i++)
            r[i] = [t[i], e[t[i]]];
        return r
    }, x.invert = function(e) {
        for (var t = {}, n = x.keys(e), r = 0, i = n.length; i > r; r++)
            t[e[n[r]]] = n[r];
        return t
    }, x.functions = x.methods = function(e) {
        var t = [];
        for (var n in e)
            x.isFunction(e[n]) && t.push(n);
        return t.sort()
    }, x.extend = function(e) {
        return T(u.call(arguments, 1), function(t) {
            if (t)
                for (var n in t)
                    e[n] = t[n]
        }), e
    }, x.pick = function(e) {
        var t = {},
            n = a.apply(r, u.call(arguments, 1));
        return T(n, function(n) {
            n in e && (t[n] = e[n])
        }), t
    }, x.omit = function(e) {
        var t = {},
            n = a.apply(r, u.call(arguments, 1));
        for (var i in e)
            x.contains(n, i) || (t[i] = e[i]);
        return t
    }, x.defaults = function(e) {
        return T(u.call(arguments, 1), function(t) {
            if (t)
                for (var n in t)
                    e[n] === void 0 && (e[n] = t[n])
        }), e
    }, x.clone = function(e) {
        return x.isObject(e) ? x.isArray(e) ? e.slice() : x.extend({}, e) : e
    }, x.tap = function(e, t) {
        return t(e), e
    };
    var M = function(e, t, n, r) {
        if (e === t)
            return 0 !== e || 1 / e == 1 / t;
        if (null == e || null == t)
            return e === t;
        e instanceof x && (e = e._wrapped), t instanceof x && (t = t._wrapped);
        var i = f.call(e);
        if (i != f.call(t))
            return !1;
        switch (i) {
            case "[object String]":
                return e == String(t);
            case "[object Number]":
                return e != +e ? t != +t : 0 == e ? 1 / e == 1 / t : e == +t;
            case "[object Date]":
            case "[object Boolean]":
                return +e == +t;
            case "[object RegExp]":
                return e.source == t.source && e.global == t.global && e.multiline == t.multiline && e.ignoreCase == t.ignoreCase
        }
        if ("object" != typeof e || "object" != typeof t)
            return !1;
        for (var s = n.length; s--;)
            if (n[s] == e)
                return r[s] == t;
        var o = e.constructor,
            u = t.constructor;
        if (o !== u && !(x.isFunction(o) && o instanceof o && x.isFunction(u) && u instanceof u))
            return !1;
        n.push(e), r.push(t);
        var a = 0,
            l = !0;
        if ("[object Array]" == i) {
            if (a = e.length, l = a == t.length)
                for (; a-- && (l = M(e[a], t[a], n, r));)
                    ;
        } else {
            for (var c in e)
                if (x.has(e, c) && (a++, !(l = x.has(t, c) && M(e[c], t[c], n, r))))
                    break;
            if (l) {
                for (c in t)
                    if (x.has(t, c) && !(a--))
                        break;
                l = !a
            }
        }
        return n.pop(), r.pop(), l
    };
    x.isEqual = function(e, t) {
        return M(e, t, [], [])
    }, x.isEmpty = function(e) {
        if (null == e)
            return !0;
        if (x.isArray(e) || x.isString(e))
            return 0 === e.length;
        for (var t in e)
            if (x.has(e, t))
                return !1;
        return !0
    }, x.isElement = function(e) {
        return !!e && 1 === e.nodeType
    }, x.isArray = w || function(e) {
        return "[object Array]" == f.call(e)
    }, x.isObject = function(e) {
        return e === Object(e)
    }, T(["Arguments", "Function", "String", "Number", "Date", "RegExp"], function(e) {
        x["is" + e] = function(t) {
            return f.call(t) == "[object " + e + "]"
        }
    }), x.isArguments(arguments) || (x.isArguments = function(e) {
        return !!e && !!x.has(e, "callee")
    }), "function" != typeof /./ && (x.isFunction = function(e) {
        return "function" == typeof e
    }), x.isFinite = function(e) {
        return isFinite(e) && !isNaN(parseFloat(e))
    }, x.isNaN = function(e) {
        return x.isNumber(e) && e != +e
    }, x.isBoolean = function(e) {
        return e === !0 || e === !1 || "[object Boolean]" == f.call(e)
    }, x.isNull = function(e) {
        return null === e
    }, x.isUndefined = function(e) {
        return e === void 0
    }, x.has = function(e, t) {
        return l.call(e, t)
    }, x.noConflict = function() {
        return e._ = t, this
    }, x.identity = function(e) {
        return e
    }, x.times = function(e, t, n) {
        for (var r = Array(Math.max(0, e)), i = 0; e > i; i++)
            r[i] = t.call(n, i);
        return r
    }, x.random = function(e, t) {
        return null == t && (t = e, e = 0), e + Math.floor(Math.random() * (t - e + 1))
    };
    var _ = {
        escape: {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#x27;"
        }
    };
    _.unescape = x.invert(_.escape);
    var D = {
        escape: new RegExp("[" + x.keys(_.escape).join("") + "]", "g"),
        unescape: new RegExp("(" + x.keys(_.unescape).join("|") + ")", "g")
    };
    x.each(["escape", "unescape"], function(e) {
        x[e] = function(t) {
            return null == t ? "" : ("" + t).replace(D[e], function(t) {
                return _[e][t]
            })
        }
    }), x.result = function(e, t) {
        if (null == e)
            return void 0;
        var n = e[t];
        return x.isFunction(n) ? n.call(e) : n
    }, x.mixin = function(e) {
        T(x.functions(e), function(t) {
            var n = x[t] = e[t];
            x.prototype[t] = function() {
                var e = [this._wrapped];
                return o.apply(e, arguments), F.call(this, n.apply(x, e))
            }
        })
    };
    var P = 0;
    x.uniqueId = function(e) {
        var t = ++P + "";
        return e ? e + t : t
    }, x.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var H = /(.)^/,
        B = {
            "'": "'",
            "\\": "\\",
            "\r": "r",
            "\n": "n",
            "	": "t",
            "\u2028": "u2028",
            "\u2029": "u2029"
        },
        j = /\\|'|\r|\n|\t|\u2028|\u2029/g;
    x.template = function(e, t, n) {
        var r;
        n = x.defaults({}, n, x.templateSettings);
        var i = new RegExp([(n.escape || H).source, (n.interpolate || H).source, (n.evaluate || H).source].join("|") + "|$", "g"),
            s = 0,
            o = "__p+='";
        e.replace(i, function(t, n, r, i, u) {
            return o += e.slice(s, u).replace(j, function(e) {
                return "\\" + B[e]
            }), n && (o += "'+\n((__t=(" + n + "))==null?'':_.escape(__t))+\n'"), r && (o += "'+\n((__t=(" + r + "))==null?'':__t)+\n'"), i && (o += "';\n" + i + "\n__p+='"), s = u + t.length, t
        }), o += "';\n", n.variable || (o = "with(obj||{}){\n" + o + "}\n"), o = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + o + "return __p;\n";
        try {
            r = new Function(n.variable || "obj", "_", o)
        } catch (u) {
            throw u.source = o, u
        }
        if (t)
            return r(t, x);
        var a = function(e) {
            return r.call(this, e, x)
        };
        return a.source = "function(" + (n.variable || "obj") + "){\n" + o + "}", a
    }, x.chain = function(e) {
        return x(e).chain()
    };
    var F = function(e) {
        return this._chain ? x(e).chain() : e
    };
    x.mixin(x), T(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(e) {
        var t = r[e];
        x.prototype[e] = function() {
            var n = this._wrapped;
            return t.apply(n, arguments), "shift" != e && "splice" != e || 0 !== n.length || delete n[0], F.call(this, n)
        }
    }), T(["concat", "join", "slice"], function(e) {
        var t = r[e];
        x.prototype[e] = function() {
            return F.call(this, t.apply(this._wrapped, arguments))
        }
    }), x.extend(x.prototype, {
        chain: function() {
            return this._chain = !0, this
        },
        value: function() {
            return this._wrapped
        }
    })
}).call(this), define("underscore", function() {}),
    function() {
        var e = this,
            t = e.Backbone,
            n = [],
            r = n.push,
            i = n.slice,
            s = n.splice,
            o;
        typeof exports != "undefined" ? o = exports : o = e.Backbone = {}, o.VERSION = "1.1.0";
        var u = e._;
        !u && typeof require != "undefined" && (u = require("underscore")), o.$ = e.jQuery || e.Zepto || e.ender || e.$, o.noConflict = function() {
            return e.Backbone = t, this
        }, o.emulateHTTP = !1, o.emulateJSON = !1;
        var a = o.Events = {
                on: function(e, t, n) {
                    if (!l(this, "on", e, [t, n]) || !t)
                        return this;
                    this._events || (this._events = {});
                    var r = this._events[e] || (this._events[e] = []);
                    return r.push({
                        callback: t,
                        context: n,
                        ctx: n || this
                    }), this
                },
                once: function(e, t, n) {
                    if (!l(this, "once", e, [t, n]) || !t)
                        return this;
                    var r = this,
                        i = u.once(function() {
                            r.off(e, i), t.apply(this, arguments)
                        });
                    return i._callback = t, this.on(e, i, n)
                },
                off: function(e, t, n) {
                    var r, i, s, o, a, f, c, h;
                    if (!this._events || !l(this, "off", e, [t, n]))
                        return this;
                    if (!e && !t && !n)
                        return this._events = {}, this;
                    o = e ? [e] : u.keys(this._events);
                    for (a = 0, f = o.length; a < f; a++) {
                        e = o[a];
                        if (s = this._events[e]) {
                            this._events[e] = r = [];
                            if (t || n)
                                for (c = 0, h = s.length; c < h; c++)
                                    i = s[c], (t && t !== i.callback && t !== i.callback._callback || n && n !== i.context) && r.push(i);
                            r.length || delete this._events[e]
                        }
                    }
                    return this
                },
                trigger: function(e) {
                    if (!this._events)
                        return this;
                    var t = i.call(arguments, 1);
                    if (!l(this, "trigger", e, t))
                        return this;
                    var n = this._events[e],
                        r = this._events.all;
                    return n && c(n, t), r && c(r, arguments), this
                },
                stopListening: function(e, t, n) {
                    var r = this._listeningTo;
                    if (!r)
                        return this;
                    var i = !t && !n;
                    !n && typeof t == "object" && (n = this), e && ((r = {})[e._listenId] = e);
                    for (var s in r)
                        e = r[s], e.off(t, n, this), (i || u.isEmpty(e._events)) && delete this._listeningTo[s];
                    return this
                }
            },
            f = /\s+/,
            l = function(e, t, n, r) {
                if (!n)
                    return !0;
                if (typeof n == "object") {
                    for (var i in n)
                        e[t].apply(e, [i, n[i]].concat(r));
                    return !1
                }
                if (f.test(n)) {
                    var s = n.split(f);
                    for (var o = 0, u = s.length; o < u; o++)
                        e[t].apply(e, [s[o]].concat(r));
                    return !1
                }
                return !0
            },
            c = function(e, t) {
                var n, r = -1,
                    i = e.length,
                    s = t[0],
                    o = t[1],
                    u = t[2];
                switch (t.length) {
                    case 0:
                        while (++r < i)
                            (n = e[r]).callback.call(n.ctx);
                        return;
                    case 1:
                        while (++r < i)
                            (n = e[r]).callback.call(n.ctx, s);
                        return;
                    case 2:
                        while (++r < i)
                            (n = e[r]).callback.call(n.ctx, s, o);
                        return;
                    case 3:
                        while (++r < i)
                            (n = e[r]).callback.call(n.ctx, s, o, u);
                        return;
                    default:
                        while (++r < i)
                            (n = e[r]).callback.apply(n.ctx, t)
                }
            },
            h = {
                listenTo: "on",
                listenToOnce: "once"
            };
        u.each(h, function(e, t) {
            a[t] = function(t, n, r) {
                var i = this._listeningTo || (this._listeningTo = {}),
                    s = t._listenId || (t._listenId = u.uniqueId("l"));
                return i[s] = t, !r && typeof n == "object" && (r = this), t[e](n, r, this), this
            }
        }), a.bind = a.on, a.unbind = a.off, u.extend(o, a);
        var p = o.Model = function(e, t) {
            var n = e || {};
            t || (t = {}), this.cid = u.uniqueId("c"), this.attributes = {}, t.collection && (this.collection = t.collection), t.parse && (n = this.parse(n, t) || {}), n = u.defaults({}, n, u.result(this, "defaults")), this.set(n, t), this.changed = {}, this.initialize.apply(this, arguments)
        };
        u.extend(p.prototype, a, {
            changed: null,
            validationError: null,
            idAttribute: "id",
            initialize: function() {},
            toJSON: function(e) {
                return u.clone(this.attributes)
            },
            sync: function() {
                return o.sync.apply(this, arguments)
            },
            get: function(e) {
                return this.attributes[e]
            },
            escape: function(e) {
                return u.escape(this.get(e))
            },
            has: function(e) {
                return this.get(e) != null
            },
            set: function(e, t, n) {
                var r, i, s, o, a, f, l, c;
                if (e == null)
                    return this;
                typeof e == "object" ? (i = e, n = t) : (i = {})[e] = t, n || (n = {});
                if (!this._validate(i, n))
                    return !1;
                s = n.unset, a = n.silent, o = [], f = this._changing, this._changing = !0, f || (this._previousAttributes = u.clone(this.attributes), this.changed = {}), c = this.attributes, l = this._previousAttributes, this.idAttribute in i && (this.id = i[this.idAttribute]);
                for (r in i)
                    t = i[r], u.isEqual(c[r], t) || o.push(r), u.isEqual(l[r], t) ? delete this.changed[r] : this.changed[r] = t, s ? delete c[r] : c[r] = t;
                if (!a) {
                    o.length && (this._pending = !0);
                    for (var h = 0, p = o.length; h < p; h++)
                        this.trigger("change:" + o[h], this, c[o[h]], n)
                }
                if (f)
                    return this;
                if (!a)
                    while (this._pending)
                        this._pending = !1, this.trigger("change", this, n);
                return this._pending = !1, this._changing = !1, this
            },
            unset: function(e, t) {
                return this.set(e, void 0, u.extend({}, t, {
                    unset: !0
                }))
            },
            clear: function(e) {
                var t = {};
                for (var n in this.attributes)
                    t[n] = void 0;
                return this.set(t, u.extend({}, e, {
                    unset: !0
                }))
            },
            hasChanged: function(e) {
                return e == null ? !u.isEmpty(this.changed) : u.has(this.changed, e)
            },
            changedAttributes: function(e) {
                if (!e)
                    return this.hasChanged() ? u.clone(this.changed) : !1;
                var t, n = !1,
                    r = this._changing ? this._previousAttributes : this.attributes;
                for (var i in e) {
                    if (u.isEqual(r[i], t = e[i]))
                        continue;
                    (n || (n = {}))[i] = t
                }
                return n
            },
            previous: function(e) {
                return e == null || !this._previousAttributes ? null : this._previousAttributes[e]
            },
            previousAttributes: function() {
                return u.clone(this._previousAttributes)
            },
            fetch: function(e) {
                e = e ? u.clone(e) : {}, e.parse === void 0 && (e.parse = !0);
                var t = this,
                    n = e.success;
                return e.success = function(r) {
                    if (!t.set(t.parse(r, e), e))
                        return !1;
                    n && n(t, r, e), t.trigger("sync", t, r, e)
                }, F(this, e), this.sync("read", this, e)
            },
            save: function(e, t, n) {
                var r, i, s, o = this.attributes;
                e == null || typeof e == "object" ? (r = e, n = t) : (r = {})[e] = t, n = u.extend({
                    validate: !0
                }, n);
                if (r && !n.wait) {
                    if (!this.set(r, n))
                        return !1
                } else if (!this._validate(r, n))
                    return !1;
                r && n.wait && (this.attributes = u.extend({}, o, r)), n.parse === void 0 && (n.parse = !0);
                var a = this,
                    f = n.success;
                return n.success = function(e) {
                    a.attributes = o;
                    var t = a.parse(e, n);
                    n.wait && (t = u.extend(r || {}, t));
                    if (u.isObject(t) && !a.set(t, n))
                        return !1;
                    f && f(a, e, n), a.trigger("sync", a, e, n)
                }, F(this, n), i = this.isNew() ? "create" : n.patch ? "patch" : "update", i === "patch" && (n.attrs = r), s = this.sync(i, this, n), r && n.wait && (this.attributes = o), s
            },
            destroy: function(e) {
                e = e ? u.clone(e) : {};
                var t = this,
                    n = e.success,
                    r = function() {
                        t.trigger("destroy", t, t.collection, e)
                    };
                e.success = function(i) {
                    (e.wait || t.isNew()) && r(), n && n(t, i, e), t.isNew() || t.trigger("sync", t, i, e)
                };
                if (this.isNew())
                    return e.success(), !1;
                F(this, e);
                var i = this.sync("delete", this, e);
                return e.wait || r(), i
            },
            url: function() {
                var e = u.result(this, "urlRoot") || u.result(this.collection, "url") || j();
                return this.isNew() ? e : e + (e.charAt(e.length - 1) === "/" ? "" : "/") + encodeURIComponent(this.id)
            },
            parse: function(e, t) {
                return e
            },
            clone: function() {
                return new this.constructor(this.attributes)
            },
            isNew: function() {
                return this.id == null
            },
            isValid: function(e) {
                return this._validate({}, u.extend(e || {}, {
                    validate: !0
                }))
            },
            _validate: function(e, t) {
                if (!t.validate || !this.validate)
                    return !0;
                e = u.extend({}, this.attributes, e);
                var n = this.validationError = this.validate(e, t) || null;
                return n ? (this.trigger("invalid", this, n, u.extend(t, {
                    validationError: n
                })), !1) : !0
            }
        });
        var d = ["keys", "values", "pairs", "invert", "pick", "omit"];
        u.each(d, function(e) {
            p.prototype[e] = function() {
                var t = i.call(arguments);
                return t.unshift(this.attributes), u[e].apply(u, t)
            }
        });
        var v = o.Collection = function(e, t) {
                t || (t = {}), t.model && (this.model = t.model), t.comparator !== void 0 && (this.comparator = t.comparator), this._reset(), this.initialize.apply(this, arguments), e && this.reset(e, u.extend({
                    silent: !0
                }, t))
            },
            m = {
                add: !0,
                remove: !0,
                merge: !0
            },
            g = {
                add: !0,
                remove: !1
            };
        u.extend(v.prototype, a, {
            model: p,
            initialize: function() {},
            toJSON: function(e) {
                return this.map(function(t) {
                    return t.toJSON(e)
                })
            },
            sync: function() {
                return o.sync.apply(this, arguments)
            },
            add: function(e, t) {
                return this.set(e, u.extend({
                    merge: !1
                }, t, g))
            },
            remove: function(e, t) {
                var n = !u.isArray(e);
                e = n ? [e] : u.clone(e), t || (t = {});
                var r, i, s, o;
                for (r = 0, i = e.length; r < i; r++) {
                    o = e[r] = this.get(e[r]);
                    if (!o)
                        continue;
                    delete this._byId[o.id], delete this._byId[o.cid], s = this.indexOf(o), this.models.splice(s, 1), this.length--, t.silent || (t.index = s, o.trigger("remove", o, this, t)), this._removeReference(o)
                }
                return n ? e[0] : e
            },
            set: function(e, t) {
                t = u.defaults({}, t, m), t.parse && (e = this.parse(e, t));
                var n = !u.isArray(e);
                e = n ? e ? [e] : [] : u.clone(e);
                var r, i, s, o, a, f, l, c = t.at,
                    h = this.model,
                    d = this.comparator && c == null && t.sort !== !1,
                    v = u.isString(this.comparator) ? this.comparator : null,
                    g = [],
                    y = [],
                    b = {},
                    w = t.add,
                    E = t.merge,
                    S = t.remove,
                    x = !d && w && S ? [] : !1;
                for (r = 0, i = e.length; r < i; r++) {
                    a = e[r], a instanceof p ? s = o = a : s = a[h.prototype.idAttribute];
                    if (f = this.get(s))
                        S && (b[f.cid] = !0), E && (a = a === o ? o.attributes : a, t.parse && (a = f.parse(a, t)), f.set(a, t), d && !l && f.hasChanged(v) && (l = !0)), e[r] = f;
                    else if (w) {
                        o = e[r] = this._prepareModel(a, t);
                        if (!o)
                            continue;
                        g.push(o), o.on("all", this._onModelEvent, this), this._byId[o.cid] = o, o.id != null && (this._byId[o.id] = o)
                    }
                    x && x.push(f || o)
                }
                if (S) {
                    for (r = 0, i = this.length; r < i; ++r)
                        b[(o = this.models[r]).cid] || y.push(o);
                    y.length && this.remove(y, t)
                }
                if (g.length || x && x.length) {
                    d && (l = !0), this.length += g.length;
                    if (c != null)
                        for (r = 0, i = g.length; r < i; r++)
                            this.models.splice(c + r, 0, g[r]);
                    else {
                        x && (this.models.length = 0);
                        var T = x || g;
                        for (r = 0, i = T.length; r < i; r++)
                            this.models.push(T[r])
                    }
                }
                l && this.sort({
                    silent: !0
                });
                if (!t.silent) {
                    for (r = 0, i = g.length; r < i; r++)
                        (o = g[r]).trigger("add", o, this, t);
                    (l || x && x.length) && this.trigger("sort", this, t)
                }
                return n ? e[0] : e
            },
            reset: function(e, t) {
                t || (t = {});
                for (var n = 0, r = this.models.length; n < r; n++)
                    this._removeReference(this.models[n]);
                return t.previousModels = this.models, this._reset(), e = this.add(e, u.extend({
                    silent: !0
                }, t)), t.silent || this.trigger("reset", this, t), e
            },
            push: function(e, t) {
                return this.add(e, u.extend({
                    at: this.length
                }, t))
            },
            pop: function(e) {
                var t = this.at(this.length - 1);
                return this.remove(t, e), t
            },
            unshift: function(e, t) {
                return this.add(e, u.extend({
                    at: 0
                }, t))
            },
            shift: function(e) {
                var t = this.at(0);
                return this.remove(t, e), t
            },
            slice: function() {
                return i.apply(this.models, arguments)
            },
            get: function(e) {
                return e == null ? void 0 : this._byId[e.id] || this._byId[e.cid] || this._byId[e]
            },
            at: function(e) {
                return this.models[e]
            },
            where: function(e, t) {
                return u.isEmpty(e) ? t ? void 0 : [] : this[t ? "find" : "filter"](function(t) {
                    for (var n in e)
                        if (e[n] !== t.get(n))
                            return !1;
                    return !0
                })
            },
            findWhere: function(e) {
                return this.where(e, !0)
            },
            sort: function(e) {
                if (!this.comparator)
                    throw new Error("Cannot sort a set without a comparator");
                return e || (e = {}), u.isString(this.comparator) || this.comparator.length === 1 ? this.models = this.sortBy(this.comparator, this) : this.models.sort(u.bind(this.comparator, this)), e.silent || this.trigger("sort", this, e), this
            },
            pluck: function(e) {
                return u.invoke(this.models, "get", e)
            },
            fetch: function(e) {
                e = e ? u.clone(e) : {}, e.parse === void 0 && (e.parse = !0);
                var t = e.success,
                    n = this;
                return e.success = function(r) {
                    var i = e.reset ? "reset" : "set";
                    n[i](r, e), t && t(n, r, e), n.trigger("sync", n, r, e)
                }, F(this, e), this.sync("read", this, e)
            },
            create: function(e, t) {
                t = t ? u.clone(t) : {};
                if (!(e = this._prepareModel(e, t)))
                    return !1;
                t.wait || this.add(e, t);
                var n = this,
                    r = t.success;
                return t.success = function(e, t, i) {
                    i.wait && n.add(e, i), r && r(e, t, i)
                }, e.save(null, t), e
            },
            parse: function(e, t) {
                return e
            },
            clone: function() {
                return new this.constructor(this.models)
            },
            _reset: function() {
                this.length = 0, this.models = [], this._byId = {}
            },
            _prepareModel: function(e, t) {
                if (e instanceof p)
                    return e.collection || (e.collection = this), e;
                t = t ? u.clone(t) : {}, t.collection = this;
                var n = new this.model(e, t);
                return n.validationError ? (this.trigger("invalid", this, n.validationError, t), !1) : n
            },
            _removeReference: function(e) {
                this === e.collection && delete e.collection, e.off("all", this._onModelEvent, this)
            },
            _onModelEvent: function(e, t, n, r) {
                if ((e === "add" || e === "remove") && n !== this)
                    return;
                e === "destroy" && this.remove(t, r), t && e === "change:" + t.idAttribute && (delete this._byId[t.previous(t.idAttribute)], t.id != null && (this._byId[t.id] = t)), this.trigger.apply(this, arguments)
            }
        });
        var y = ["forEach", "each", "map", "collect", "reduce", "foldl", "inject", "reduceRight", "foldr", "find", "detect", "filter", "select", "reject", "every", "all", "some", "any", "include", "contains", "invoke", "max", "min", "toArray", "size", "first", "head", "take", "initial", "rest", "tail", "drop", "last", "without", "difference", "indexOf", "shuffle", "lastIndexOf", "isEmpty", "chain"];
        u.each(y, function(e) {
            v.prototype[e] = function() {
                var t = i.call(arguments);
                return t.unshift(this.models), u[e].apply(u, t)
            }
        });
        var b = ["groupBy", "countBy", "sortBy"];
        u.each(b, function(e) {
            v.prototype[e] = function(t, n) {
                var r = u.isFunction(t) ? t : function(e) {
                    return e.get(t)
                };
                return u[e](this.models, r, n)
            }
        });
        var w = o.View = function(e) {
                this.cid = u.uniqueId("view"), e || (e = {}), u.extend(this, u.pick(e, S)), this._ensureElement(), this.initialize.apply(this, arguments), this.delegateEvents()
            },
            E = /^(\S+)\s*(.*)$/,
            S = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
        u.extend(w.prototype, a, {
            tagName: "div",
            $: function(e) {
                return this.$el.find(e)
            },
            initialize: function() {},
            render: function() {
                return this
            },
            remove: function() {
                return this.$el.remove(), this.stopListening(), this
            },
            setElement: function(e, t) {
                return this.$el && this.undelegateEvents(), this.$el = e instanceof o.$ ? e : o.$(e), this.el = this.$el[0], t !== !1 && this.delegateEvents(), this
            },
            delegateEvents: function(e) {
                if (!e && !(e = u.result(this, "events")))
                    return this;
                this.undelegateEvents();
                for (var t in e) {
                    var n = e[t];
                    u.isFunction(n) || (n = this[e[t]]);
                    if (!n)
                        continue;
                    var r = t.match(E),
                        i = r[1],
                        s = r[2];
                    n = u.bind(n, this), i += ".delegateEvents" + this.cid, s === "" ? this.$el.on(i, n) : this.$el.on(i, s, n)
                }
                return this
            },
            undelegateEvents: function() {
                return this.$el.off(".delegateEvents" + this.cid), this
            },
            _ensureElement: function() {
                if (!this.el) {
                    var e = u.extend({}, u.result(this, "attributes"));
                    this.id && (e.id = u.result(this, "id")), this.className && (e["class"] = u.result(this, "className"));
                    var t = o.$("<" + u.result(this, "tagName") + ">").attr(e);
                    this.setElement(t, !1)
                } else
                    this.setElement(u.result(this, "el"), !1)
            }
        }), o.sync = function(e, t, n) {
            var r = T[e];
            u.defaults(n || (n = {}), {
                emulateHTTP: o.emulateHTTP,
                emulateJSON: o.emulateJSON
            });
            var i = {
                type: r,
                dataType: "json"
            };
            n.url || (i.url = u.result(t, "url") || j()), n.data == null && t && (e === "create" || e === "update" || e === "patch") && (i.contentType = "application/json", i.data = JSON.stringify(n.attrs || t.toJSON(n))), n.emulateJSON && (i.contentType = "application/x-www-form-urlencoded", i.data = i.data ? {
                model: i.data
            } : {});
            if (n.emulateHTTP && (r === "PUT" || r === "DELETE" || r === "PATCH")) {
                i.type = "POST", n.emulateJSON && (i.data._method = r);
                var s = n.beforeSend;
                n.beforeSend = function(e) {
                    e.setRequestHeader("X-HTTP-Method-Override", r);
                    if (s)
                        return s.apply(this, arguments)
                }
            }
            i.type !== "GET" && !n.emulateJSON && (i.processData = !1), i.type === "PATCH" && x && (i.xhr = function() {
                return new ActiveXObject("Microsoft.XMLHTTP")
            });
            var a = n.xhr = o.ajax(u.extend(i, n));
            return t.trigger("request", t, a, n), a
        };
        var x = typeof window != "undefined" && !!window.ActiveXObject && (!window.XMLHttpRequest || !(new XMLHttpRequest).dispatchEvent),
            T = {
                create: "POST",
                update: "PUT",
                patch: "PATCH",
                "delete": "DELETE",
                read: "GET"
            };
        o.ajax = function() {
            return o.$.ajax.apply(o.$, arguments)
        };
        var N = o.Router = function(e) {
                e || (e = {}), e.routes && (this.routes = e.routes), this._bindRoutes(), this.initialize.apply(this, arguments)
            },
            C = /\((.*?)\)/g,
            k = /(\(\?)?:\w+/g,
            L = /\*\w+/g,
            A = /[\-{}\[\]+?.,\\\^$|#\s]/g;
        u.extend(N.prototype, a, {
            initialize: function() {},
            route: function(e, t, n) {
                u.isRegExp(e) || (e = this._routeToRegExp(e)), u.isFunction(t) && (n = t, t = ""), n || (n = this[t]);
                var r = this;
                return o.history.route(e, function(i) {
                    var s = r._extractParameters(e, i);
                    n && n.apply(r, s), r.trigger.apply(r, ["route:" + t].concat(s)), r.trigger("route", t, s), o.history.trigger("route", r, t, s)
                }), this
            },
            navigate: function(e, t) {
                return o.history.navigate(e, t), this
            },
            _bindRoutes: function() {
                if (!this.routes)
                    return;
                this.routes = u.result(this, "routes");
                var e, t = u.keys(this.routes);
                while ((e = t.pop()) != null)
                    this.route(e, this.routes[e])
            },
            _routeToRegExp: function(e) {
                return e = e.replace(A, "\\$&").replace(C, "(?:$1)?").replace(k, function(e, t) {
                    return t ? e : "([^/]+)"
                }).replace(L, "(.*?)"), new RegExp("^" + e + "$")
            },
            _extractParameters: function(e, t) {
                var n = e.exec(t).slice(1);
                return u.map(n, function(e) {
                    return e ? decodeURIComponent(e) : null
                })
            }
        });
        var O = o.History = function() {
                this.handlers = [], u.bindAll(this, "checkUrl"), typeof window != "undefined" && (this.location = window.location, this.history = window.history)
            },
            M = /^[#\/]|\s+$/g,
            _ = /^\/+|\/+$/g,
            D = /msie [\w.]+/,
            P = /\/$/,
            H = /[?#].*$/;
        O.started = !1, u.extend(O.prototype, a, {
            interval: 50,
            getHash: function(e) {
                var t = (e || this).location.href.match(/#(.*)$/);
                return t ? t[1] : ""
            },
            getFragment: function(e, t) {
                if (e == null)
                    if (this._hasPushState || !this._wantsHashChange || t) {
                        e = this.location.pathname;
                        var n = this.root.replace(P, "");
                        e.indexOf(n) || (e = e.slice(n.length))
                    } else
                        e = this.getHash();
                return e.replace(M, "")
            },
            start: function(e) {
                if (O.started)
                    throw new Error("Backbone.history has already been started");
                O.started = !0, this.options = u.extend({
                    root: "/"
                }, this.options, e), this.root = this.options.root, this._wantsHashChange = this.options.hashChange !== !1, this._wantsPushState = !!this.options.pushState, this._hasPushState = !!(this.options.pushState && this.history && this.history.pushState);
                var t = this.getFragment(),
                    n = document.documentMode,
                    r = D.exec(navigator.userAgent.toLowerCase()) && (!n || n <= 7);
                this.root = ("/" + this.root + "/").replace(_, "/"), r && this._wantsHashChange && (this.iframe = o.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo("body")[0].contentWindow, this.navigate(t)), this._hasPushState ? o.$(window).on("popstate", this.checkUrl) : this._wantsHashChange && "onhashchange" in window && !r ? o.$(window).on("hashchange", this.checkUrl) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)), this.fragment = t;
                var i = this.location,
                    s = i.pathname.replace(/[^\/]$/, "$&/") === this.root;
                if (this._wantsHashChange && this._wantsPushState) {
                    if (!this._hasPushState && !s)
                        return this.fragment = this.getFragment(null, !0), this.location.replace(this.root + this.location.search + "#" + this.fragment), !0;
                    this._hasPushState && s && i.hash && (this.fragment = this.getHash().replace(M, ""), this.history.replaceState({}, document.title, this.root + this.fragment + i.search))
                }
                if (!this.options.silent)
                    return this.loadUrl()
            },
            stop: function() {
                o.$(window).off("popstate", this.checkUrl).off("hashchange", this.checkUrl), clearInterval(this._checkUrlInterval), O.started = !1
            },
            route: function(e, t) {
                this.handlers.unshift({
                    route: e,
                    callback: t
                })
            },
            checkUrl: function(e) {
                var t = this.getFragment();
                t === this.fragment && this.iframe && (t = this.getFragment(this.getHash(this.iframe)));
                if (t === this.fragment)
                    return !1;
                this.iframe && this.navigate(t), this.loadUrl()
            },
            loadUrl: function(e) {
                return e = this.fragment = this.getFragment(e), u.any(this.handlers, function(t) {
                    if (t.route.test(e))
                        return t.callback(e), !0
                })
            },
            navigate: function(e, t) {
                if (!O.started)
                    return !1;
                if (!t || t === !0)
                    t = {
                        trigger: !!t
                    };
                var n = this.root + (e = this.getFragment(e || ""));
                e = e.replace(H, "");
                if (this.fragment === e)
                    return;
                this.fragment = e, e === "" && n !== "/" && (n = n.slice(0, -1));
                if (this._hasPushState)
                    this.history[t.replace ? "replaceState" : "pushState"]({}, document.title, n);
                else {
                    if (!this._wantsHashChange)
                        return this.location.assign(n);
                    this._updateHash(this.location, e, t.replace), this.iframe && e !== this.getFragment(this.getHash(this.iframe)) && (t.replace || this.iframe.document.open().close(), this._updateHash(this.iframe.location, e, t.replace))
                }
                if (t.trigger)
                    return this.loadUrl(e)
            },
            _updateHash: function(e, t, n) {
                if (n) {
                    var r = e.href.replace(/(javascript:|#).*$/, "");
                    e.replace(r + "#" + t)
                } else
                    e.hash = "#" + t
            }
        }), o.history = new O;
        var B = function(e, t) {
            var n = this,
                r;
            e && u.has(e, "constructor") ? r = e.constructor : r = function() {
                return n.apply(this, arguments)
            }, u.extend(r, n, t);
            var i = function() {
                this.constructor = r
            };
            return i.prototype = n.prototype, r.prototype = new i, e && u.extend(r.prototype, e), r.__super__ = n.prototype, r
        };
        p.extend = v.extend = N.extend = w.extend = O.extend = B;
        var j = function() {
                throw new Error('A "url" property or function must be specified')
            },
            F = function(e, t) {
                var n = t.error;
                t.error = function(r) {
                    n && n(e, r, t), e.trigger("error", e, r, t)
                }
            }
    }.call(this), define("backbone", ["underscore"], function(e) {
    return function() {
        var t, n;
        return t || e.Backbone
    }
}(this));
var dust = {};
(function(dust) {
    function Context(e, t, n) {
        this.stack = e, this.global = t, this.blocks = n
    }

    function Stack(e, t, n, r) {
        this.tail = t, this.isObject = !dust.isArray(e) && e && typeof e == "object", this.head = e, this.index = n, this.of = r
    }

    function Stub(e) {
        this.head = new Chunk(this), this.callback = e, this.out = ""
    }

    function Stream() {
        this.head = new Chunk(this)
    }

    function Chunk(e, t, n) {
        this.root = e, this.next = t, this.data = "", this.flushable = !1, this.taps = n
    }

    function Tap(e, t) {
        this.head = e, this.tail = t
    }

    dust.cache = {}, dust.register = function(e, t) {
        if (!e)
            return;
        dust.cache[e] = t
    }, dust.render = function(e, t, n) {
        var r = (new Stub(n)).head;
        dust.load(e, r, Context.wrap(t)).end()
    }, dust.stream = function(e, t) {
        var n = new Stream;
        return dust.nextTick(function() {
            dust.load(e, n.head, Context.wrap(t)).end()
        }), n
    }, dust.renderSource = function(e, t, n) {
        return dust.compileFn(e)(t, n)
    }, dust.compileFn = function(e, t) {
        var n = dust.loadSource(dust.compile(e, t));
        return function(e, t) {
            var r = t ? new Stub(t) : new Stream;
            return dust.nextTick(function() {
                n(r.head, Context.wrap(e)).end()
            }), r
        }
    }, dust.load = function(e, t, n) {
        var r = dust.cache[e];
        return r ? r(t, n) : dust.onLoad ? t.map(function(t) {
            dust.onLoad(e, function(r, i) {
                if (r)
                    return t.setError(r);
                dust.cache[e] || dust.loadSource(dust.compile(i, e)), dust.cache[e](t, n).end()
            })
        }) : t.setError(new Error("Template Not Found: " + e))
    }, dust.loadSource = function(source, path) {
        return eval(source)
    }, Array.isArray ? dust.isArray = Array.isArray : dust.isArray = function(e) {
        return Object.prototype.toString.call(e) == "[object Array]"
    }, dust.nextTick = function(e) {
        setTimeout(e, 0)
    }, dust.isEmpty = function(e) {
        return dust.isArray(e) && !e.length ? !0 : e === 0 ? !1 : !e
    }, dust.filter = function(e, t, n) {
        if (n)
            for (var r = 0, i = n.length; r < i; r++) {
                var s = n[r];
                s === "s" ? t = null : e = dust.filters[s](e)
            }
        return t && (e = dust.filters[t](e)), e
    }, dust.filters = {
        h: function(e) {
            return dust.escapeHtml(e)
        },
        j: function(e) {
            return dust.escapeJs(e)
        },
        u: encodeURI,
        uc: encodeURIComponent
    }, dust.makeBase = function(e) {
        return new Context(new Stack, e)
    }, Context.wrap = function(e) {
        return e instanceof Context ? e : new Context(new Stack(e))
    }, Context.prototype.get = function(e) {
        var t = this.stack,
            n;
        while (t) {
            if (t.isObject) {
                n = t.head[e];
                if (n !== undefined)
                    return n
            }
            t = t.tail
        }
        return this.global ? this.global[e] : undefined
    }, Context.prototype.getPath = function(e, t) {
        var n = this.stack,
            r = t.length;
        if (e && r === 0)
            return n.head;
        if (!n.isObject)
            return undefined;
        n = n.head;
        var i = 0;
        while (n && i < r)
            n = n[t[i]], i++;
        return n
    }, Context.prototype.push = function(e, t, n) {
        return e && (e.$idx = t, e.$len = n), new Context(new Stack(e, this.stack, t, n), this.global, this.blocks)
    }, Context.prototype.rebase = function(e) {
        return new Context(new Stack(e), this.global, this.blocks)
    }, Context.prototype.current = function() {
        return this.stack.head
    }, Context.prototype.getBlock = function(e) {
        var t = this.blocks;
        if (!t)
            return;
        var n = t.length,
            r;
        while (n--) {
            r = t[n][e];
            if (r)
                return r
        }
    }, Context.prototype.shiftBlocks = function(e) {
        var t = this.blocks;
        return e ? (t ? newBlocks = t.concat([e]) : newBlocks = [e], new Context(this.stack, this.global, newBlocks)) : this
    }, Stub.prototype.flush = function() {
        var e = this.head;
        while (e) {
            if (!e.flushable) {
                if (e.error) {
                    this.callback(e.error), this.flush = function() {};
                    return
                }
                return
            }
            this.out += e.data, e = e.next, this.head = e
        }
        this.callback(null, this.out)
    }, Stream.prototype.flush = function() {
        var e = this.head;
        while (e) {
            if (!e.flushable) {
                if (e.error) {
                    this.emit("error", e.error), this.flush = function() {};
                    return
                }
                return
            }
            this.emit("data", e.data), e = e.next, this.head = e
        }
        this.emit("end")
    }, Stream.prototype.emit = function(e, t) {
        var n = this.events;
        n && n[e] && n[e](t)
    }, Stream.prototype.on = function(e, t) {
        return this.events || (this.events = {}), this.events[e] = t, this
    }, Chunk.prototype.write = function(e) {
        var t = this.taps;
        return t && (e = t.go(e)), this.data += e, this
    }, Chunk.prototype.end = function(e) {
        return e && this.write(e), this.flushable = !0, this.root.flush(), this
    }, Chunk.prototype.map = function(e) {
        var t = new Chunk(this.root, this.next, this.taps),
            n = new Chunk(this.root, t, this.taps);
        return this.next = n, this.flushable = !0, e(n), t
    }, Chunk.prototype.tap = function(e) {
        var t = this.taps;
        return t ? this.taps = t.push(e) : this.taps = new Tap(e), this
    }, Chunk.prototype.untap = function() {
        return this.taps = this.taps.tail, this
    }, Chunk.prototype.render = function(e, t) {
        return e(this, t)
    }, Chunk.prototype.reference = function(e, t, n, r) {
        if (typeof e == "function") {
            e = e(this, t, null, {
                auto: n,
                filters: r
            });
            if (e instanceof Chunk)
                return e
        }
        return dust.isEmpty(e) ? this : this.write(dust.filter(e, n, r))
    }, Chunk.prototype.section = function(e, t, n, r) {
        if (typeof e == "function") {
            e = e(this, t, n, r);
            if (e instanceof Chunk)
                return e
        }
        var i = n.block,
            s = n["else"];
        r && (t = t.push(r));
        if (dust.isArray(e)) {
            if (i) {
                var o = e.length,
                    u = this;
                for (var a = 0; a < o; a++)
                    u = i(u, t.push(e[a], a, o));
                return u
            }
        } else if (e === !0) {
            if (i)
                return i(this, t)
        } else if (e || e === 0) {
            if (i)
                return i(this, t.push(e))
        } else if (s)
            return s(this, t);
        return this
    }, Chunk.prototype.exists = function(e, t, n) {
        var r = n.block,
            i = n["else"];
        if (!dust.isEmpty(e)) {
            if (r)
                return r(this, t)
        } else if (i)
            return i(this, t);
        return this
    }, Chunk.prototype.notexists = function(e, t, n) {
        var r = n.block,
            i = n["else"];
        if (dust.isEmpty(e)) {
            if (r)
                return r(this, t)
        } else if (i)
            return i(this, t);
        return this
    }, Chunk.prototype.block = function(e, t, n) {
        var r = n.block;
        return e && (r = e), r ? r(this, t) : this
    }, Chunk.prototype.partial = function(e, t) {
        return typeof e == "function" ? this.capture(e, t, function(e, n) {
            dust.load(e, n, t).end()
        }) : dust.load(e, this, t)
    }, Chunk.prototype.helper = function(e, t, n, r) {
        return dust.helpers[e](this, t, n, r)
    }, Chunk.prototype.capture = function(e, t, n) {
        return this.map(function(r) {
            var i = new Stub(function(e, t) {
                e ? r.setError(e) : n(t, r)
            });
            e(i.head, t).end()
        })
    }, Chunk.prototype.setError = function(e) {
        return this.error = e, this.root.flush(), this
    }, Tap.prototype.push = function(e) {
        return new Tap(e, this)
    }, Tap.prototype.go = function(e) {
        var t = this;
        while (t)
            e = t.head(e), t = t.tail;
        return e
    };
    var HCHARS = new RegExp(/[&<>\"]/),
        AMP = /&/g,
        LT = /</g,
        GT = />/g,
        QUOT = /\"/g;
    dust.escapeHtml = function(e) {
        return typeof e == "string" ? HCHARS.test(e) ? e.replace(AMP, "&amp;").replace(LT, "&lt;").replace(GT, "&gt;").replace(QUOT, "&quot;") : e : e
    };
    var BS = /\\/g,
        CR = /\r/g,
        LS = /\u2028/g,
        PS = /\u2029/g,
        NL = /\n/g,
        LF = /\f/g,
        SQ = /'/g,
        DQ = /"/g,
        TB = /\t/g;
    dust.escapeJs = function(e) {
        return typeof e == "string" ? e.replace(BS, "\\\\").replace(DQ, '\\"').replace(SQ, "\\'").replace(CR, "\\r").replace(LS, "\\u2028").replace(PS, "\\u2029").replace(NL, "\\n").replace(LF, "\\f").replace(TB, "\\t") : e
    }
})(dust), typeof exports != "undefined" && (dust.helpers = require("./dust-helpers").helpers, typeof process != "undefined" && typeof window == "undefined" && require("./server")(dust), module.exports = dust),
    function(dust) {
        var helpers = {
            sep: function(e, t, n) {
                return t.stack.index === t.stack.of - 1 ? e : n.block(e, t)
            },
            idx: function(e, t, n) {
                return n.block(e, t.push(t.stack.index))
            },
            "if": function(chunk, context, bodies, params) {
                var cond = params.cond;
                if (params && params.cond) {
                    typeof cond == "function" && (cond = "", chunk.tap(function(e) {
                        return cond += e, ""
                    }).render(params.cond, context).untap(), cond === "" && (cond = !1));
                    if (eval(cond))
                        return chunk.render(bodies.block, context);
                    if (bodies["else"])
                        return chunk.render(bodies["else"], context)
                } else
                    window.console && window.console.log("No expression given!");
                return chunk
            }
        };
        dust.helpers = helpers
    }(typeof exports != "undefined" ? exports : window.dust),
    function(e) {
        function t(t) {
            var n = {};
            return e.filterNode(n, t)
        }

        function n(t, n) {
            var r = [n[0]];
            for (var i = 1, s = n.length; i < s; i++) {
                var o = e.filterNode(t, n[i]);
                o && r.push(o)
            }
            return r
        }

        function r(t, n) {
            var r = [n[0]],
                i;
            for (var s = 1, o = n.length; s < o; s++) {
                var u = e.filterNode(t, n[s]);
                u && (u[0] === "buffer" ? i ? i[1] += u[1] : (i = u, r.push(u)) : (i = null, r.push(u)))
            }
            return r
        }

        function s(e, t) {
            return ["buffer", i[t[1]]]
        }

        function o(e, t) {
            return t
        }

        function u() {}

        function a(t, n) {
            var r = {
                name: n,
                bodies: [],
                blocks: {},
                index: 0,
                auto: "h"
            };
            return "(function(){dust.register(" + (n ? '"' + n + '"' : "null") + "," + e.compileNode(r, t) + ");" + f(r) + l(r) + "return body_0;" + "})();"
        }

        function f(e) {
            var t = [],
                n = e.blocks;
            for (var r in n)
                t.push(r + ":" + n[r]);
            return t.length ? (e.blocks = "ctx=ctx.shiftBlocks(blocks);", "var blocks={" + t.join(",") + "};") : e.blocks = ""
        }

        function l(e) {
            var t = [],
                n = e.bodies,
                r = e.blocks;
            for (var i = 0, s = n.length; i < s; i++)
                t[i] = "function body_" + i + "(chk,ctx){" + r + "return chk" + n[i] + ";}";
            return t.join("")
        }

        function c(t, n) {
            var r = "";
            for (var i = 1, s = n.length; i < s; i++)
                r += e.compileNode(t, n[i]);
            return r
        }

        function h(t, n, r) {
            return "." + r + "(" + e.compileNode(t, n[1]) + "," + e.compileNode(t, n[2]) + "," + e.compileNode(t, n[4]) + "," + e.compileNode(t, n[3]) + ")"
        }

        e.compile = function(n, r) {
            try {
                var i = t(e.parse(n));
                return a(i, r)
            } catch (s) {
                throw !s.line || !s.column ? s : new SyntaxError(s.message + " At line : " + s.line + ", column : " + s.column)
            }
        }, e.filterNode = function(t, n) {
            return e.optimizers[n[0]](t, n)
        }, e.optimizers = {
            body: r,
            buffer: o,
            special: s,
            format: u,
            reference: n,
            "#": n,
            "?": n,
            "^": n,
            "<": n,
            "+": n,
            "@": n,
            "%": n,
            partial: n,
            context: n,
            params: n,
            bodies: n,
            param: n,
            filters: o,
            key: o,
            path: o,
            literal: o,
            comment: u
        }, e.pragmas = {
            esc: function(e, t, n, r) {
                var i = e.auto;
                t || (t = "h"), e.auto = t === "s" ? "" : t;
                var s = c(e, n.block);
                return e.auto = i, s
            }
        };
        var i = {
            s: " ",
            n: "\n",
            r: "\r",
            lb: "{",
            rb: "}"
        };
        e.compileNode = function(t, n) {
            return e.nodes[n[0]](t, n)
        }, e.nodes = {
            body: function(e, t) {
                var n = e.index++,
                    r = "body_" + n;
                return e.bodies[n] = c(e, t), r
            },
            buffer: function(e, t) {
                return ".write(" + p(t[1]) + ")"
            },
            format: function(e, t) {
                return ".write(" + p(t[1] + t[2]) + ")"
            },
            reference: function(t, n) {
                return ".reference(" + e.compileNode(t, n[1]) + ",ctx," + e.compileNode(t, n[2]) + ")"
            },
            "#": function(e, t) {
                return h(e, t, "section")
            },
            "?": function(e, t) {
                return h(e, t, "exists")
            },
            "^": function(e, t) {
                return h(e, t, "notexists")
            },
            "<": function(t, n) {
                var r = n[4];
                for (var i = 1, s = r.length; i < s; i++) {
                    var o = r[i],
                        u = o[1][1];
                    if (u === "block")
                        return t.blocks[n[1].text] = e.compileNode(t, o[2]), ""
                }
                return ""
            },
            "+": function(t, n) {
                return ".block(ctx.getBlock(" + p(n[1].text) + ")," + e.compileNode(t, n[2]) + "," + e.compileNode(t, n[4]) + "," + e.compileNode(t, n[3]) + ")"
            },
            "@": function(t, n) {
                return ".helper(" + p(n[1].text) + "," + e.compileNode(t, n[2]) + "," + e.compileNode(t, n[4]) + "," + e.compileNode(t, n[3]) + ")"
            },
            "%": function(t, n) {
                var r = n[1][1];
                if (!e.pragmas[r])
                    return "";
                var i = n[4],
                    s = {};
                for (var o = 1, u = i.length; o < u; o++) {
                    var a = i[o];
                    s[a[1][1]] = a[2]
                }
                var f = n[3],
                    l = {};
                for (var o = 1, u = f.length; o < u; o++) {
                    var c = f[o];
                    l[c[1][1]] = c[2][1]
                }
                var h = n[2][1] ? n[2][1].text : null;
                return e.pragmas[r](t, h, s, l)
            },
            partial: function(t, n) {
                return ".partial(" + e.compileNode(t, n[1]) + "," + e.compileNode(t, n[2]) + ")"
            },
            context: function(t, n) {
                return n[1] ? "ctx.rebase(" + e.compileNode(t, n[1]) + ")" : "ctx"
            },
            params: function(t, n) {
                var r = [];
                for (var i = 1, s = n.length; i < s; i++)
                    r.push(e.compileNode(t, n[i]));
                return r.length ? "{" + r.join(",") + "}" : "null"
            },
            bodies: function(t, n) {
                var r = [];
                for (var i = 1, s = n.length; i < s; i++)
                    r.push(e.compileNode(t, n[i]));
                return "{" + r.join(",") + "}"
            },
            param: function(t, n) {
                return e.compileNode(t, n[1]) + ":" + e.compileNode(t, n[2])
            },
            filters: function(e, t) {
                var n = [];
                for (var r = 1, i = t.length; r < i; r++) {
                    var s = t[r];
                    n.push('"' + s + '"')
                }
                return '"' + e.auto + '"' + (n.length ? ",[" + n.join(",") + "]" : "")
            },
            key: function(e, t) {
                return 'ctx.get("' + t[1] + '")'
            },
            path: function(e, t) {
                var n = t[1],
                    r = t[2],
                    i = [];
                for (var s = 0, o = r.length; s < o; s++)
                    i.push('"' + r[s] + '"');
                return "ctx.getPath(" + n + ",[" + i.join(",") + "])"
            },
            literal: function(e, t) {
                return p(t[1])
            }
        };
        var p = typeof JSON == "undefined" ? function(t) {
            return '"' + e.escapeJs(t) + '"'
        } : JSON.stringify
    }(typeof exports != "undefined" ? exports : window.dust),
    function(e) {
        var t = function() {
            function e(e) {
                return '"' + e.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape) + '"'
            }

            var n = {
                parse: function(n, r) {
                    function f(e, t, n) {
                        var r = e,
                            i = n - e.length;
                        for (var s = 0; s < i; s++)
                            r = t + r;
                        return r
                    }

                    function l(e) {
                        var t = e.charCodeAt(0),
                            n, r;
                        return t <= 255 ? (n = "x", r = 2) : (n = "u", r = 4), "\\" + n + f(t.toString(16).toUpperCase(), "0", r)
                    }

                    function c(e) {
                        if (s < u)
                            return;
                        s > u && (u = s, a = []), a.push(e)
                    }

                    function h() {
                        var e, t, n;
                        n = s, e = [], t = p();
                        while (t !== null)
                            e.push(t), t = p();
                        return e !== null && (e = function(e, t) {
                            return ["body"].concat(t)
                        }(n, e)), e === null && (s = n), e
                    }

                    function p() {
                        var e;
                        return e = P(), e === null && (e = d(), e === null && (e = E(), e === null && (e = x(), e === null && (e = w(), e === null && (e = M()))))), e
                    }

                    function d() {
                        var e, t, r, i, u, a, f, l, p;
                        o++, l = s, p = s, e = v();
                        if (e !== null) {
                            t = [], r = I();
                            while (r !== null)
                                t.push(r), r = I();
                            t !== null ? (r = j(), r !== null ? (i = h(), i !== null ? (u = b(), u !== null ? (a = m(), a !== null ? (f = function(e, t, n, r, i) {
                                return t[1].text === i.text
                            }(s, e, i, u, a) ? "" : null, f !== null ? e = [e, t, r, i, u, a, f] : (e = null, s = p)) : (e = null, s = p)) : (e = null, s = p)) : (e = null, s = p)) : (e = null, s = p)) : (e = null, s = p)
                        } else
                            e = null, s = p;
                        return e !== null && (e = function(e, t, n, r, i) {
                            return r.push(["param", ["literal", "block"], n]), t.push(r), t
                        }(l, e[0], e[3], e[4], e[5])), e === null && (s = l), e === null && (l = s, p = s, e = v(), e !== null ? (n.charCodeAt(s) === 47 ? (t = "/", s++) : (t = null, o === 0 && c('"/"')), t !== null ? (r = j(), r !== null ? e = [e, t, r] : (e = null, s = p)) : (e = null, s = p)) : (e = null, s = p), e !== null && (e = function(e, t) {
                            return t.push(["bodies"]), t
                        }(l, e[0])), e === null && (s = l)), o--, o === 0 && e === null && c("section"), e
                    }

                    function v() {
                        var e, t, r, i, u, a, f;
                        return a = s, f = s, e = B(), e !== null ? (/^[#?^<+@%]/.test(n.charAt(s)) ? (t = n.charAt(s), s++) : (t = null, o === 0 && c("[#?^<+@%]")), t !== null ? (r = T(), r !== null ? (i = g(), i !== null ? (u = y(), u !== null ? e = [e, t, r, i, u] : (e = null, s = f)) : (e = null, s = f)) : (e = null, s = f)) : (e = null, s = f)) : (e = null, s = f), e !== null && (e = function(e, t, n, r, i) {
                            return [t, n, r, i]
                        }(a, e[1], e[2], e[3], e[4])), e === null && (s = a), e
                    }

                    function m() {
                        var e, t, r, i, u, a;
                        return o++, u = s, a = s, e = B(), e !== null ? (n.charCodeAt(s) === 47 ? (t = "/", s++) : (t = null, o === 0 && c('"/"')), t !== null ? (r = T(), r !== null ? (i = j(), i !== null ? e = [e, t, r, i] : (e = null, s = a)) : (e = null, s = a)) : (e = null, s = a)) : (e = null, s = a), e !== null && (e = function(e, t) {
                            return t
                        }(u, e[2])), e === null && (s = u), o--, o === 0 && e === null && c("end tag"), e
                    }

                    function g() {
                        var e, t, r, i, u;
                        return r = s, i = s, u = s, n.charCodeAt(s) === 58 ? (e = ":", s++) : (e = null, o === 0 && c('":"')), e !== null ? (t = T(), t !== null ? e = [e, t] : (e = null, s = u)) : (e = null, s = u), e !== null && (e = function(e, t) {
                            return t
                        }(i, e[1])), e === null && (s = i), e = e !== null ? e : "", e !== null && (e = function(e, t) {
                            return t ? ["context", t] : ["context"]
                        }(r, e)), e === null && (s = r), e
                    }

                    function y() {
                        var e, t, r, i, u, a, f, l;
                        o++, a = s, e = [], f = s, l = s, t = I(), t !== null ? (r = C(), r !== null ? (n.charCodeAt(s) === 61 ? (i = "=", s++) : (i = null, o === 0 && c('"="')), i !== null ? (u = T(), u === null && (u = A()), u !== null ? t = [t, r, i, u] : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l), t !== null && (t = function(e, t, n) {
                            return ["param", ["literal", t], n]
                        }(f, t[1], t[3])), t === null && (s = f);
                        while (t !== null)
                            e.push(t), f = s, l = s, t = I(), t !== null ? (r = C(), r !== null ? (n.charCodeAt(s) === 61 ? (i = "=", s++) : (i = null, o === 0 && c('"="')), i !== null ? (u = T(), u === null && (u = A()), u !== null ? t = [t, r, i, u] : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l), t !== null && (t = function(e, t, n) {
                                return ["param", ["literal", t], n]
                            }(f, t[1], t[3])), t === null && (s = f);
                        return e !== null && (e = function(e, t) {
                            return ["params"].concat(t)
                        }(a, e)), e === null && (s = a), o--, o === 0 && e === null && c("params"), e
                    }

                    function b() {
                        var e, t, r, i, u, a, f, l, p;
                        o++, f = s, e = [], l = s, p = s, t = B(), t !== null ? (n.charCodeAt(s) === 58 ? (r = ":", s++) : (r = null, o === 0 && c('":"')), r !== null ? (i = C(), i !== null ? (u = j(), u !== null ? (a = h(), a !== null ? t = [t, r, i, u, a] : (t = null, s = p)) : (t = null, s = p)) : (t = null, s = p)) : (t = null, s = p)) : (t = null, s = p), t !== null && (t = function(e, t, n) {
                            return ["param", ["literal", t], n]
                        }(l, t[2], t[4])), t === null && (s = l);
                        while (t !== null)
                            e.push(t), l = s, p = s, t = B(), t !== null ? (n.charCodeAt(s) === 58 ? (r = ":", s++) : (r = null, o === 0 && c('":"')), r !== null ? (i = C(), i !== null ? (u = j(), u !== null ? (a = h(), a !== null ? t = [t, r, i, u, a] : (t = null, s = p)) : (t = null, s = p)) : (t = null, s = p)) : (t = null, s = p)) : (t = null, s = p), t !== null && (t = function(e, t, n) {
                                return ["param", ["literal", t], n]
                            }(l, t[2], t[4])), t === null && (s = l);
                        return e !== null && (e = function(e, t) {
                            return ["bodies"].concat(t)
                        }(f, e)), e === null && (s = f), o--, o === 0 && e === null && c("bodies"), e
                    }

                    function w() {
                        var e, t, n, r, i, u;
                        return o++, i = s, u = s, e = B(), e !== null ? (t = T(), t !== null ? (n = S(), n !== null ? (r = j(), r !== null ? e = [e, t, n, r] : (e = null, s = u)) : (e = null, s = u)) : (e = null, s = u)) : (e = null, s = u), e !== null && (e = function(e, t, n) {
                            return ["reference", t, n]
                        }(i, e[1], e[2])), e === null && (s = i), o--, o === 0 && e === null && c("reference"), e
                    }

                    function E() {
                        var e, t, r, i, u, a, f, l, h;
                        return o++, f = s, l = s, e = B(), e !== null ? (n.charCodeAt(s) === 62 ? (t = ">", s++) : (t = null, o === 0 && c('">"')), t !== null ? (h = s, r = C(), r !== null && (r = function(e, t) {
                            return ["literal", t]
                        }(h, r)), r === null && (s = h), r === null && (r = A()), r !== null ? (i = g(), i !== null ? (n.charCodeAt(s) === 47 ? (u = "/", s++) : (u = null, o === 0 && c('"/"')), u !== null ? (a = j(), a !== null ? e = [e, t, r, i, u, a] : (e = null, s = l)) : (e = null, s = l)) : (e = null, s = l)) : (e = null, s = l)) : (e = null, s = l)) : (e = null, s = l), e !== null && (e = function(e, t, n) {
                            return ["partial", t, n]
                        }(f, e[2], e[3])), e === null && (s = f), o--, o === 0 && e === null && c("partial"), e
                    }

                    function S() {
                        var e, t, r, i, u, a;
                        o++, i = s, e = [], u = s, a = s, n.charCodeAt(s) === 124 ? (t = "|", s++) : (t = null, o === 0 && c('"|"')), t !== null ? (r = C(), r !== null ? t = [t, r] : (t = null, s = a)) : (t = null, s = a), t !== null && (t = function(e, t) {
                            return t
                        }(u, t[1])), t === null && (s = u);
                        while (t !== null)
                            e.push(t), u = s, a = s, n.charCodeAt(s) === 124 ? (t = "|", s++) : (t = null, o === 0 && c('"|"')), t !== null ? (r = C(), r !== null ? t = [t, r] : (t = null, s = a)) : (t = null, s = a), t !== null && (t = function(e, t) {
                                return t
                            }(u, t[1])), t === null && (s = u);
                        return e !== null && (e = function(e, t) {
                            return ["filters"].concat(t)
                        }(i, e)), e === null && (s = i), o--, o === 0 && e === null && c("filters"), e
                    }

                    function x() {
                        var e, t, r, i, u, a;
                        return o++, u = s, a = s, e = B(), e !== null ? (n.charCodeAt(s) === 126 ? (t = "~", s++) : (t = null, o === 0 && c('"~"')), t !== null ? (r = C(), r !== null ? (i = j(), i !== null ? e = [e, t, r, i] : (e = null, s = a)) : (e = null, s = a)) : (e = null, s = a)) : (e = null, s = a), e !== null && (e = function(e, t) {
                            return ["special", t]
                        }(u, e[2])), e === null && (s = u), o--, o === 0 && e === null && c("special"), e
                    }

                    function T() {
                        var e, t;
                        return o++, t = s, e = N(), e !== null && (e = function(e, t) {
                            var n = ["path"].concat(t);
                            return n.text = t[1].join("."), n
                        }(t, e)), e === null && (s = t), e === null && (t = s, e = C(), e !== null && (e = function(e, t) {
                            var n = ["key", t];
                            return n.text = t, n
                        }(t, e)), e === null && (s = t)), o--, o === 0 && e === null && c("identifier"), e
                    }

                    function N() {
                        var e, t, r, i, u;
                        o++, i = s, u = s, e = C(), e = e !== null ? e : "";
                        if (e !== null) {
                            r = k();
                            if (r !== null) {
                                t = [];
                                while (r !== null)
                                    t.push(r), r = k()
                            } else
                                t = null;
                            t !== null ? e = [e, t] : (e = null, s = u)
                        } else
                            e = null, s = u;
                        return e !== null && (e = function(e, t, n) {
                            return n = n[0], t && n ? (n.unshift(t), [!1, n]) : [!0, n]
                        }(i, e[0], e[1])), e === null && (s = i), e === null && (i = s, n.charCodeAt(s) === 46 ? (e = ".", s++) : (e = null, o === 0 && c('"."')), e !== null && (e = function(e) {
                            return [!0, []]
                        }(i)), e === null && (s = i)), o--, o === 0 && e === null && c("path"), e
                    }

                    function C() {
                        var e, t, r, i, u;
                        o++, i = s, u = s, /^[a-zA-Z_$]/.test(n.charAt(s)) ? (e = n.charAt(s), s++) : (e = null, o === 0 && c("[a-zA-Z_$]"));
                        if (e !== null) {
                            t = [], /^[0-9a-zA-Z_$]/.test(n.charAt(s)) ? (r = n.charAt(s), s++) : (r = null, o === 0 && c("[0-9a-zA-Z_$]"));
                            while (r !== null)
                                t.push(r), /^[0-9a-zA-Z_$]/.test(n.charAt(s)) ? (r = n.charAt(s), s++) : (r = null, o === 0 && c("[0-9a-zA-Z_$]"));
                            t !== null ? e = [e, t] : (e = null, s = u)
                        } else
                            e = null, s = u;
                        return e !== null && (e = function(e, t, n) {
                            return t + n.join("")
                        }(i, e[0], e[1])), e === null && (s = i), o--, o === 0 && e === null && c("key"), e
                    }

                    function k() {
                        var e, t, r, i, u, a, f;
                        o++, i = s, u = s, a = s, f = s, n.charCodeAt(s) === 46 ? (t = ".", s++) : (t = null, o === 0 && c('"."')), t !== null ? (r = C(), r !== null ? t = [t, r] : (t = null, s = f)) : (t = null, s = f), t !== null && (t = function(e, t) {
                            return t
                        }(a, t[1])), t === null && (s = a);
                        if (t !== null) {
                            e = [];
                            while (t !== null)
                                e.push(t), a = s, f = s, n.charCodeAt(s) === 46 ? (t = ".", s++) : (t = null, o === 0 && c('"."')), t !== null ? (r = C(), r !== null ? t = [t, r] : (t = null, s = f)) : (t = null, s = f), t !== null && (t = function(e, t) {
                                    return t
                                }(a, t[1])), t === null && (s = a)
                        } else
                            e = null;
                        return e !== null ? (t = L(), t = t !== null ? t : "", t !== null ? e = [e, t] : (e = null, s = u)) : (e = null, s = u), e !== null && (e = function(e, t, n) {
                            return n ? t.concat(n) : t
                        }(i, e[0], e[1])), e === null && (s = i), o--, o === 0 && e === null && c("nestedKey"), e
                    }

                    function L() {
                        var e, t, r, i, u, a, f;
                        o++, i = s, u = s, a = s, f = s, n.charCodeAt(s) === 91 ? (e = "[", s++) : (e = null, o === 0 && c('"["'));
                        if (e !== null) {
                            /^[0-9]/.test(n.charAt(s)) ? (r = n.charAt(s), s++) : (r = null, o === 0 && c("[0-9]"));
                            if (r !== null) {
                                t = [];
                                while (r !== null)
                                    t.push(r), /^[0-9]/.test(n.charAt(s)) ? (r = n.charAt(s), s++) : (r = null, o === 0 && c("[0-9]"))
                            } else
                                t = null;
                            t !== null ? (n.charCodeAt(s) === 93 ? (r = "]", s++) : (r = null, o === 0 && c('"]"')), r !== null ? e = [e, t, r] : (e = null, s = f)) : (e = null, s = f)
                        } else
                            e = null, s = f;
                        return e !== null && (e = function(e, t) {
                            return t.join("")
                        }(a, e[1])), e === null && (s = a), e !== null ? (t = k(), t = t !== null ? t : "", t !== null ? e = [e, t] : (e = null, s = u)) : (e = null, s = u), e !== null && (e = function(e, t, n) {
                            return n ? n.unshift(t) : n = [t], n
                        }(i, e[0], e[1])), e === null && (s = i), o--, o === 0 && e === null && c("array"), e
                    }

                    function A() {
                        var e, t, r, i, u;
                        o++, i = s, u = s, n.charCodeAt(s) === 34 ? (e = '"', s++) : (e = null, o === 0 && c('"\\""')), e !== null ? (n.charCodeAt(s) === 34 ? (t = '"', s++) : (t = null, o === 0 && c('"\\""')), t !== null ? e = [e, t] : (e = null, s = u)) : (e = null, s = u), e !== null && (e = function(e) {
                            return ["literal", ""]
                        }(i)), e === null && (s = i);
                        if (e === null) {
                            i = s, u = s, n.charCodeAt(s) === 34 ? (e = '"', s++) : (e = null, o === 0 && c('"\\""')), e !== null ? (t = _(), t !== null ? (n.charCodeAt(s) === 34 ? (r = '"', s++) : (r = null, o === 0 && c('"\\""')), r !== null ? e = [e, t, r] : (e = null, s = u)) : (e = null, s = u)) : (e = null, s = u), e !== null && (e = function(e, t) {
                                return ["literal", t]
                            }(i, e[1])), e === null && (s = i);
                            if (e === null) {
                                i = s, u = s, n.charCodeAt(s) === 34 ? (e = '"', s++) : (e = null, o === 0 && c('"\\""'));
                                if (e !== null) {
                                    r = O();
                                    if (r !== null) {
                                        t = [];
                                        while (r !== null)
                                            t.push(r), r = O()
                                    } else
                                        t = null;
                                    t !== null ? (n.charCodeAt(s) === 34 ? (r = '"', s++) : (r = null, o === 0 && c('"\\""')), r !== null ? e = [e, t, r] : (e = null, s = u)) : (e = null, s = u)
                                } else
                                    e = null, s = u;
                                e !== null && (e = function(e, t) {
                                    return ["body"].concat(t)
                                }(i, e[1])), e === null && (s = i)
                            }
                        }
                        return o--, o === 0 && e === null && c("inline"), e
                    }

                    function O() {
                        var e, t;
                        return e = x(), e === null && (e = w(), e === null && (t = s, e = _(), e !== null && (e = function(e, t) {
                            return ["buffer", t]
                        }(t, e)), e === null && (s = t))), e
                    }

                    function M() {
                        var e, t, r, i, u, a, f, l, h;
                        o++, a = s, f = s, e = F();
                        if (e !== null) {
                            t = [], r = I();
                            while (r !== null)
                                t.push(r), r = I();
                            t !== null ? e = [e, t] : (e = null, s = f)
                        } else
                            e = null, s = f;
                        e !== null && (e = function(e, t, n) {
                            return ["format", t, n.join("")]
                        }(a, e[0], e[1])), e === null && (s = a);
                        if (e === null) {
                            a = s, f = s, l = s, h = s, o++, t = H(), o--, t === null ? t = "" : (t = null, s = h), t !== null ? (h = s, o++, r = F(), o--, r === null ? r = "" : (r = null, s = h), r !== null ? (h = s, o++, i = P(), o--, i === null ? i = "" : (i = null, s = h), i !== null ? (n.length > s ? (u = n.charAt(s), s++) : (u = null, o === 0 && c("any character")), u !== null ? t = [t, r, i, u] : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l), t !== null && (t = function(e, t) {
                                return t
                            }(f, t[3])), t === null && (s = f);
                            if (t !== null) {
                                e = [];
                                while (t !== null)
                                    e.push(t), f = s, l = s, h = s, o++, t = H(), o--, t === null ? t = "" : (t = null, s = h), t !== null ? (h = s, o++, r = F(), o--, r === null ? r = "" : (r = null, s = h), r !== null ? (h = s, o++, i = P(), o--, i === null ? i = "" : (i = null, s = h), i !== null ? (n.length > s ? (u = n.charAt(s), s++) : (u = null, o === 0 && c("any character")), u !== null ? t = [t, r, i, u] : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l)) : (t = null, s = l), t !== null && (t = function(e, t) {
                                        return t
                                    }(f, t[3])), t === null && (s = f)
                            } else
                                e = null;
                            e !== null && (e = function(e, t) {
                                return ["buffer", t.join("")]
                            }(a, e)), e === null && (s = a)
                        }
                        return o--, o === 0 && e === null && c("buffer"), e
                    }

                    function _() {
                        var e, t, r, i, u, a, f, l;
                        o++, u = s, a = s, f = s, l = s, o++, t = H(), o--, t === null ? t = "" : (t = null, s = l), t !== null ? (l = s, o++, r = F(), o--, r === null ? r = "" : (r = null, s = l), r !== null ? (i = D(), i === null && (/^[^"]/.test(n.charAt(s)) ? (i = n.charAt(s), s++) : (i = null, o === 0 && c('[^"]'))), i !== null ? t = [t, r, i] : (t = null, s = f)) : (t = null, s = f)) : (t = null, s = f), t !== null && (t = function(e, t) {
                            return t
                        }(a, t[2])), t === null && (s = a);
                        if (t !== null) {
                            e = [];
                            while (t !== null)
                                e.push(t), a = s, f = s, l = s, o++, t = H(), o--, t === null ? t = "" : (t = null, s = l), t !== null ? (l = s, o++, r = F(), o--, r === null ? r = "" : (r = null, s = l), r !== null ? (i = D(), i === null && (/^[^"]/.test(n.charAt(s)) ? (i = n.charAt(s), s++) : (i = null, o === 0 && c('[^"]'))), i !== null ? t = [t, r, i] : (t = null, s = f)) : (t = null, s = f)) : (t = null, s = f), t !== null && (t = function(e, t) {
                                    return t
                                }(a, t[2])), t === null && (s = a)
                        } else
                            e = null;
                        return e !== null && (e = function(e, t) {
                            return t.join("")
                        }(u, e)), e === null && (s = u), o--, o === 0 && e === null && c("literal"), e
                    }

                    function D() {
                        var e, t;
                        return t = s, n.substr(s, 2) === '\\"' ? (e = '\\"', s += 2) : (e = null, o === 0 && c('"\\\\\\""')), e !== null && (e = function(e) {
                            return '"'
                        }(t)), e === null && (s = t), e
                    }

                    function P() {
                        var e, t, r, i, u, a, f, l, h;
                        o++, u = s, a = s, n.substr(s, 2) === "{!" ? (e = "{!", s += 2) : (e = null, o === 0 && c('"{!"'));
                        if (e !== null) {
                            t = [], f = s, l = s, h = s, o++, n.substr(s, 2) === "!}" ? (r = "!}", s += 2) : (r = null, o === 0 && c('"!}"')), o--, r === null ? r = "" : (r = null, s = h), r !== null ? (n.length > s ? (i = n.charAt(s), s++) : (i = null, o === 0 && c("any character")), i !== null ? r = [r, i] : (r = null, s = l)) : (r = null, s = l), r !== null && (r = function(e, t) {
                                return t
                            }(f, r[1])), r === null && (s = f);
                            while (r !== null)
                                t.push(r), f = s, l = s, h = s, o++, n.substr(s, 2) === "!}" ? (r = "!}", s += 2) : (r = null, o === 0 && c('"!}"')), o--, r === null ? r = "" : (r = null, s = h), r !== null ? (n.length > s ? (i = n.charAt(s), s++) : (i = null, o === 0 && c("any character")), i !== null ? r = [r, i] : (r = null, s = l)) : (r = null, s = l), r !== null && (r = function(e, t) {
                                    return t
                                }(f, r[1])), r === null && (s = f);
                            t !== null ? (n.substr(s, 2) === "!}" ? (r = "!}", s += 2) : (r = null, o === 0 && c('"!}"')), r !== null ? e = [e, t, r] : (e = null, s = a)) : (e = null, s = a)
                        } else
                            e = null, s = a;
                        return e !== null && (e = function(e, t) {
                            return ["comment", t.join("")]
                        }(u, e[1])), e === null && (s = u), o--, o === 0 && e === null && c("comment"), e
                    }

                    function H() {
                        var e, t, r, i, u, a, f, l, h;
                        f = s, e = B();
                        if (e !== null) {
                            /^[#?^><+%:@\/~%]/.test(n.charAt(s)) ? (t = n.charAt(s), s++) : (t = null, o === 0 && c("[#?^><+%:@\\/~%]"));
                            if (t !== null) {
                                l = s, h = s, o++, i = j(), o--, i === null ? i = "" : (i = null, s = h), i !== null ? (h = s, o++, u = F(), o--, u === null ? u = "" : (u = null, s = h), u !== null ? (n.length > s ? (a = n.charAt(s), s++) : (a = null, o === 0 && c("any character")), a !== null ? i = [i, u, a] : (i = null, s = l)) : (i = null, s = l)) : (i = null, s = l);
                                if (i !== null) {
                                    r = [];
                                    while (i !== null)
                                        r.push(i), l = s, h = s, o++, i = j(), o--, i === null ? i = "" : (i = null, s = h), i !== null ? (h = s, o++, u = F(), o--, u === null ? u = "" : (u = null, s = h), u !== null ? (n.length > s ? (a = n.charAt(s), s++) : (a = null, o === 0 && c("any character")), a !== null ? i = [i, u, a] : (i = null, s = l)) : (i = null, s = l)) : (i = null, s = l)
                                } else
                                    r = null;
                                r !== null ? (i = j(), i !== null ? e = [e, t, r, i] : (e = null, s = f)) : (e = null, s = f)
                            } else
                                e = null, s = f
                        } else
                            e = null, s = f;
                        return e === null && (e = w()), e
                    }

                    function B() {
                        var e;
                        return n.charCodeAt(s) === 123 ? (e = "{", s++) : (e = null, o === 0 && c('"{"')), e
                    }

                    function j() {
                        var e;
                        return n.charCodeAt(s) === 125 ? (e = "}", s++) : (e = null, o === 0 && c('"}"')), e
                    }

                    function F() {
                        var e;
                        return n.charCodeAt(s) === 10 ? (e = "\n", s++) : (e = null, o === 0 && c('"\\n"')), e === null && (n.substr(s, 2) === "\r\n" ? (e = "\r\n", s += 2) : (e = null, o === 0 && c('"\\r\\n"')), e === null && (n.charCodeAt(s) === 13 ? (e = "\r", s++) : (e = null, o === 0 && c('"\\r"')), e === null && (n.charCodeAt(s) === 8232 ? (e = "\u2028", s++) : (e = null, o === 0 && c('"\\u2028"')), e === null && (n.charCodeAt(s) === 8233 ? (e = "\u2029", s++) : (e = null, o === 0 && c('"\\u2029"')))))), e
                    }

                    function I() {
                        var e;
                        return /^[\t\x0B\f \xA0\uFEFF]/.test(n.charAt(s)) ? (e = n.charAt(s), s++) : (e = null, o === 0 && c("[\\t\\x0B\\f \\xA0\\uFEFF]")), e
                    }

                    function q(e) {
                        e.sort();
                        var t = null,
                            n = [];
                        for (var r = 0; r < e.length; r++)
                            e[r] !== t && (n.push(e[r]), t = e[r]);
                        return n
                    }

                    function R() {
                        var e = 1,
                            t = 1,
                            r = !1;
                        for (var i = 0; i < Math.max(s, u); i++) {
                            var o = n.charAt(i);
                            o === "\n" ? (r || e++, t = 1, r = !1) : o === "\r" || o === "\u2028" || o === "\u2029" ? (e++, t = 1, r = !0) : (t++, r = !1)
                        }
                        return {
                            line: e,
                            column: t
                        }
                    }

                    var i = {
                        body: h,
                        part: p,
                        section: d,
                        sec_tag_start: v,
                        end_tag: m,
                        context: g,
                        params: y,
                        bodies: b,
                        reference: w,
                        partial: E,
                        filters: S,
                        special: x,
                        identifier: T,
                        path: N,
                        key: C,
                        nestedKey: k,
                        array: L,
                        inline: A,
                        inline_part: O,
                        buffer: M,
                        literal: _,
                        esc: D,
                        comment: P,
                        tag: H,
                        ld: B,
                        rd: j,
                        eol: F,
                        ws: I
                    };
                    if (r !== undefined) {
                        if (i[r] === undefined)
                            throw new Error("Invalid rule name: " + e(r) + ".")
                    } else
                        r = "body";
                    var s = 0,
                        o = 0,
                        u = 0,
                        a = [],
                        U = i[r]();
                    if (U === null || s !== n.length) {
                        var z = Math.max(s, u),
                            W = z < n.length ? n.charAt(z) : null,
                            X = R();
                        throw new t.SyntaxError(q(a), W, z, X.line, X.column)
                    }
                    return U
                },
                toSource: function() {
                    return this._source
                }
            };
            return n.SyntaxError = function(t, n, r, i, s) {
                function o(t, n) {
                    var r, i;
                    switch (t.length) {
                        case 0:
                            r = "end of input";
                            break;
                        case 1:
                            r = t[0];
                            break;
                        default:
                            r = t.slice(0, t.length - 1).join(", ") + " or " + t[t.length - 1]
                    }
                    return i = n ? e(n) : "end of input", "Expected " + r + " but " + i + " found."
                }

                this.name = "SyntaxError", this.expected = t, this.found = n, this.message = o(t, n), this.offset = r, this.line = i, this.column = s
            }, n.SyntaxError.prototype = Error.prototype, n
        }();
        e.parse = t.parse
    }(typeof exports != "undefined" ? exports : window.dust), define("dust", function() {}), ! function() {
    function e(e, n) {
        return e.write('<div class="player clearfix" data-player-id="').reference(n.get(["playerId"], !1), n, "h").write('" ><input type="checkbox" name="checkbox" value="value"/><div class="player-info"><span class="shirt-number">').reference(n.get(["shirtNo"], !1), n, "h").write('</span><span class="player-name" title="').reference(n.get(["name"], !1), n, "h").write('">').helper("playerName", n, {
            block: t
        }, {
            fullName: n.get(["name"], !1),
            isLastName: "true"
        }).write('</span></div><div class="stat-values"><span class="selected-stat-value"></span><span class="total-stat-value"></span></div></div>')
    }

    function t(e) {
        return e
    }

    return dust.register("chalkboard-player", e), e
}(), ! function() {
    function e(e, n) {
        return e.write("").section(n.get(["events"], !1), n, {
            block: t
        }, null)
    }

    function t(e, t) {
        return e.write('<div class="chalkboard-timeline-events ').helper("if", t, {
            block: n
        }, {
            cond: r
        }).write('"style="left: ').reference(t.get(["left"], !1), t, "h").write("%; ").section(t.get(["top"], !1), t, {
            block: i
        }, null).section(t.get(["bottom"], !1), t, {
            block: s
        }, null).write('height: 100%;"data-event-count="').reference(t.get(["value"], !1), t, "h").write('">').section(t.get(["events"], !1), t, {
            block: o
        }, {
            eventHeight: t.get(["eventHeight"], !1)
        }).write("</div>")
    }

    function n(e) {
        return e.write("on-right")
    }

    function r(e, t) {
        return e.write("(50 < ").reference(t.get(["left"], !1), t, "h").write(")")
    }

    function i(e, t) {
        return e.write("top: ").reference(t.get(["top"], !1), t, "h").write("px;")
    }

    function s(e, t) {
        return e.write("bottom: ").reference(t.get(["bottom"], !1), t, "h").write("px;")
    }

    function o(e, t) {
        return e.write('<div class="chalkboard-timeline-event ').section(t.get(["isSelected"], !1), t, {
            block: u
        }, null).write('" data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-second="').reference(t.get(["second"], !1), t, "h").write('" data-expanded-minute="').reference(t.get(["expandedMinute"], !1), t, "h").write('"data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"	').section(t.get(["cardType"], !1), t, {
            block: a
        }, null).write('style="height: ').reference(t.get(["eventHeight"], !1), t, "h").write("px; width: ").reference(t.get(["eventWidth"], !1), t, "h").write('px"><span class="box"></span><div class="timeline-event-detail"><div class="timeline-event-info"><img class="player-avatar" src=""/><span class="player-name">').reference(t.get(["name"], !1), t, "h").write('</span></div><span class="timeline-event-detail-text">').reference(t.get(["text"], !1), t, "h", ["s"]).write("</span></div></div> ")
    }

    function u(e) {
        return e.write("visible")
    }

    function a(e, t) {
        return e.write('data-card-type="').reference(t.get(["value"], !1), t, "h").write('"')
    }

    return dust.register("chalkboard-timeline-events", e), e
}(), ! function() {
    function e(e, t) {
        return t = t.shiftBlocks(p), e.write('<div id="chalkboard-stadium">').write('<div class="team-players" data-field="home"><div class="team"><input type="checkbox" name="checkbox" value="value"/><span></span></div><ul class="players" ></ul></div> <div class="canvas-container"><div id="player-event-details"><img class="player-avatar"/><div class="player-event-info"><span class="player-event-minute"></span><span class="player-event-text"></span></div>    </div></div><div class="team-players" data-field="away"><div class="team"><input type="checkbox" name="checkbox" value="value"/><span></span></div><ul class="players" ></ul></div><div class="clear"></div></div><ul id="event-type-filters" class="tabs">').section(t.get(["filterGroups"], !1), t, {
            block: n
        }, null).write('</ul><div class="filterz-filter-groups clearfix">').section(t.get(["filterGroups"], !1), t, {
            block: s
        }, null).write('</div><div id="chalkboard-timeline" class="timeline"><div class="timeline-events" data-field="home"></div><div class="timeline-control"><div class="minutes-container"></div><div class="timeline-handles"></div></div><div class="timeline-events" data-field="away"></div></div>')
    }

    function t(e, t) {
        return t = t.shiftBlocks(p), e.write('<div class="player" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('" ><span class="shirt-number">').reference(t.get(["shirtNo"], !1), t, "h").write('</span>.<span class="player-name">').reference(t.get(["name"], !1), t, "h").write('</span><div class="stat-values"><span class="selected-stat-value"></span><span class="total-stat-value"></span></div></div>')
    }

    function n(e, t) {
        return t = t.shiftBlocks(p), e.write('<li class="filterz-option" data-filter-index="').reference(t.get(["$idx"], !1), t, "h").write('"><a class="').helper("if", t, {
            block: r
        }, {
            cond: i
        }).write(' "><h4>').reference(t.get(["displayName"], !1), t, "h").write('</h4><div class="filterz-values"><span class="filterz-value" data-field="home"></span><span style="display: inline-block; vertical-align: middle;">-</span><span class="filterz-value" data-field="away"></span></div></a></li>')
    }

    function r(e, t) {
        return t = t.shiftBlocks(p), e.write("selected")
    }

    function i(e, t) {
        return t = t.shiftBlocks(p), e.write("(").reference(t.get(["$idx"], !1), t, "h").write(" == 0)")
    }

    function s(e, t) {
        return t = t.shiftBlocks(p), e.write('<div class="filterz-filter-group ').helper("if", t, {
            block: o
        }, {
            cond: u
        }).write('" data-filter-index="').reference(t.get(["$idx"], !1), t, "h").write('">').section(t.get(["filterSubGroups"], !1), t, {
            block: a
        }, {
            groupIndex: t.get(["$idx"], !1),
            groupDisplayName: t.get(["displayName"], !1)
        }).write('</div><div class="filterz-filter-group-footnote">').reference(t.get(["footNote"], !1), t, "h").write("</div>")
    }

    function o(e, t) {
        return t = t.shiftBlocks(p), e.write("selected")
    }

    function u(e, t) {
        return t = t.shiftBlocks(p), e.write("(").reference(t.get(["$idx"], !1), t, "h").write(" == 0)")
    }

    function a(e, t) {
        return t = t.shiftBlocks(p), e.helper("if", t, {
            block: f
        }, {
            cond: l
        }).write('<div class="filterz-filter-sub-group"><h4 class="filterz-filter-sub-group-header">').reference(t.get(["displayName"], !1), t, "h").write('</h4><div class="filterz-filter selected" data-filter-index="all"><label>All</label></div>').section(t.get(["filters"], !1), t, {
            block: c
        }, {
            groupIndex: t.get(["groupIndex"], !1),
            subGroupIndex: t.get(["$idx"], !1)
        }).write("</div>")
    }

    function f(e, t) {
        return t = t.shiftBlocks(p), e.write("<h3>").reference(t.get(["groupDisplayName"], !1), t, "h").write("</h3>")
    }

    function l(e, t) {
        return t = t.shiftBlocks(p), e.write("(").reference(t.get(["$idx"], !1), t, "h").write(" == 0)")
    }

    function c(e, t) {
        return t = t.shiftBlocks(p), e.write('<div class="filterz-filter" data-filter-index="').reference(t.get(["groupIndex"], !1), t, "h").write("_").reference(t.get(["subGroupIndex"], !1), t, "h").write("_").reference(t.get(["$idx"], !1), t, "h").write('"').exists(t.get(["ignoreParentSatisfier"], !1), t, {
            block: h
        }, null).write('><span class="filterz-value" data-field="home"></span><label>').reference(t.get(["displayName"], !1), t, "h").write('</label><span class="filterz-value" data-field="away"></span></div>')
    }

    function h(e, t) {
        return t = t.shiftBlocks(p), e.write('data-ignore-parent-filter="').reference(t.get(["groupIndex"], !1), t, "h").write('"')
    }

    dust.register("chalkboard", e);
    var p = {
        chalkboard_player: t
    };
    return e
}(), ! function() {
    function e(e, t) {
        return t = t.shiftBlocks(a), e.write("").write('<div id="match-centre-heatmaps">').helper("partial", t, {
            block: o
        }, {
            teamName: t.getPath(!1, ["home", "name"]),
            players: t.getPath(!1, ["home", "players"]),
            field: "home"
        }).write('<div id="heatmap-pitches"><div class="canvas-container" data-for="home"></div><div class="canvas-container" data-for="away"></div></div>').helper("partial", t, {
            block: u
        }, {
            teamName: t.getPath(!1, ["away", "name"]),
            players: t.getPath(!1, ["away", "players"]),
            field: "away"
        }).write("</div>")
    }

    function t(e, t) {
        return t = t.shiftBlocks(a), e.write('<div class="team-players" data-field="').reference(t.get(["field"], !1), t, "h").write('"><div class="team" data-field="').reference(t.get(["field"], !1), t, "h").write('"><input type="checkbox" name="checkbox" value="value"/><span>').reference(t.get(["teamName"], !1), t, "h").write('</span></div><ul class="players" data-field="').reference(t.get(["field"], !1), t, "h").write('">').section(t.get(["players"], !1), t, {
            block: n
        }, {
            field: t.get(["field"], !1)
        }).write("</ul></div>")
    }

    function n(e, t) {
        return t = t.shiftBlocks(a), e.write('<div class="player clearfix" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('" data-field="').reference(t.get(["field"], !1), t, "h").write('"').section(t.get(["isFirstEleven"], !1), t, {
            block: r
        }, null).section(t.get(["subbedInExpandedMinute"], !1), t, {
            block: i
        }, null).write('><input type="checkbox" name="checkbox" value="value"/><div class="player-info"><span class="shirt-number">').reference(t.get(["shirtNo"], !1), t, "h").write('</span><span class="player-name" title="').reference(t.get(["name"], !1), t, "h").write('">').helper("playerName", t, {
            block: s
        }, {
            fullName: t.get(["name"], !1),
            isLastName: "true"
        }).write('</span></div><div class="stat-values"><span class="selected-stat-value"></span><span class="total-stat-value"></span></div></div>')
    }

    function r(e, t) {
        return t = t.shiftBlocks(a), e.write("data-is-first-eleven")
    }

    function i(e, t) {
        return t = t.shiftBlocks(a), e.write("data-subbed-in")
    }

    function s(e, t) {
        return t = t.shiftBlocks(a), e
    }

    function o(e, t) {
        return t = t.shiftBlocks(a), e.block(t.getBlock("heatmap_team"), t, {}, null)
    }

    function u(e, t) {
        return t = t.shiftBlocks(a), e.block(t.getBlock("heatmap_team"), t, {}, null)
    }

    dust.register("heatmaps", e);
    var a = {
        heatmap_team: t
    };
    return e
}(), ! function() {
    function e(e, n) {
        return e.write("").section(n.get(["showPager"], !1), n, {
            block: t
        }, null).write('<ul class="commentary-items">').section(n.get(["events"], !1), n, {
            block: r
        }, null).section(n.get(["showMore"], !1), n, {
            block: f
        }, null).write('<li class="commentary-mask"></li></ul>').section(n.get(["showMore"], !1), n, {
            block: l
        }, null)
    }

    function t(e, t) {
        return e.write("<div>").helper("pager", t, {}, {
            first: "0",
            last: n,
            url: "%page%"
        }).write('</div><div class="page-navigation" data-page="0"><span class="page-navigation-item" data-page="first-page">First</span><span class="page-navigation-item" data-page="prev-page">Prev</span><span class="page-navigation-item" data-page="next-page">Next</span><span class="page-navigation-item" data-page="last-page">Last</span></div><div class="page-info"> <span class="current-page"></span>/<span class="total-pages"></span></div>')
    }

    function n(e, t) {
        return e.reference(t.get(["pageSize"], !1), t, "h")
    }

    function r(e, t) {
        return e.exists(t.get(["text"], !1), t, {
            block: i
        }, null)
    }

    function i(e, t) {
        return e.write('<li class="commentary-item" data-field="').reference(t.get(["field"], !1), t, "h").write('" data-period-id="').reference(t.getPath(!1, ["period", "value"]), t, "h").write('"data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('" data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-minute="').reference(t.get(["minute"], !1), t, "h").write('"data-second="').reference(t.get(["second"], !1), t, "h").write('"data-expanded-minute="').reference(t.get(["expandedMinute"], !1), t, "h").write('"data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"><img class="team-emblem" src=').helper("imageUrl", t, {}, {
            fileName: s
        }).write('><span class="commentary-minute">').reference(t.getPath(!1, ["minuteInfo", "minuteString"]), t, "h").write('</span><span class="commentary-text">').reference(t.get(["text"], !1), t, "h", ["s"]).write('</span><span class="incident-icon"data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-second="').reference(t.get(["second"], !1), t, "h").write('" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-type="').section(t.get(["type"], !1), t, {
            block: o
        }, null).write('"	').section(t.get(["cardType"], !1), t, {
            block: u
        }, null).section(t.get(["satisfiers"], !1), t, {
            block: a
        }, null).write("></span></li>")
    }

    function s(e, t) {
        return e.write("teams/").reference(t.get(["teamId"], !1), t, "h").write(".png")
    }

    function o(e, t) {
        return e.reference(t.get(["value"], !1), t, "h")
    }

    function u(e, t) {
        return e.write('data-card-type="').reference(t.get(["value"], !1), t, "h").write('"')
    }

    function a(e, t) {
        return e.write("data-event-satisfier-").reference(t.get(["name"], !1), t, "h").write(" ")
    }

    function f(e) {
        return e.write('<li class="show-more-commentaries"> Show All Commentary </li>')
    }

    function l(e) {
        return e.write('<span id="collapsable-toggle" class="ui-icon ui-icon-triangle-1-s"></span>')
    }

    return dust.register("match-centre-commentary", e), e
}(), ! function() {
    function e(e, t) {
        return t = t.shiftBlocks(y), e.helper("partial", t, {
            block: h
        }, {
            teamId: t.getPath(!1, ["home", "teamId"]),
            field: t.getPath(!1, ["home", "field"]),
            name: t.getPath(!1, ["home", "name"]),
            managerName: t.getPath(!1, ["home", "managerName"]),
            goalScorers: t.getPath(!1, ["goalScorers", "home"])
        }).write('<div class="match-centre-info"><div class="status"><div class="score" data-for="score">').reference(t.get(["score"], !1), t, "h").write('</div><div><span class="elapsed" data-for="elapsed">').reference(t.get(["currentElapsed"], !1), t, "h").write("</span></div></div>").section(t.get(["hasIncidents"], !1), t, {
            block: p
        }, null).write("</div>").helper("partial", t, {
            block: g
        }, {
            teamId: t.getPath(!1, ["away", "teamId"]),
            field: t.getPath(!1, ["away", "field"]),
            name: t.getPath(!1, ["away", "name"]),
            managerName: t.getPath(!1, ["away", "managerName"]),
            goalScorers: t.getPath(!1, ["goalScorers", "away"])
        })
    }

    function t(e, t) {
        return t = t.shiftBlocks(y), e.write('<div class="match-centre-header-team" data-mode="team" data-field="').reference(t.get(["field"], !1), t, "h").write('"><div class="team-emblem"><img src="').helper("imageUrl", t, {}, {
            fileName: n
        }).write('"></div><div class="team-info"><div class="team-rating"></div> <a href="/Teams/').reference(t.get(["teamId"], !1), t, "h").write('" class="team-name">').reference(t.get(["name"], !1), t, "h").write('</a><div class="manager"><label>Manager:</label><span class="mc-icon"></span><span class="manager-name">').reference(t.get(["managerName"], !1), t, "h").write('</span></div><div class="formation"></div></div><ul class="match-centre-header-goal-scorers">').section(t.get(["goalScorers"], !1), t, {
            block: r
        }, null).write("</ul></div>")
    }

    function n(e, t) {
        return t = t.shiftBlocks(y), e.write("teams/").reference(t.get(["teamId"], !1), t, "h").write(".png")
    }

    function r(e, t) {
        return t = t.shiftBlocks(y), e.write(' <li class="match-centre-header-goal-scorer"><span class="match-centre-header-goal-scorer-minute">').reference(t.getPath(!1, ["minuteInfo", "minuteString"]), t, "h").notexists(t.getPath(!1, ["minuteInfo", "isPenaltyShootOut"]), t, {
            block: i
        }, null).write("</span> ").helper("playerName", t, {
            block: s
        }, {
            fullName: t.get(["playerName"], !1),
            isShortName: "true"
        }).reference(t.get(["isOwnGoal"], !1), t, "h").section(t.get(["isOwnGoal"], !1), t, {
            block: o
        }, null).write("</li>")
    }

    function i(e, t) {
        return t = t.shiftBlocks(y), e.write("'")
    }

    function s(e, t) {
        return t = t.shiftBlocks(y), e
    }

    function o(e, t) {
        return t = t.shiftBlocks(y), e.write("(OG)")
    }

    function u(e, t) {
        return t = t.shiftBlocks(y), e.write('<td class="team-key-incidents" data-field="').reference(t.get(["field"], !1), t, "h").write('">').section(t.get(["events"], !1), t, {
            block: a
        }, null).write("</td>")
    }

    function a(e, t) {
        return t = t.shiftBlocks(y), e.write('<div class="match-centre-header-team-key-incident" data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"><div class="incident-icon" data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-second="').reference(t.get(["second"], !1), t, "h").write('" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"	').section(t.get(["cardType"], !1), t, {
            block: f
        }, null).section(t.get(["left"], !1), t, {
            block: l
        }, null).section(t.get(["satisfiers"], !1), t, {
            block: c
        }, null).write('></div><span class="player-name">').reference(t.get(["playerName"], !1), t, "h").write('</span><span class="commentary-text">').reference(t.get(["text"], !1), t, "h", ["s"]).write("</span></div>")
    }

    function f(e, t) {
        return t = t.shiftBlocks(y), e.write('data-card-type="').reference(t.get(["value"], !1), t, "h").write('"')
    }

    function l(e, t) {
        return t = t.shiftBlocks(y), e.write('style="left: ').reference(t.get(["left"], !1), t, "h").write('%"')
    }

    function c(e, t) {
        return t = t.shiftBlocks(y), e.write("data-event-satisfier-").reference(t.get(["name"], !1), t, "h").write(" ")
    }

    function h(e, t) {
        return t = t.shiftBlocks(y), e.block(t.getBlock("match_centre_header_team"), t, {}, null)
    }

    function p(e, t) {
        return t = t.shiftBlocks(y), e.write('<div id="match-centre-key-incidents"><a class="match-centre-key-incidents-toggle iconize iconize-icon-right ui-state-transparent-default ui-state-active" data-incident-count=').reference(t.getPath(!1, ["incidentsByGroups", "length"]), t, "h").write('>Key Events<span class="ui-icon ui-icon-triangle-1-s"></span></a><div id="match-centre-key-incidents-background-mask"></div><div class="match-centre-key-incidents" data-incident-count=').reference(t.getPath(!1, ["incidentsByGroups", "length"]), t, "h").write("><table><tbody>").section(t.get(["incidentsByGroups"], !1), t, {
            block: d
        }, null).write("</tbody></table></div></div>")
    }

    function d(e, t) {
        return t = t.shiftBlocks(y), e.write("<tr data-is-penalty-shootout=").reference(t.getPath(!1, ["minuteInfo", "isPenaltyShootout"]), t, "h").write(">").helper("partial", t, {
            block: v
        }, {
            events: t.get(["home"], !1),
            field: "home"
        }).write('<td class="key-incidents-minute">').reference(t.getPath(!1, ["minuteInfo", "minuteString"]), t, "h").write("</td>").helper("partial", t, {
            block: m
        }, {
            events: t.get(["away"], !1),
            field: "away"
        }).write("</tr>")
    }

    function v(e, t) {
        return t = t.shiftBlocks(y), e.block(t.getBlock("match_centre_header_team_key_incidents"), t, {}, null)
    }

    function m(e, t) {
        return t = t.shiftBlocks(y), e.block(t.getBlock("match_centre_header_team_key_incidents"), t, {}, null)
    }

    function g(e, t) {
        return t = t.shiftBlocks(y), e.block(t.getBlock("match_centre_header_team"), t, {}, null)
    }

    dust.register("match-centre-header", e);
    var y = {
        match_centre_header_team: t,
        match_centre_header_team_key_incidents: u
    };
    return e
}(), ! function() {
    function e(e, n) {
        return e.write("").section(n.get(["events"], !1), n, {
            block: t
        }, null)
    }

    function t(e, t) {
        return e.write('<div class="timeline-event incident-icon" data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-second="').reference(t.get(["second"], !1), t, "h").write('" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"	').section(t.get(["cardType"], !1), t, {
            block: n
        }, null).section(t.get(["satisfiers"], !1), t, {
            block: r
        }, null).write("></div> ")
    }

    function n(e, t) {
        return e.write('data-card-type="').reference(t.get(["value"], !1), t, "h").write('"')
    }

    function r(e, t) {
        return e.write("data-event-satisfier-").reference(t.get(["name"], !1), t, "h").write(" ")
    }

    return dust.register("match-centre-stadium-events", e), e
}(), ! function() {
    function e(e, t) {
        return t = t.shiftBlocks(c), e.write("").helper("partial", t, {
            block: f
        }, {
            field: "home",
            players: t.getPath(!1, ["home", "players"]),
            teamId: t.getPath(!1, ["home", "teamId"])
        }).write('<div class="pitch-container"><div class="match-info"><span class="venue" data-for="venueName"><label>Venue: </label><span class="mc-icon"></span><span class="value">').reference(t.get(["venueName"], !1), t, "h").write('</span></span><span class="attendance" data-for="attendance"><label>Attendance:</label> <span class="value">').reference(t.get(["attendance"], !1), t, "h").write('</span></span><span class="weather" data-for="weatherCode"><label>Weather: </label><span class="mc-icon"></span><span class="value"></span></span><span class="referee" data-for="refereeName"><label>Referee: </label><span class="mc-icon"></span><span class="value">').reference(t.get(["refereeName"], !1), t, "h").write('</span></span></div><div class="pitch"><div class="pitch-field" data-team-id="').reference(t.getPath(!1, ["home", "teamId"]), t, "h").write('" data-field="home"></div><div class="pitch-field" data-team-id="').reference(t.getPath(!1, ["away", "teamId"]), t, "h").write('" data-field="away"></div></div></div>').helper("partial", t, {
            block: l
        }, {
            field: "away",
            players: t.getPath(!1, ["away", "players"]),
            teamId: t.getPath(!1, ["away", "teamId"])
        })
    }

    function t(e, t) {
        return t = t.shiftBlocks(c), e.write('<div class="player').section(t.get(["isManOfTheMatch"], !1), t, {
            block: n
        }, null).write('"').section(t.get(["playerId"], !1), t, {
            block: r
        }, null).write('data-field="').reference(t.get(["field"], !1), t, "h").write('" ').section(t.get(["subbedInExpandedMinute"], !1), t, {
            block: i
        }, null).write('><div class="player-stat"><span class="player-stat-value"></span></div><div class="player-info"><div class="player-name-wrapper" title="').reference(t.get(["name"], !1), t, "h").write('"><span class="shirt-number">').reference(t.get(["shirtNo"], !1), t, "h").write('.</span><span class="player-name">').helper("playerName", t, {
            block: s
        }, {
            fullName: t.get(["name"], !1),
            isLastName: "true"
        }).write('</span><div class="background-mask"></div></div><div class="player-key-incidents"></div></div></div>')
    }

    function n(e, t) {
        return t = t.shiftBlocks(c), e.write(" is-man-of-the-match")
    }

    function r(e, t) {
        return t = t.shiftBlocks(c), e.write('data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"')
    }

    function i(e, t) {
        return t = t.shiftBlocks(c), e.write('data-subbed-in="true"')
    }

    function s(e, t) {
        return t = t.shiftBlocks(c), e
    }

    function o(e, t) {
        return t = t.shiftBlocks(c), e.write('<div class="bench" data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('" data-field="').reference(t.get(["field"], !1), t, "h").write('"><h4>Substitutes</h4><div class="substitutes" data-field="').reference(t.get(["field"], !1), t, "h").write('" >').section(t.get(["players"], !1), t, {
            block: u
        }, null).write('</div><div class="compared" data-mode="team" data-field="').reference(t.get(["field"], !1), t, "h").write('"><div class="team-emblem"><img src=""/></div><div class="manager-name"></div><div class="formation"></div><div class="average-age"></div></div><div class="compared" data-mode="player" data-field="').reference(t.get(["field"], !1), t, "h").write('"><div class="player-avatar"><img src=""/></div><div class="player-name-wrapper"><span class="player-shirt-no"></span><a class="player-name" href=""></a> <span class="player-position"></span></div><div><span class="player-age"></span><span class="player-height"></span>  <span class="player-weight"></span></div><div class="player-key-incidents"></div></div></div>')
    }

    function u(e, t) {
        return t = t.shiftBlocks(c), e.helper("partial", t, {
            block: a
        }, {
            playerId: t.get(["playerId"], !1),
            name: t.get(["name"], !1),
            shirtNo: t.get(["shirtNo"], !1),
            stats: t.get(["stats"], !1),
            isManOfTheMatch: t.get(["isManOfTheMatch"], !1),
            field: t.get(["field"], !1),
            subbedInExpandedMinute: t.get(["subbedInExpandedMinute"], !1)
        })
    }

    function a(e, t) {
        return t = t.shiftBlocks(c), e.block(t.getBlock("match_centre_player"), t, {}, null)
    }

    function f(e, t) {
        return t = t.shiftBlocks(c), e.block(t.getBlock("match_centre_players"), t, {}, null)
    }

    function l(e, t) {
        return t = t.shiftBlocks(c), e.block(t.getBlock("match_centre_players"), t, {}, null)
    }

    dust.register("match-centre-stadium", e);
    var c = {
        match_centre_player: t,
        match_centre_players: o
    };
    return e
}(), ! function() {
    function e(e, t) {
        return t = t.shiftBlocks(p), e.write('<ul class="match-centre-stats" data-mode="team">').section(t.get(["teamStatGroups"], !1), t, {
            block: f
        }, null).write('</ul><div class="match-centre-stats" data-mode="player"><div id="back-to-team" class="iconize iconize-icon-left ui-state-transparent-default"><span class="ui-icon ui-icon-triangle-1-w"></span>Back to team stats</div><ul>').section(t.get(["playerStatGroups"], !1), t, {
            block: c
        }, null).write("</ul></div>")
    }

    function t(e, t) {
        return t = t.shiftBlocks(p), e.write('<li class="match-centre-stat ').helper("if", t, {
            block: n
        }, {
            cond: r
        }).write(" ").helper("if", t, {
            block: i
        }, {
            cond: s
        }).write('" data-for="').reference(t.get(["dafaFor"], !1), t, "h").write('"><h4>').reference(t.get(["displayName"], !1), t, "h").write('</h4><div class="match-centre-stat-values"><span class="match-centre-stat-value" data-field="home"></span> <span style="display: inline-block; vertical-align: middle;">-</span> <span class="match-centre-stat-value" data-field="away"></span></div><div class="show-stat-details iconize iconize-icon-right ui-state-transparent-default"><label>More</label><span class="ui-icon ui-icon-circle-arrow-s"></span></div></li><li class="match-centre-stat-details" data-detail-for="').reference(t.get(["dafaFor"], !1), t, "h").write('">').helper("if", t, {
            block: o
        }, {
            cond: a
        }).write('<div class="top-players-for-stat-wrapper"><h3>Top 5 Players</h3><div class="top-players-for-stat"></div></div><div class="close-stat-details">Close x</div><div class="match-centre-stat-footnote">').reference(t.get(["footNote"], !1), t, "h").write("</div></li>")
    }

    function n(e, t) {
        return t = t.shiftBlocks(p), e.write("selected")
    }

    function r(e, t) {
        return t = t.shiftBlocks(p), e.write("(").reference(t.get(["$idx"], !1), t, "h").write(" == 0)")
    }

    function i(e, t) {
        return t = t.shiftBlocks(p), e.write("has-stats")
    }

    function s(e, t) {
        return t = t.shiftBlocks(p), e.write("0 < '").reference(t.get(["stats"], !1), t, "h").write("'.length")
    }

    function o(e, t) {
        return t = t.shiftBlocks(p), e.write(' <div class="match-centre-stats"><h3>Details</h3><ul >').section(t.get(["stats"], !1), t, {
            block: u
        }, null).write("</ul></div>")
    }

    function u(e, t) {
        return t = t.shiftBlocks(p), e.write('<li class="match-centre-stat match-centre-sub-stat" data-for="').reference(t.get(["key"], !1), t, "h").write('"><h4>').reference(t.get(["displayName"], !1), t, "h").write('</h4><div class="match-centre-stat-values"><span class="match-centre-stat-value" data-field="home"></span><span style="display: inline-block; vertical-align: middle;">-</span> <span class="match-centre-stat-value" data-field="away"></span></div></li>')
    }

    function a(e, t) {
        return t = t.shiftBlocks(p), e.write("0 < '").reference(t.get(["stats"], !1), t, "h").write("'.length")
    }

    function f(e, t) {
        return t = t.shiftBlocks(p), e.helper("partial", t, {
            block: l
        }, {
            $idx: t.get(["$idx"], !1),
            stats: t.get(["stats"], !1),
            displayName: t.get(["displayName"], !1),
            dafaFor: t.get(["key"], !1),
            footNote: t.get(["footNote"], !1)
        })
    }

    function l(e, t) {
        return t = t.shiftBlocks(p), e.block(t.getBlock("match_centre_stat"), t, {}, null)
    }

    function c(e, t) {
        return t = t.shiftBlocks(p), e.helper("partial", t, {
            block: h
        }, {
            $idx: t.get(["$idx"], !1),
            stats: t.get(["stats"], !1),
            displayName: t.get(["displayName"], !1),
            dafaFor: t.get(["key"], !1),
            footNote: t.get(["footNote"], !1)
        })
    }

    function h(e, t) {
        return t = t.shiftBlocks(p), e.block(t.getBlock("match_centre_stat"), t, {}, null)
    }

    dust.register("match-centre-stats", e);
    var p = {
        match_centre_stat: t
    };
    return e
}(), ! function() {
    function e(e, n) {
        return e.write("").section(n.get(["events"], !1), n, {
            block: t
        }, null)
    }

    function t(e, t) {
        return e.write('<div class="timeline-event incident-icon ').section(t.get(["left"], !1), t, {
            block: n
        }, null).write('" data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-second="').reference(t.get(["second"], !1), t, "h").write('" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"	').section(t.get(["cardType"], !1), t, {
            block: s
        }, null).section(t.get(["left"], !1), t, {
            block: o
        }, null).section(t.get(["satisfiers"], !1), t, {
            block: u
        }, null).write('><span class="box"></span><div class="timeline-event-detail"><div class="timeline-event-info">').section(t.get(["playerId"], !1), t, {
            block: a
        }, null).notexists(t.get(["playerId"], !1), t, {
            block: l
        }, null).write("</div>").section(t.get(["text"], !1), t, {
            block: p
        }, null).write("</div></div> ")
    }

    function n(e, t) {
        return e.helper("if", t, {
            block: r
        }, {
            cond: i
        })
    }

    function r(e) {
        return e.write("on-right")
    }

    function i(e, t) {
        return e.write("(50 < ").reference(t.get(["left"], !1), t, "h").write(")")
    }

    function s(e, t) {
        return e.write('data-card-type="').reference(t.get(["value"], !1), t, "h").write('"')
    }

    function o(e, t) {
        return e.write('style="left: ').reference(t.get(["left"], !1), t, "h").write('%"')
    }

    function u(e, t) {
        return e.write("data-event-satisfier-").reference(t.get(["name"], !1), t, "h").write(" ")
    }

    function a(e, t) {
        return e.write('<img class="player-avatar" src=').helper("imageUrl", t, {}, {
            fileName: f
        }).write('><span class="player-name">').reference(t.get(["name"], !1), t, "h").write("</span>")
    }

    function f(e, t) {
        return e.write("players/").reference(t.get(["playerId"], !1), t, "h").write(".jpg")
    }

    function l(e, t) {
        return e.section(t.get(["teamId"], !1), t, {
            block: c
        }, null)
    }

    function c(e, t) {
        return e.write('<div class="team-emblem"><img src=').helper("imageUrl", t, {}, {
            fileName: h
        }).write("></div>")
    }

    function h(e, t) {
        return e.write("teams/").reference(t.get(["teamId"], !1), t, "h").write(".png")
    }

    function p(e, t) {
        return e.write('<span class="timeline-event-detail-text"><span class="timeline-event-minute">').reference(t.get(["minute"], !1), t, "h").write("</span>").reference(t.get(["text"], !1), t, "h", ["s"]).write("</span>")
    }

    return dust.register("match-centre-timeline-events", e), e
}(), ! function() {
    function e(e, n) {
        return e.write("").section(n.get(["stats"], !1), n, {
            block: t
        }, null)
    }

    function t(e, t) {
        return e.write('<div class="timeline-stat ').section(t.get(["left"], !1), t, {
            block: n
        }, null).write('" data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-expanded-minute="').reference(t.get(["expandedMinute"], !1), t, "h").write('" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"	style="left: ').reference(t.get(["left"], !1), t, "h").write("%; ").section(t.get(["top"], !1), t, {
            block: s
        }, null).section(t.get(["bottom"], !1), t, {
            block: o
        }, null).write("height: ").reference(t.get(["height"], !1), t, "h").write('%;"data-event-count="').reference(t.getPath(!1, ["events", "length"]), t, "h").write('"><span class="box"></span></div></div> ')
    }

    function n(e, t) {
        return e.helper("if", t, {
            block: r
        }, {
            cond: i
        })
    }

    function r(e) {
        return e.write("on-right")
    }

    function i(e, t) {
        return e.write("(50 < ").reference(t.get(["left"], !1), t, "h").write(")")
    }

    function s(e, t) {
        return e.write("top: ").reference(t.get(["top"], !1), t, "h").write("%;")
    }

    function o(e, t) {
        return e.write("bottom: ").reference(t.get(["bottom"], !1), t, "h").write("%;")
    }

    return dust.register("match-centre-timeline-stats", e), e
}(), ! function() {
    function e(e, t) {
        return e.write('<div class="timeline"><div id="match-centre-follow-live" class="follow-live hidden">Follow live</div><div class="timeline-content"><div class="timeline-events" data-field="home" data-team-id="').reference(t.getPath(!1, ["home", "teamId"]), t, "h").write('"></div><div class="timeline-control"><div class="minutes-container"></div><div class="timeline-handles"></div><div class="timeline-stat-performance"></div><div class="timeline-stat-performance2"><div class="timeline-stats" data-field="home"></div><div class="timeline-stats" data-field="away"></div></div></div><div class="timeline-events" data-field="away" data-team-id="').reference(t.getPath(!1, ["away", "teamId"]), t, "h").write('"></div></div></div><div class="timeline-range-mask"></div>')
    }

    return dust.register("match-centre-timeline", e), e
}(), ! function() {
    function e(e, r) {
        return e.write('<table><tbody><tr><td class="team">').reference(r.get(["homeTeamName"], !1), r, "h").write('</td><td class="result">').reference(r.get(["score"], !1), r, "h").write('</td><td class="team">').reference(r.get(["awayTeamName"], !1), r, "h").write('</td></tr><tr><td class="crest"><div class="team-emblem"><img src=').helper("imageUrl", r, {}, {
            fileName: t
        }).write('></div></td><td><div class="info-block cleared"><dl>').section(r.get(["elapsed"], !1), r, {
            block: n
        }, null).write('</dl></div><div class="info-block cleared"><dl>').section(r.get(["htScore"], !1), r, {
            block: u
        }, null).section(r.get(["ftScore"], !1), r, {
            block: a
        }, null).section(r.get(["etScore"], !1), r, {
            block: f
        }, null).section(r.get(["pkScore"], !1), r, {
            block: l
        }, null).write('</dl></div><div class="info-block cleared"><dl><dt>Kick off:</dt><dd>').reference(r.get(["startTime"], !1), r, "h").write("</dd><dt>Date:</dt><dd>").reference(r.get(["startDate"], !1), r, "h").write('</dd></dl></div></td><td class="crest"><div class="team-emblem"><img src=').helper("imageUrl", r, {}, {
            fileName: c
        }).write("></div></td></tr></tbody></table>")
    }

    function t(e, t) {
        return e.write("teams/").reference(t.get(["homeTeamId"], !1), t, "h").write(".png")
    }

    function n(e, t) {
        return e.write('<dt>Elapsed:</dt><dd class="status">').notexists(t.get(["matchTerminatedUnExpectedly"], !1), t, {
            block: r
        }, null).exists(t.get(["matchTerminatedUnExpectedly"], !1), t, {
            block: o
        }, null).write("</dd>")
    }

    function r(e, t) {
        return e.write('<span class="').exists(t.get(["finished"], !1), t, {
            block: i
        }, null).write(" ").notexists(t.get(["finished"], !1), t, {
            block: s
        }, null).write(' rc">').reference(t.get(["elapsed"], !1), t, "h").write("</span>")
    }

    function i(e) {
        return e.write("finished")
    }

    function s(e) {
        return e.write("inplay")
    }

    function o(e, t) {
        return e.write("<span>").reference(t.get(["elapsed"], !1), t, "h").write("</span>")
    }

    function u(e, t) {
        return e.write("<dt>Half time:</dt><dd>").reference(t.get(["htScore"], !1), t, "h").write("</dd> ")
    }

    function a(e, t) {
        return e.write("<dt>Full time:</dt><dd>").reference(t.get(["ftScore"], !1), t, "h").write("</dd> ")
    }

    function f(e, t) {
        return e.write("<dt>Extra time:</dt><dd>").reference(t.get(["etScore"], !1), t, "h").write("</dd> ")
    }

    function l(e, t) {
        return e.write("<dt>Penalty shootout:</dt><dd>").reference(t.get(["pkScore"], !1), t, "h").write("</dd> ")
    }

    function c(e, t) {
        return e.write("teams/").reference(t.get(["awayTeamId"], !1), t, "h").write(".png")
    }

    return dust.register("match-centre-top-header", e), e
}(), ! function() {
    function e(e, n) {
        return e.section(n.get(["players"], !1), n, {
            block: t
        }, null)
    }

    function t(e, t) {
        return e.write('<div class="top-player-for-stat clearfix" data-field="').reference(t.get(["field"], !1), t, "h").write('"><div><span class="top-player-index">').helper("math", t, {}, {
            key: n,
            method: "add",
            operand: "1"
        }).write('</span><img class="team-emblem" src=').helper("imageUrl", t, {}, {
            fileName: r
        }).write('><span class="player-name">').reference(t.get(["name"], !1), t, "h").write('</span><span class="player-position">(').reference(t.get(["position"], !1), t, "h").write(')</span><span class="team-name">').reference(t.get(["teamName"], !1), t, "h").write('</span><span class="player-value responds-to-live-effect">').reference(t.get(["value"], !1), t, "h").write("</span></div></div>")
    }

    function n(e, t) {
        return e.reference(t.get(["$idx"], !1), t, "h")
    }

    function r(e, t) {
        return e.write("teams/").reference(t.get(["teamId"], !1), t, "h").write(".png")
    }

    return dust.register("match-centre-top-players", e), e
}(), ! function() {
    function e(e) {
        return e.write('<div id="stadium"></div><div id="match-centre-stats"></div><div id="match-centre-timeline"></div><div id="match-centre-commentary-summary"></div>')
    }

    return dust.register("match-centre", e), e
}(), ! function() {
    function e(e, n) {
        return e.write('<div class="loading-spinner-container"  ').exists(n.get(["firstRender"], !1), n, {
            block: t
        }, null).write('> <div class="loading-spinner"><div class="spinner-container loading-container1"><div class="circle1"></div><div class="circle2"></div><div class="circle3"></div><div class="circle4"></div></div><div class="spinner-container loading-container2"><div class="circle1"></div><div class="circle2"></div><div class="circle3"></div><div class="circle4"></div></div><div class="spinner-container loading-container3"><div class="circle1"></div><div class="circle2"></div><div class="circle3"></div><div class="circle4"></div></div></div><div class="loading-spinner-container-shade"></div></div>')
    }

    function t(e) {
        return e.write('style="position:static;height: 20.4em;" ')
    }

    return dust.register("spinning-loading-animation", e), e
}(), ! function() {
    function e(e, n) {
        return e.write('<div id="top-player-stats-summary-filter" class="grid-toolbar"><div style="margin-top: 0.4em;"><div style="float:left;"><dl class="listbox"><span id="category-label" class="option">Category:</span>    <select id="category" style="width: 7em" data-value><optgroup label="Defensive"> <option value="tackles">Tackles</option><option value="interception">Interception</option>  <option value="fouls">Fouls</option><option value="cards">Cards</option><option value="offsides">Offsides</option><option value="clearances">Clearances</option><option value="blocks">Blocks</option><option value="saves">Saves</option></optgroup><optgroup label="Offensive"><option value="shots" selected="selected">Shots</option><option value="goals">Goals</option><option value="dribbles">Dribbles</option><option value="possession-loss">Possession loss</option><option value="aerial">Aerial</option></optgroup><optgroup label="Passing">          <option value="passes">Passes</option><option value="key-passes">Key passes</option><option value="assists">Assists</option></optgroup></select></dl></div><div style="float:left;"><dl class="listbox"><span id="subcategory-label" class="option">Sub category:</span>    <select id="subcategory" data-value></select></dl></div><div id="accumulation-container"><dl class="listbox"><span id="accumulation-label" class="option">Accumulation</span>  <select id="statsAccumulationType" data-value><option value="0">Per game</option><option value="1">Per 90 mins</option>  <option value="4">Every X minute</option><option value="2">Total</option></select><span id="accumulationInfo" class="icon question-mark"></span>  <span id="sendFeedbackIcon" class="icon envelope"></span></dl></div></div><div id="tables-alerts"><ul><li class="accumulation-player-info alert alert-info"><strong>Per game:  </strong>Average number of times a player performs this action per game</li><li class="accumulation-player-info alert alert-info"><strong>Per 90 mins: </strong>Average number of times a player performs this action for every 90 minutes that he plays</li><li class="accumulation-player-info alert alert-info"><strong>Every X minute: </strong>A player performs this action once every X minutes, on average</li><li class="accumulation-player-info alert alert-info"><strong>Total: </strong>Total number of times a player performed this action during the season</li><li class="accumulation-team-info alert alert-info"><strong>Per game:  </strong>Average number of times a team performs this action per game</li><li class="accumulation-team-info alert alert-info"><strong>Per 90 mins: </strong>Average number of times a team performs this action for every 90 minutes that they play</li><li class="accumulation-team-info alert alert-info"><strong>Every X minute: </strong>A team performs this action once every X minutes, on average</li><li class="accumulation-team-info alert alert-info"><strong>Total: </strong>Total number of times a team performed this action during the season</li><li id="tournament-validation-alert" class="alert alert-danger"><strong>Hold on!</strong> You need to select at least one tournament</li><li id="position-validation-alert" class="alert alert-danger"><strong>Hold on!</strong> You need to select at least one position</li><li id="age-validation-alert" class="alert alert-danger"><strong>Hold on!</strong> Age needs to be a positive number</li><li id="appearances-validation-alert" class="alert alert-danger"><strong>Hold on!</strong> Appearances needs to be a positive number</li></ul></div><div class="feedback-area"><form id="feedback-submit-form" action="/ContactUs" method="POST"><span id="feedback-form-title">Let us know what we can do better</span><input type="hidden" name="subject" value="developers-feedback"><input type="email" name="emailAddress" placeholder="Your email"><textarea name="message" rows="7" cols="30" placeholder="Your message" required="true"></textarea><input type="submit" value="Send" class="feedback-send-button"></form><div id="feedback-thankyou"><span >Thanks a lot for your feedback! We will reply you soon.</span><input type="submit" value="OK" class="ok-button"></div></div><div id="filter-options" ><div class="filter-row"><dl class="listbox"><dd><a id="field" class="option label" data-value>Field</a></dd><dd><a id="overall" class="option field-option clickable default-selected" data-option-value="Overall">Overall</a></dd><dd><a id="home" class="option field-option clickable" data-option-value="Home">Home</a></dd><dd><a id="away" class="option field-option clickable" data-option-value="Away">Away</a></dd>').exists(n.get(["displayTournaments"], !1), n, {
            block: t
        }, null).write(" ").exists(n.get(["showPlayerFilters"], !1), n, {
            block: l
        }, null).write("<dd>").exists(n.get(["showPlayerFilters"], !1), n, {
            "else": c,
            block: d
        }, null).write('<input type="hidden" id="timeOfTheGameStart" data-value><input type="hidden" id="timeOfTheGameEnd" data-value><a class="option label">Minutes</a><select id="time-of-the-game"><option id="time-of-the-game-option" value="0">All</option></select><div id="time-of-the-game-options" class="checkbox-drop-down-options"><div id="time-of-the-game-slider"></div></div></div></dd>').exists(n.get(["showFormationFilter"], !1), n, {
            block: v
        }, null).exists(n.get(["showPlayerFilters"], !1), n, {
            block: m
        }, null).exists(n.get(["showPlayerFilters"], !1), n, {
            block: g
        }, null).exists(n.get(["showPlayerFilters"], !1), n, {
            block: w
        }, null).exists(n.get(["showPlayerFilters"], !1), n, {
            block: x
        }, null).exists(n.get(["showPlayerFilters"], !1), n, {
            "else": k,
            block: O
        }, null).write('         <dd><button type="button" class="search-button" ').exists(n.get(["showPlayerFilters"], !1), n, {
            "else": M,
            block: _
        }, null).write(">Search</button></dd></dl></div></div>  </div>")
    }

    function t(e, t) {
        return e.write(' <dd id="tournament-element-area"><div class="checkbox-drop-down-element"><a class="option label">Tournaments</a><select style="max-width: 5em;" ').exists(t.get(["tournaments"], !1), t, {
            "else": n,
            block: r
        }, null).write(">").section(t.get(["tournaments"], !1), t, {
            "else": i,
            block: s
        }, null).write("</select>").section(t.get(["tournaments"], !1), t, {
            "else": a,
            block: f
        }, null).write(" </div></dd>")
    }

    function n(e) {
        return e.write(' id="tournament" ')
    }

    function r(e) {
        return e.write(' id="tournamentOptions" data-value ')
    }

    function i(e) {
        return e.write('<option id="tournament-option" value="0">All</option>')
    }

    function s(e, t) {
        return e.write('<option id="tournament-option" value="').reference(t.get(["TournamentId"], !1), t, "h").write('" data-stage-type="').reference(t.get(["TournamentStageType"], !1), t, "h").write('" ').helper("if", t, {
            block: o
        }, {
            cond: u
        }).write(">").reference(t.get(["TournamentName"], !1), t, "h").write("</option>")
    }

    function o(e) {
        return e.write(" selected ")
    }

    function u(e, t) {
        return e.reference(t.get(["TournamentId"], !1), t, "h").write(" == ").reference(t.get(["tournamentOptions"], !1), t, "h")
    }

    function a(e) {
        return e.write('<div id="tournamentOptions" style="margin-left: 6.5em;"  class="checkbox-drop-down-options" data-value="2,3,4,5,22"><label style="cursor:pointer"><input type="checkbox" class="tournament-option" value="2" checked><span class="pt iconize iconize-icon-left" title="England">Premier League<span class="ui-icon country flg-gb-eng"></span></span></label><br/><label style="cursor:pointer"><input type="checkbox" class="tournament-option" value="5" checked><span class="pt iconize iconize-icon-left" title="Italy">Serie A<span class="ui-icon country flg-it"></span></span></label><br/><label style="cursor:pointer"><input type="checkbox" class="tournament-option" value="4" checked><span class="pt iconize iconize-icon-left" title="Spain">La Liga<span class="ui-icon country flg-es"></span></span></label><br/><label style="cursor:pointer"><input type="checkbox" class="tournament-option" value="3" checked><span class="pt iconize iconize-icon-left" title="Germany">Bundesliga<span class="ui-icon country flg-de"></span></span></label><br/><label style="cursor:pointer"><input type="checkbox" class="tournament-option" value="22" checked><span class="pt iconize iconize-icon-left" title="France">Ligue 1<span class="ui-icon country flg-fr"></span></span></label><br/></div>')
    }

    function f(e) {
        return e.write(" ")
    }

    function l(e) {
        return e.write('<dd><a class="option label" id="appearances-container">Appearances</a><select id="appearancesComparisonType" data-value="0"><option value="0">All</option><option value="1">Equals</option><option value="2">More than</option><option value="3">Less than</option></select></dd>                                <dd><input type="text" class="dropdown-bound-text-field user-input-value" id="appearances" data-value maxlength="3" size="3" ></dd>')
    }

    function c(e, t) {
        return e.exists(t.get(["showFormationFilter"], !1), t, {
            "else": h,
            block: p
        }, null)
    }

    function h(e) {
        return e.write('<div id="time-of-the-game-element" class="checkbox-drop-down-element unselectable" style="margin-left: 11.7em;">')
    }

    function p(e) {
        return e.write('<div id="time-of-the-game-element" class="checkbox-drop-down-element unselectable" style="margin-left: 8.3em;">')
    }

    function d(e) {
        return e.write(' <div id="time-of-the-game-element" class="checkbox-drop-down-element unselectable">')
    }

    function v(e) {
        return e.write('<dd id="formation-container"><a class="option label">Formation</a><select id="formation" data-value=""><option value="">All</option><option value="3412">3-4-1-2</option><option value="3421">3-4-2-1</option><option value="343">3-4-3</option><option value="3511">3-5-1-1</option><option value="352">3-5-2</option><option value="41212">4-1-2-1-2</option><option value="4141">4-1-4-1</option><option value="4222">4-2-2-2</option><option value="4231">4-2-3-1</option><option value="4321">4-3-2-1</option><option value="433">4-3-3</option><option value="4411">4-4-1-1</option><option value="442">4-4-2</option><option value="451">4-5-1</option><option value="532">5-3-2</option><option value="541">5-4-1</option></select></dd>')
    }

    function m(e) {
        return e.write('</dl></div><div class="filter-row"><dl class="listbox">')
    }

    function g(e, t) {
        return e.write('<div><dd id="age-container"><label ').exists(t.get(["disableAge"], !1), t, {
            block: y
        }, null).write(' class="option label">Age</label><select id="ageComparisonType" ').exists(t.get(["disableAge"], !1), t, {
            block: b
        }, null).write(' data-value="0"><option value="0">All</option><option value="1">Equals</option><option value="2">More than</option><option value="3">Less than</option></select><input type="text" id="age" maxlength="2" size="2" class="dropdown-bound-text-field user-input-value" data-value></dd></div>')
    }

    function y(e) {
        return e.write(' data-disabled="true" ')
    }

    function b(e) {
        return e.write(" disabled ")
    }

    function w(e, t) {
        return e.write('<dd><div class="checkbox-drop-down-element unselectable" ><a class="option label" id="position-label" ').exists(t.get(["disablePositions"], !1), t, {
            block: E
        }, null).write('>Positions</a><select id="position" ').exists(t.get(["disablePositions"], !1), t, {
            block: S
        }, null).write('><option id="position-option" value="0">All</option></select><div id="positionOptions" class="position-checkbox-drop-down-options" ><table id="pitch"><tr><td colspan="3"><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'FW\'" checked>FW</label></td></tr><tr><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'AML\'" checked>AML</label></td><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'AMC\'" checked>AMC</label></td><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'AMR\'" checked>AMR</label></td></tr><tr><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'ML\'" checked>ML</label></td><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'MC\'" checked>MC</label></td><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'MR\'" checked>MR</label></td></tr><tr><td  colspan="3"><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'DMC\'" checked>DMC</label></td></tr><tr><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'DL\'" checked>DL</label></td><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'DC\'" checked>DC</label></td><td><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'DR\'" checked>DR</label></td></tr><tr><td  colspan="3"><label class="position-checkbox-drop-down-option-label"><input type="checkbox" class="position-option" value="\'GK\'" checked>GK</label></td></tr></table> <div id="position-controls"><label style="cursor: pointer"><input type="checkbox" id="toggle" name="toggle" checked>Toggle all</label><label style="cursor: pointer"><input type="checkbox" id="subs" name="subs" value="\'Sub\'" class="position-option" checked>Subs</label></div></div></div></dd>')
    }

    function E(e) {
        return e.write(' data-disabled="true" ')
    }

    function S(e) {
        return e.write(" disabled ")
    }

    function x(e, t) {
        return e.write('<dd id="nationality-container"><a class="option label" ').exists(t.get(["disableNationality"], !1), t, {
            block: T
        }, null).write('>Nationality</a><select id="nationality" data-value ').exists(t.get(["disableNationality"], !1), t, {
            block: N
        }, null).write('><option value="">All</option>').section(t.get(["countries"], !1), t, {
            block: C
        }, null).write("</select></dd>")
    }

    function T(e) {
        return e.write(' data-disabled="true" ')
    }

    function N(e) {
        return e.write(" disabled ")
    }

    function C(e, t) {
        return e.write('<option value="').reference(t.get(["CountryId"], !1), t, "h").write('">').reference(t.get(["InvariantName"], !1), t, "h").write("</option>")
    }

    function k(e, t) {
        return e.exists(t.get(["showFormationFilter"], !1), t, {
            "else": L,
            block: A
        }, null)
    }

    function L(e) {
        return e.write('<dd style="margin-left: 31.7em;"><button type="button" class="reset-button" style="padding: 2px 2px;">Reset</button></dd> ')
    }

    function A(e) {
        return e.write('<dd ><button type="button" class="reset-button" style="padding: 2px 2px;margin-left:0em">Reset</button></dd> ')
    }

    function O(e) {
        return e.write(' <dd><button type="button" class="reset-button">Reset</button></dd> ')
    }

    function M(e) {
        return e.write(' style="margin-left: 2px; padding: 2px 4px;" ')
    }

    function _(e) {
        return e.write(" ")
    }

    return dust.register("statistics-filter", e), e
}(), ! function() {
    function e(e, n) {
        return e.write('<div class="clear"></div><div class="grid-toolbar">').exists(n.get(["tournaments"], !1), n, {
            block: t
        }, null).write('<div style=" ').exists(n.get(["tournaments"], !1), n, {
            "else": o,
            block: u
        }, null).write('"><dl id="field" class="listbox"><dt>View:</dt><dd><a class="option ').helper("if", n, {
            block: a
        }, {
            cond: f
        }).write('" data-value="Overall" data-backbone-model-attribute="field">Overall</a></dd><dd><a class="option ').helper("if", n, {
            block: l
        }, {
            cond: c
        }).write('" data-value="Home" data-backbone-model-attribute="field">Home</a></dd><dd><a class="option ').helper("if", n, {
            block: h
        }, {
            cond: p
        }).write('" data-value="Away" data-backbone-model-attribute="field">Away</a></dd></dl></div>').exists(n.get(["displayApps"], !1), n, {
            block: d
        }, null).write("</div>")
    }

    function t(e, t) {
        return e.write('<div style="float:left;"><dl id="tournamentOptions" class="listbox"><dt>Tournaments:</dt>').section(t.get(["tournaments"], !1), t, {
            block: n
        }, {
            selectedTournament: s
        }).write("</dl></div>")
    }

    function n(e, t) {
        return e.write('<dd><a class="option ').helper("if", t, {
            block: r
        }, {
            cond: i
        }).write('" data-value="').reference(t.get(["TournamentId"], !1), t, "h").write('" data-backbone-model-attribute="tournamentOptions">').reference(t.get(["TournamentName"], !1), t, "h").write("</a></dd>")
    }

    function r(e) {
        return e.write(" selected ")
    }

    function i(e, t) {
        return e.reference(t.get(["selectedTournament"], !1), t, "h").write(" == ").reference(t.get(["TournamentId"], !1), t, "h")
    }

    function s(e, t) {
        return e.reference(t.get(["tournamentOptions"], !1), t, "h")
    }

    function o(e) {
        return e.write(" float:left; ")
    }

    function u(e) {
        return e.write(" float:right; ")
    }

    function a(e) {
        return e.write(" selected ")
    }

    function f(e, t) {
        return e.write("'").reference(t.get(["field"], !1), t, "h").write("' == 'Overall'")
    }

    function l(e) {
        return e.write(" selected ")
    }

    function c(e, t) {
        return e.write("'").reference(t.get(["field"], !1), t, "h").write("' == 'Home'")
    }

    function h(e) {
        return e.write(" selected ")
    }

    function p(e, t) {
        return e.write("'").reference(t.get(["field"], !1), t, "h").write("' == 'Away'")
    }

    function d(e, t) {
        return e.write('<div style="float:right; margin-right:5px;"><dl id="apps" class="listbox"><dt>Filter:</dt><dd><a class="option ').helper("if", t, {
            block: v
        }, {
            cond: m
        }).write('" data-value="true" data-backbone-model-attribute="isMinApp">Minimum apps</a></dd><dd><a class="option ').helper("if", t, {
            block: g
        }, {
            cond: y
        }).write('" data-value="false" data-backbone-model-attribute="isMinApp">All players</a></dd></dl></div>')
    }

    function v(e) {
        return e.write(" selected ")
    }

    function m(e, t) {
        return e.write("'").reference(t.get(["isMinApp"], !1), t, "h").write("' == 'true'")
    }

    function g(e) {
        return e.write(" selected ")
    }

    function y(e, t) {
        return e.write("'").reference(t.get(["isMinApp"], !1), t, "h").write("' == ''")
    }

    return dust.register("statistics-mini-filter", e), e
}(), ! function() {
    function e(e, n) {
        return e.write('<div class="grid-toolbar"><dl class="listbox left"><dt><span class="stats-copyright unselectable">&copy; WhoScored</span></dt></dl>').exists(n.getPath(!1, ["paging", "totalPages"]), n, {
            block: t
        }, null).write("  	</div>")
    }

    function t(e, t) {
        return e.write('<input type="hidden" id="currentPage" value="').reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write('"><input type="hidden" id="totalPages" value="').reference(t.getPath(!1, ["paging", "totalPages"]), t, "h").write('"><dl class="listbox right"><dt><b> Page ').reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write("/").reference(t.getPath(!1, ["paging", "totalPages"]), t, "h").write(" | Showing ").reference(t.getPath(!1, ["paging", "firstRecordIndex"]), t, "h").write(" - ").reference(t.getPath(!1, ["paging", "lastRecordIndex"]), t, "h").write(" of ").reference(t.getPath(!1, ["paging", "totalResults"]), t, "h").write('</b></dt><dd><a class="option ').helper("if", t, {
            "else": n,
            block: r
        }, {
            cond: i
        }).write('" id="first" data-page="1">first</a></dd><dd>| <a class="option ').helper("if", t, {
            "else": s,
            block: o
        }, {
            cond: u
        }).write('" id="prev" data-page="').reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write('">prev</a></dd><dd>| <a class="option ').helper("if", t, {
            "else": a,
            block: f
        }, {
            cond: l
        }).write('" id="next" data-page="').reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write('">next</a></dd><dd>| <a class="option ').helper("if", t, {
            "else": c,
            block: h
        }, {
            cond: p
        }).write('" id="last" data-page="').reference(t.getPath(!1, ["paging", "totalPages"]), t, "h").write('">last</a></dd></dl>')
    }

    function n(e) {
        return e.write(" clickable ")
    }

    function r(e) {
        return e.write(" selected disabled ")
    }

    function i(e, t) {
        return e.reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write(" == 1")
    }

    function s(e) {
        return e.write(" clickable ")
    }

    function o(e) {
        return e.write(" disabled ")
    }

    function u(e, t) {
        return e.reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write(" == 1")
    }

    function a(e) {
        return e.write(" clickable ")
    }

    function f(e) {
        return e.write(" disabled ")
    }

    function l(e, t) {
        return e.reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write(" == ").reference(t.getPath(!1, ["paging", "totalPages"]), t, "h")
    }

    function c(e) {
        return e.write(" clickable ")
    }

    function h(e) {
        return e.write(" selected disabled ")
    }

    function p(e, t) {
        return e.reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write(" == ").reference(t.getPath(!1, ["paging", "totalPages"]), t, "h")
    }

    return dust.register("statistics-paging", e), e
}(), ! function() {
    function e(e, a) {
        return e.write('<table id="top-player-stats-summary-grid" class="grid with-centered-columns hover"><thead id="player-table-statistics-head"><tr>').exists(a.get(["isHistoricTournamentTable"], !1), a, {
            block: t
        }, null).helper("if", a, {
            block: n
        }, {
            cond: r
        }).write("		").helper("if", a, {
            "else": i,
            block: s
        }, {
            cond: o
        }).exists(a.get(["displayAge"], !1), a, {
            block: u
        }, null).exists(a.get(["displayHeight"], !1), a, {
            block: c
        }, null).exists(a.get(["displayWeight"], !1), a, {
            block: v
        }, null).exists(a.get(["displayApps"], !1), a, {
            block: b
        }, null).write(" ").exists(a.get(["minsPlayed"], !1), a, {
            block: x
        }, null).helper("statColumns", a, {
            block: k
        }, {
            columns: a.get(["statColumns"], !1),
            category: a.get(["category"], !1),
            subcategory: a.get(["subcategory"], !1),
            isMatchCentre: a.get(["matchCentreStatistics"], !1),
            exclude: "Incidents,Apps,AppsAsSub,SubOn"
        }).write('<th class="global sortable rating" data-stat-name="Rating">Rating</th>').exists(a.get(["displayIncidents"], !1), a, {
            block: M
        }, null).write('</tr></thead><tbody id="player-table-statistics-body">').exists(a.get(["playerTableStats"], !1), a, {
            "else": _,
            block: D
        }, null).write("</tbody></table>")
    }

    function t(e) {
        return e.write('<th class="pn" style="text-align: left;">Season</th><th class="pn team-name">Team</th>')
    }

    function n(e) {
        return e.write('<th class="rank">R</th><th class="rgn"></th>')
    }

    function r(e, t) {
        return e.write("'").reference(t.get(["isTournamentTable"], !1), t, "h").write("' != 'true' && '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' != 'true'")
    }

    function i(e) {
        return e.write('<th class="pn">Name</th>')
    }

    function s(e) {
        return e.write('<th class="pn">Tournament</th>')
    }

    function o(e, t) {
        return e.write("'").reference(t.get(["isTournamentTable"], !1), t, "h").write("' == 'true' || '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' == 'true'")
    }

    function u(e, t) {
        return e.write(' <th class="global sortable ').exists(t.get(["sortBy"], !1), t, {
            block: a
        }, null).write('" data-stat-name="Age">Age</th> ')
    }

    function a(e, t) {
        return e.write(" ").helper("if", t, {
            block: f
        }, {
            cond: l
        }).write(" ")
    }

    function f(e) {
        return e.write(" desc ")
    }

    function l(e, t) {
        return e.write("'").reference(t.get(["value"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function c(e, t) {
        return e.write(' <th class="global sortable ').exists(t.get(["sortBy"], !1), t, {
            block: h
        }, null).write('"  data-stat-name="Height">CM</th> ')
    }

    function h(e, t) {
        return e.write(" ").helper("if", t, {
            block: p
        }, {
            cond: d
        }).write(" ")
    }

    function p(e) {
        return e.write(" desc ")
    }

    function d(e, t) {
        return e.write("'").reference(t.get(["value"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function v(e, t) {
        return e.write(' <th class="global sortable ').exists(t.get(["sortBy"], !1), t, {
            block: m
        }, null).write('" data-stat-name="Weight">KG</th> ')
    }

    function m(e, t) {
        return e.write(" ").helper("if", t, {
            block: g
        }, {
            cond: y
        }).write(" ")
    }

    function g(e) {
        return e.write(" desc ")
    }

    function y(e, t) {
        return e.write("'").reference(t.get(["value"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function b(e, t) {
        return e.write(' <th class="global sortable ap ').exists(t.get(["sortBy"], !1), t, {
            block: w
        }, null).write('" data-stat-name="Apps">Apps</th> ')
    }

    function w(e, t) {
        return e.write(" ").helper("if", t, {
            block: E
        }, {
            cond: S
        }).write(" ")
    }

    function E(e) {
        return e.write(" desc ")
    }

    function S(e, t) {
        return e.write("'").reference(t.get(["value"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function x(e, t) {
        return e.write(' <th class="global sortable ').exists(t.get(["sortBy"], !1), t, {
            block: T
        }, null).write('" data-stat-name="MinsPlayed">MinsPlayed</th> ')
    }

    function T(e, t) {
        return e.write(" ").helper("if", t, {
            block: N
        }, {
            cond: C
        }).write(" ")
    }

    function N(e) {
        return e.write(" desc ")
    }

    function C(e, t) {
        return e.write("'").reference(t.get(["value"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function k(e, t) {
        return e.write(' <th class="global sortable ').reference(t.get(["value"], !1), t, "h").write(" ").exists(t.get(["sortBy"], !1), t, {
            block: L
        }, null).write('" data-stat-name="').reference(t.get(["value"], !1), t, "h").write('">').reference(t.get(["columnName"], !1), t, "h").write("</th>")
    }

    function L(e, t) {
        return e.write(" ").helper("if", t, {
            block: A
        }, {
            cond: O
        }).write(" ")
    }

    function A(e) {
        return e.write(" desc ")
    }

    function O(e, t) {
        return e.write("'").reference(t.get(["value"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function M(e) {
        return e.write(' <th class="global" style="text-align:left" data-stat-name="Incidents">KeyEvents</th> ')
    }

    function _(e) {
        return e.write('<tr><td colspan="20" style="padding-top: 17em;padding-bottom: 17em;font-weight: bold;color: #a94442;">There are no results to display	</td></tr>')
    }

    function D(e, t) {
        return e.section(t.get(["playerTableStats"], !1), t, {
            block: P
        }, null).exists(t.get(["showTotals"], !1), t, {
            block: Vt
        }, null)
    }

    function P(e, t) {
        return e.write('<tr class=" ').helper("if", t, {
            block: H
        }, {
            cond: B
        }).write(" ").helper("if", t, {
            block: j
        }, {
            cond: F
        }).write('" >').exists(t.get(["isHistoricTournamentTable"], !1), t, {
            block: I
        }, null).helper("if", t, {
            block: R
        }, {
            cond: V
        }).write(" ").helper("if", t, {
            block: $
        }, {
            cond: J
        }).helper("if", t, {
            "else": K,
            block: ut
        }, {
            cond: dt
        }).exists(t.get(["displayAge"], !1), t, {
            block: vt
        }, null).write(" ").exists(t.get(["displayHeight"], !1), t, {
            block: mt
        }, null).write(" ").exists(t.get(["displayWeight"], !1), t, {
            block: gt
        }, null).write(" ").exists(t.get(["displayApps"], !1), t, {
            block: yt
        }, null).helper("stats", t, {
            block: Tt
        }, {
            statNamesToDisplay: t.get(["statColumns"], !1),
            reference: t.get(["sortBy"], !1),
            object: t.getPath(!0, []),
            exclude: "Incidents,Apps,AppsAsSub,SubOn"
        }).write('<td class="rating ').exists(t.get(["sortBy"], !1), t, {
            block: Bt
        }, null).write('">').helper("round", t, {}, {
            keepDotsAndZeros: "true",
            number: It,
            displayDashInsteadOfZero: "true"
        }).write("</td>").exists(t.get(["displayIncidents"], !1), t, {
            block: qt
        }, null).write(" </tr>")
    }

    function H(e) {
        return e.write(" alt ")
    }

    function B(e, t) {
        return e.reference(t.get(["$idx"], !1), t, "h").write(" % 2 == 1")
    }

    function j(e) {
        return e.write(" not-current-player ")
    }

    function F(e, t) {
        return e.write("'").reference(t.get(["isActive"], !1), t, "h").write("' != 'true' && '").reference(t.get(["isTournamentTable"], !1), t, "h").write("' != 'true' && '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' != 'true'")
    }

    function I(e, t) {
        return e.write('<td class="rank tournament" >').reference(t.get(["seasonName"], !1), t, "h").write('</td><td class="rank team-name"><a class="team-link" href="/Teams/').reference(t.get(["teamId"], !1), t, "h").write('">').helper("wrap", t, {}, {
            word: q,
            maxChars: "13"
        }).write("</a></td>")
    }

    function q(e, t) {
        return e.reference(t.get(["teamName"], !1), t, "h")
    }

    function R(e, t) {
        return e.write('<td style="vertical-align: top">').helper("if", t, {
            "else": U,
            block: z
        }, {
            cond: X
        }).write("</td>")
    }

    function U(e, t) {
        return e.write("	").reference(t.get(["ranking"], !1), t, "h")
    }

    function z(e, t) {
        return e.helper("math", t, {}, {
            key: W,
            method: "add",
            operand: "1"
        })
    }

    function W(e, t) {
        return e.reference(t.get(["$idx"], !1), t, "h")
    }

    function X(e, t) {
        return e.reference(t.get(["ranking"], !1), t, "h").write(" == 0")
    }

    function V(e, t) {
        return e.write("'").reference(t.get(["isTournamentTable"], !1), t, "h").write("' != 'true' && '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' != 'true'")
    }

    function $(e, t) {
        return e.write('<td style="vertical-align: top"><span class="ui-icon country flg-').reference(t.get(["regionCode"], !1), t, "h").write('"></span>	</td>')
    }

    function J(e, t) {
        return e.write("'").reference(t.get(["isTournamentTable"], !1), t, "h").write("' != 'true' && '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' != 'true'")
    }

    function K(e, t) {
        return e.write('<td class="pn"><a class="player-link" href="/Players/').reference(t.get(["playerId"], !1), t, "h").write('">').reference(t.get(["name"], !1), t, "h").exists(t.get(["isManOfTheMatch"], !1), t, {
            block: Q
        }, null).exists(t.get(["displayIncidents"], !1), t, {
            block: G
        }, null).write(" </a>").exists(t.get(["hideTeamMetaData"], !1), t, {
            "else": rt,
            block: it
        }, null).write('<span class="player-meta-data">').reference(t.get(["age"], !1), t, "h").write('</span><span class="player-meta-data">, ').exists(t.get(["playedPositionsShort"], !1), t, {
            "else": st,
            block: ot
        }, null).write(" </span></td>")
    }

    function Q(e) {
        return e.write('<span class="incident-icon" data-mom></span>')
    }

    function G(e, t) {
        return e.write(' <span class="incident-wrapper">').section(t.get(["events"], !1), t, {
            block: Y
        }, null).write("</span>")
    }

    function Y(e, t) {
        return e.helper("if", t, {
            block: Z
        }, {
            cond: nt
        })
    }

    function Z(e, t) {
        return e.write('<span class="incident-icon"data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-second="').reference(t.get(["second"], !1), t, "h").write('" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"	').section(t.get(["cardType"], !1), t, {
            block: et
        }, null).section(t.get(["satisfiers"], !1), t, {
            block: tt
        }, null).write('></span><span class="player-meta-data">(').reference(t.get(["minute"], !1), t, "h").write("′)</span>")
    }

    function et(e, t) {
        return e.write('data-card-type="').reference(t.get(["value"], !1), t, "h").write('"')
    }

    function tt(e, t) {
        return e.write("data-event-satisfier-").reference(t.get(["name"], !1), t, "h").write(" ")
    }

    function nt(e, t) {
        return e.reference(t.getPath(!1, ["type", "value"]), t, "h").write(" == 18 || ").reference(t.getPath(!1, ["type", "value"]), t, "h").write(" == 19")
    }

    function rt(e, t) {
        return e.write('<a href="/Teams/').reference(t.get(["teamId"], !1), t, "h").write('" class="player-meta-data"><span class="team-name">').reference(t.get(["teamName"], !1), t, "h").write(", </span></a>")
    }

    function it(e) {
        return e
    }

    function st(e, t) {
        return e.write(" ").reference(t.get(["positionText"], !1), t, "h").write(" ")
    }

    function ot(e, t) {
        return e.write(" ").reference(t.get(["playedPositionsShort"], !1), t, "h").write(" ")
    }

    function ut(e, t) {
        return e.write('<td class="tournament"><a class="tournament-link  iconize iconize-icon-left" href="/Regions/').reference(t.get(["tournamentRegionId"], !1), t, "h").write("/Tournaments/").reference(t.get(["tournamentId"], !1), t, "h").write('"><span class="ui-icon country flg-').reference(t.get(["tournamentRegionCode"], !1), t, "h").write('"></span>').exists(t.get(["displayTournamentShortNames"], !1), t, {
            "else": at,
            block: ft
        }, null).helper("if", t, {
            block: lt
        }, {
            cond: ct
        }).helper("if", t, {
            block: ht
        }, {
            cond: pt
        }).write("</a></td>")
    }

    function at(e, t) {
        return e.reference(t.get(["tournamentName"], !1), t, "h")
    }

    function ft(e, t) {
        return e.reference(t.get(["tournamentShortName"], !1), t, "h")
    }

    function lt(e) {
        return e.write("*")
    }

    function ct(e, t) {
        return e.write("'").reference(t.get(["isOpta"], !1), t, "h").write("' == 'true' && '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' == 'false'")
    }

    function ht(e, t) {
        return e.write('<a class="team-link info" href="/Teams/').reference(t.get(["teamId"], !1), t, "h").write('"><span> ').reference(t.get(["teamName"], !1), t, "h").write("</span></a>")
    }

    function pt(e, t) {
        return e.write("('").reference(t.get(["isTournamentTable"], !1), t, "h").write("' == 'true' || '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' == 'true') && '").reference(t.get(["currentTeamId"], !1), t, "h").write("' != '' && '").reference(t.get(["currentTeamId"], !1), t, "h").write("' != '").reference(t.get(["teamId"], !1), t, "h").write("' ")
    }

    function dt(e, t) {
        return e.write("'").reference(t.get(["isTournamentTable"], !1), t, "h").write("' == 'true' || '").reference(t.get(["isHistoricTournamentTable"], !1), t, "h").write("' == 'true'")
    }

    function vt(e, t) {
        return e.write(" <td>").reference(t.get(["age"], !1), t, "h").write("</td>")
    }

    function mt(e, t) {
        return e.write(" <td>").reference(t.get(["height"], !1), t, "h").write("</td>")
    }

    function gt(e, t) {
        return e.write(" <td>").reference(t.get(["weight"], !1), t, "h").write("</td>")
    }

    function yt(e, t) {
        return e.write("<td>").helper("if", t, {
            "else": bt,
            block: wt
        }, {
            cond: xt
        }).write("</td>")
    }

    function bt(e, t) {
        return e.reference(t.get(["apps"], !1), t, "h")
    }

    function wt(e, t) {
        return e.helper("math", t, {}, {
            key: Et,
            method: "subtract",
            operand: St
        }).write("(").reference(t.get(["subOn"], !1), t, "h").write(")")
    }

    function Et(e, t) {
        return e.reference(t.get(["apps"], !1), t, "h")
    }

    function St(e, t) {
        return e.reference(t.get(["subOn"], !1), t, "h")
    }

    function xt(e, t) {
        return e.reference(t.get(["subOn"], !1), t, "h").write(" != 0")
    }

    function Tt(e, t) {
        return e.write('<td class="').reference(t.get(["key"], !1), t, "h").write(" ").exists(t.get(["sortBy"], !1), t, {
            block: Nt
        }, null).write('" >').helper("if", t, {
            "else": Lt,
            block: At
        }, {
            cond: Ht
        }).write("	</td>")
    }

    function Nt(e, t) {
        return e.write(" ").helper("if", t, {
            block: Ct
        }, {
            cond: kt
        }).write(" ")
    }

    function Ct(e) {
        return e.write(" sorted ")
    }

    function kt(e, t) {
        return e.write("'").reference(t.get(["key"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function Lt(e) {
        return e.write('<span class="not-available">N/A</span>')
    }

    function At(e, t) {
        return e.helper("if", t, {
            "else": Ot,
            block: _t
        }, {
            cond: Pt
        })
    }

    function Ot(e, t) {
        return e.helper("round", t, {}, {
            number: Mt,
            precision: "1",
            displayDashInsteadOfZero: "true"
        })
    }

    function Mt(e, t) {
        return e.reference(t.get(["value"], !1), t, "h")
    }

    function _t(e, t) {
        return e.helper("round", t, {}, {
            number: Dt,
            precision: "1",
            displayDashInsteadOfZero: "false"
        })
    }

    function Dt(e, t) {
        return e.reference(t.get(["value"], !1), t, "h")
    }

    function Pt(e, t) {
        return e.write("'").reference(t.get(["matchCentreStatistics"], !1), t, "h").write("' == 'true'")
    }

    function Ht(e, t) {
        return e.write("'").reference(t.get(["isOpta"], !1), t, "h").write("' == 'true' || '").reference(t.get(["key"], !1), t, "h").write("' == 'goal'")
    }

    function Bt(e, t) {
        return e.write(" ").helper("if", t, {
            block: jt
        }, {
            cond: Ft
        }).write(" ")
    }

    function jt(e) {
        return e.write(" sorted ")
    }

    function Ft(e, t) {
        return e.write("'Rating'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function It(e, t) {
        return e.reference(t.get(["rating"], !1), t, "h")
    }

    function qt(e, t) {
        return e.write(' <td style="text-align: left"><span class="incident-wrapper">').section(t.get(["events"], !1), t, {
            block: Rt
        }, null).write("</span></td>")
    }

    function Rt(e, t) {
        return e.helper("if", t, {
            block: Ut
        }, {
            cond: Xt
        })
    }

    function Ut(e, t) {
        return e.write(' <span class="incident-icon"data-minute="').reference(t.get(["minute"], !1), t, "h").write('" data-second="').reference(t.get(["second"], !1), t, "h").write('" data-player-id="').reference(t.get(["playerId"], !1), t, "h").write('"data-team-id="').reference(t.get(["teamId"], !1), t, "h").write('"data-type="').reference(t.getPath(!1, ["type", "value"]), t, "h").write('"	').section(t.get(["cardType"], !1), t, {
            block: zt
        }, null).section(t.get(["satisfiers"], !1), t, {
            block: Wt
        }, null).write("></span>")
    }

    function zt(e, t) {
        return e.write('data-card-type="').reference(t.get(["value"], !1), t, "h").write('"')
    }

    function Wt(e, t) {
        return e.write("data-event-satisfier-").reference(t.get(["name"], !1), t, "h").write(" ")
    }

    function Xt(e, t) {
        return e.reference(t.getPath(!1, ["type", "value"]), t, "h").write(" != 18 && ").reference(t.getPath(!1, ["type", "value"]), t, "h").write(" != 19")
    }

    function Vt(e, t) {
        return e.write('<tr><td style="text-align: left;"><strong>Total / Average</strong></td>').exists(t.get(["isHistoricTournamentTable"], !1), t, {
            block: $t
        }, null).helper("statTotalsAndAverages", t, {
            block: Jt
        }, {
            statNamesToDisplay: t.get(["statColumns"], !1),
            reference: t.get(["sortBy"], !1),
            objects: t.get(["playerTableStats"], !1),
            exclude: "AppsAsSub,SubOn"
        }).helper("calculateAverageRating", t, {
            block: Qt
        }, {
            players: t.get(["playerTableStats"], !1)
        }).write("					</tr>")
    }

    function $t(e) {
        return e.write('<td style="text-align: left;"><strong></strong></td><td style="text-align: left;"><strong></strong></td>')
    }

    function Jt(e, t) {
        return e.write("<td><strong>").helper("round", t, {}, {
            number: Kt,
            precision: "1"
        }).write("</strong></td>")
    }

    function Kt(e, t) {
        return e.reference(t.getPath(!0, []), t, "h")
    }

    function Qt(e, t) {
        return e.write('<td class="rating"><strong>').helper("round", t, {}, {
            keepDotsAndZeros: "true",
            number: Gt
        }).write("</strong></td>")
    }

    function Gt(e, t) {
        return e.reference(t.getPath(!0, []), t, "h")
    }

    return dust.register("statistics-player-table", e), e
}(), ! function() {
    function e(e, n) {
        return e.write('<table class="table-column-legend info">').helper("columnLegend", n, {
            block: t
        }, {
            columns: n.get(["statColumns"], !1),
            category: n.get(["category"], !1),
            exclude: "Incidents,Apps,AppsAsSub,SubOn",
            ignoreItemsWithReadableAbbreviations: "true",
            isMatchCentre: n.get(["matchCentreStatistics"], !1)
        }).exists(n.get(["displayHeight"], !1), n, {
            block: u
        }, null).exists(n.get(["displayWeight"], !1), n, {
            block: a
        }, null).helper("footnotes", n, {
            block: f
        }, {
            columns: n.get(["statColumns"], !1),
            category: n.get(["category"], !1),
            subcategory: n.get(["subcategory"], !1)
        }).write("</table>")
    }

    function t(e, t) {
        return e.exists(t.get(["title"], !1), t, {
            block: n
        }, null)
    }

    function n(e, t) {
        return e.helper("if", t, {
            block: r
        }, {
            cond: i
        }).write("<th><strong>").reference(t.get(["columnName"], !1), t, "h").write("</strong>: ").reference(t.get(["title"], !1), t, "h").write("</th>").helper("if", t, {
            block: s
        }, {
            cond: o
        })
    }

    function r(e) {
        return e.write(" <tr> ")
    }

    function i(e, t) {
        return e.reference(t.get(["index"], !1), t, "h").write(" % 3 == 0")
    }

    function s(e) {
        return e.write(" </tr> ")
    }

    function o(e, t) {
        return e.reference(t.get(["index"], !1), t, "h").write(" % 3 == 2")
    }

    function u(e) {
        return e.write("<th><strong>CM</strong>: Height (in cm)</th>")
    }

    function a(e) {
        return e.write("<th><strong>KG</strong>: Weight (in kg)</th>")
    }

    function f(e, t) {
        return e.exists(t.getPath(!0, []), t, {
            block: l
        }, null)
    }

    function l(e, t) {
        return e.write("<th>* ").reference(t.getPath(!0, []), t, "h").write("</th>")
    }

    return dust.register("statistics-table-column-legend", e), e
}(), ! function() {
    function e(e, t) {
        return e.write('<table id="top-player-stats-summary-grid" class="grid with-centered-columns hover"><thead><tr><th class="sortable rank" data-property="Rank" data-default-sort-dir="asc" title="Rank"></th>	        </tr></thead><tbody id="top-player-stats-summary-content"><div id="rows"></div><tr><td colspan="5" style="padding-top: 17em;padding-bottom: 17em;color: #a94442;font-size: 13px;"><b>Sorry!</b> We encountered an error, and the details have been sent to our team now.</td></tr></tbody></table><div class="grid-toolbar"><input type="hidden" id="currentPage" value="').reference(t.getPath(!1, ["paging", "currentPage"]), t, "h").write('"><input type="hidden" id="totalPages" value="').reference(t.getPath(!1, ["paging", "totalPages"]), t, "h").write('"><dl class="listbox right"></dl></div>')
    }

    return dust.register("statistics-table-error", e), e
}(), ! function() {
    function e(e, n) {
        return e.section(n.get(["teamTableStats"], !1), n, {
            block: t
        }, null)
    }

    function t(e, t) {
        return e.write('<div id="team-stage-stats-content"><table class="ws-list-grid with-three-cols"><tbody><tr><td class="col"><table class="ws-list"><thead><tr><th colspan="99" class="stat-title">Summary</th></tr></thead><tbody><tr class=""><td class="list-key">Cards</td><td><span style="white-space: nowrap;"><span class="yellow-card-box">').reference(t.get(["yellowCard"], !1), t, "h").write('</span><span class="red-card-box">').reference(t.get(["redCard"], !1), t, "h").write('</span></span></td></tr><tr class="alt"><td class="list-key">Average Possession</td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("math", t, {}, {
            key: n,
            method: "multiply",
            operand: "100",
            round: "0"
        }).write('%</span></td></tr><tr class=""><td class="list-key">Pass Success %</td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("math", t, {}, {
            key: r,
            method: "multiply",
            operand: "100",
            round: "0"
        }).write('%</span></td></tr><tr class="alt"><td class="list-key">Aerial Duel won<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: i,
            precision: "1"
        }).write('</span></td></tr><tr class=""><td class="list-key">Average Rating</td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "true",
            number: s,
            displayDashInsteadOfZero: "true"
        }).write('</span></td></tr></tbody></table></td><td class="col"><table class="ws-list"><thead><tr><th colspan="99" class="stat-title">Defensive</th></tr></thead><tbody><tr class=""><td class="list-key">Shots conceded<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: o,
            precision: "1"
        }).write('</span></td></tr><tr class="alt"><td class="list-key">Shots blocked<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: u,
            precision: "1"
        }).write('</span></td></tr><tr class=""><td class="list-key">Tackles<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: a,
            precision: "1"
        }).write('</span></td></tr><tr class="alt"><td class="list-key">Fouls<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: f,
            precision: "1"
        }).write('</span></td></tr><tr class=""><td class="list-key">Interceptions<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: l,
            precision: "1"
        }).write('</span></td></tr></tbody></table></td><td class="col"><table class="ws-list"><thead><tr><th colspan="99" class="stat-title">Offensive</th></tr></thead><tbody><tr class=""><td class="list-key">Shots<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: c,
            precision: "1"
        }).write('</span></td></tr><tr class="alt"><td class="list-key">Shots on target<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: h,
            precision: "1"
        }).write('</span></td></tr><tr class=""><td class="list-key">Dribbles won<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: p,
            precision: "1"
        }).write('</span></td></tr><tr class="alt"><td class="list-key">Fouls won<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: d,
            precision: "1"
        }).write('</span></td></tr><tr class=""><td class="list-key">Offsides<span class="sub-text">per game</span></td><td><span class="stat-value number" style="font-weight: bold; float: right;">').helper("round", t, {}, {
            keepDotsAndZeros: "false",
            number: v,
            precision: "1"
        }).write("</span></td></tr></tbody></table></td></tr></tbody></table></div>")
    }

    function n(e, t) {
        return e.reference(t.get(["possession"], !1), t, "h")
    }

    function r(e, t) {
        return e.reference(t.get(["passSuccess"], !1), t, "h")
    }

    function i(e, t) {
        return e.reference(t.get(["aerialWonPerGame"], !1), t, "h")
    }

    function s(e, t) {
        return e.reference(t.get(["rating"], !1), t, "h")
    }

    function o(e, t) {
        return e.reference(t.get(["shotsConcededPerGame"], !1), t, "h")
    }

    function u(e, t) {
        return e.reference(t.get(["shotsBlockedPerGame"], !1), t, "h")
    }

    function a(e, t) {
        return e.reference(t.get(["tacklePerGame"], !1), t, "h")
    }

    function f(e, t) {
        return e.reference(t.get(["foulsPerGame"], !1), t, "h")
    }

    function l(e, t) {
        return e.reference(t.get(["interceptionPerGame"], !1), t, "h")
    }

    function c(e, t) {
        return e.reference(t.get(["shotsPerGame"], !1), t, "h")
    }

    function h(e, t) {
        return e.reference(t.get(["shotOnTargetPerGame"], !1), t, "h")
    }

    function p(e, t) {
        return e.reference(t.get(["dribbleWonPerGame"], !1), t, "h")
    }

    function d(e, t) {
        return e.reference(t.get(["foulGivenPerGame"], !1), t, "h")
    }

    function v(e, t) {
        return e.reference(t.get(["offsideGivenPerGame"], !1), t, "h")
    }

    return dust.register("statistics-team-summary-table", e), e
}(), ! function() {
    function e(e, r) {
        return e.write('<table class="grid with-centered-columns hover" id="top-team-stats-summary-grid"><thead><tr><th class="o" data-default-sort-dir="asc" data-property="Rank" >R</th><th class="tn" data-default-sort-dir="asc" data-property="TeamName" >Team</th>').exists(r.get(["displayTournaments"], !1), r, {
            block: t
        }, null).write(" ").helper("statColumns", r, {
            block: n
        }, {
            columns: r.get(["statColumns"], !1),
            category: r.get(["category"], !1),
            subcategory: r.get(["subcategory"], !1),
            exclude: "Incidents,Apps,MinsPlayed,AppsAsSub,SubOn,TackleWonTotal",
            displayDiscipline: r.get(["displayDiscipline"], !1)
        }).write('<th class="global sortable rating " data-property="Rating" data-stat-name="Rating">Rating</th></tr></thead><tbody id="top-team-stats-summary-content" style="">').exists(r.get(["teamTableStats"], !1), r, {
            "else": o,
            block: u
        }, null).write("</tbody></table>")
    }

    function t(e) {
        return e.write(' <th class="tournament" data-default-sort-dir="asc" data-property="TournamentName" >Tournament</th>')
    }

    function n(e, t) {
        return e.write('<th class="global sortable ').reference(t.get(["value"], !1), t, "h").write(" ").exists(t.get(["sortBy"], !1), t, {
            block: r
        }, null).write('" data-stat-name="').reference(t.get(["value"], !1), t, "h").write('">').reference(t.get(["columnName"], !1), t, "h").write("</th>")
    }

    function r(e, t) {
        return e.write(" ").helper("if", t, {
            block: i
        }, {
            cond: s
        }).write(" ")
    }

    function i(e) {
        return e.write(" desc ")
    }

    function s(e, t) {
        return e.write("'").reference(t.get(["value"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function o(e) {
        return e.write('<tr><td colspan="20" style="padding-top: 17em;padding-bottom: 17em;font-weight: bold;color: #a94442;">There are no results to display	</td></tr>')
    }

    function u(e, t) {
        return e.section(t.get(["teamTableStats"], !1), t, {
            block: a
        }, null)
    }

    function a(e, t) {
        return e.write("<tr ").helper("if", t, {
            block: f
        }, {
            cond: l
        }).write('><td class="o">').reference(t.get(["ranking"], !1), t, "h").write('</td><td class="tn"><a class="team-link" href="/Teams/').reference(t.get(["teamId"], !1), t, "h").write('">').reference(t.get(["teamName"], !1), t, "h").write("</a></td>").exists(t.get(["displayTournaments"], !1), t, {
            block: c
        }, null).write(" ").helper("stats", t, {
            block: h
        }, {
            statNamesToDisplay: t.get(["statColumns"], !1),
            reference: t.get(["sortBy"], !1),
            object: t.getPath(!0, []),
            exclude: "Apps,MinsPlayed,AppsAsSub,SubOn,TackleWonTotal",
            uniqueRender: "yellowCard",
            displayDiscipline: t.get(["displayDiscipline"], !1)
        }).write('<td class=" ').helper("if", t, {
            block: k
        }, {
            cond: L
        }).write('"><span class="stat-value rating">').helper("round", t, {}, {
            keepDotsAndZeros: "true",
            number: A,
            displayDashInsteadOfZero: "true"
        }).write("</span></td></tr>")
    }

    function f(e) {
        return e.write(' class="alt" ')
    }

    function l(e, t) {
        return e.reference(t.get(["$idx"], !1), t, "h").write(" % 2 == 1")
    }

    function c(e, t) {
        return e.write(' <td class="tournament"><a class="tournament-link iconize iconize-icon-left" href="/Regions/').reference(t.get(["tournamentRegionId"], !1), t, "h").write("/Tournaments/").reference(t.get(["tournamentId"], !1), t, "h").write('">').reference(t.get(["tournamentName"], !1), t, "h").write('<span class="ui-icon country flg-').reference(t.get(["regionCode"], !1), t, "h").write('"></span></a></td>')
    }

    function h(e, t) {
        return e.helper("if", t, {
            "else": p,
            block: N
        }, {
            cond: C
        })
    }

    function p(e, t) {
        return e.helper("if", t, {
            "else": d,
            block: b
        }, {
            cond: T
        })
    }

    function d(e, t) {
        return e.write('<td class="').reference(t.get(["key"], !1), t, "h").write(" ").exists(t.get(["sortBy"], !1), t, {
            block: v
        }, null).write('">').helper("round", t, {}, {
            number: y,
            precision: "1"
        }).write("</td>")
    }

    function v(e, t) {
        return e.write(" ").helper("if", t, {
            block: m
        }, {
            cond: g
        }).write(" ")
    }

    function m(e) {
        return e.write(" sorted ")
    }

    function g(e, t) {
        return e.write("'").reference(t.get(["key"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function y(e, t) {
        return e.reference(t.get(["value"], !1), t, "h")
    }

    function b(e, t) {
        return e.write('<td class="').reference(t.get(["key"], !1), t, "h").write(" ").exists(t.get(["sortBy"], !1), t, {
            block: w
        }, null).write('">').helper("math", t, {}, {
            key: x,
            method: "multiply",
            operand: "100",
            round: "1"
        }).write("</td>")
    }

    function w(e, t) {
        return e.write(" ").helper("if", t, {
            block: E
        }, {
            cond: S
        }).write(" ")
    }

    function E(e) {
        return e.write(" sorted ")
    }

    function S(e, t) {
        return e.write("'").reference(t.get(["key"], !1), t, "h").write("'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function x(e, t) {
        return e.reference(t.get(["value"], !1), t, "h")
    }

    function T(e, t) {
        return e.write("'").reference(t.get(["key"], !1), t, "h").write("' == 'possession' || '").reference(t.get(["key"], !1), t, "h").write("' == 'passSuccess' || '").reference(t.get(["key"], !1), t, "h").write("' == 'conversionSixYardBox' || '").reference(t.get(["key"], !1), t, "h").write("' == 'conversionOboxTotal' || '").reference(t.get(["key"], !1), t, "h").write("' == 'conversionPenaltyArea' ")
    }

    function N(e, t) {
        return e.write('<td class="aaa"><span class="yellow-card-box">').reference(t.get(["yellowCard"], !1), t, "h").write('</span><span class="red-card-box">').reference(t.get(["redCard"], !1), t, "h").write("</span></td>")
    }

    function C(e, t) {
        return e.write("'").reference(t.get(["key"], !1), t, "h").write("' == 'yellowCard' && '").reference(t.get(["displayDiscipline"], !1), t, "h").write("' == 'true'")
    }

    function k(e) {
        return e.write(" sorted ")
    }

    function L(e, t) {
        return e.write("'Rating'  == '").reference(t.get(["sortBy"], !1), t, "h").write("'")
    }

    function A(e, t) {
        return e.reference(t.get(["rating"], !1), t, "h")
    }

    return dust.register("statistics-team-table", e), e
}(), define("templates", ["dust"], function() {}), define("views/BaseView", ["backbone", "dust", "templates"], function(e) {
    var t = function(t) {
        this.beforeInitialize && this.beforeInitialize(), this.defaults && _.extend(this, this.defaults), e.View.apply(this, [t]), this.afterInitialize && this.afterInitialize(), this.model && (this.model.on("before-fetch", _.bind(this.beforeModelFetch, this)), this.model.on("after-fetch", _.bind(this.afterModelFetch, this)), this.model.on("fetched-with-success", _.bind(this.modelFetchedWithSucess, this)), this.model.on("fetched-with-error", _.bind(this.modelFetchedWithError, this)), this.model.on("is-not-valid", _.bind(this.modelFetchedWithError, this)))
    };
    return _.extend(t.prototype, e.View.prototype, {
        setModel: function(e) {
            this.model = e, this.bindTo(this.model, "change", _.bind(function() {
                if (!this.isActive)
                    return;
                this.onModelChange && (console.log("onModelChange: " + this.el.id), this.lastTimeStamp = this.model.get("timeStamp"), setTimeout(_.bind(function() {
                    this.onModelChange()
                }, this), 0))
            }, this))
        },
        activate: function() {
            if (this.isActive)
                return;
            console.log("activating: " + this.el.id), this.isActive = !0, this.activated = !0;
            var e = !0,
                t = this.model.get("timeStamp");
            this.lastTimeStamp && (e = this.lastTimeStamp < t, console.log("Changing {0} < {1}: versionChanged".format(this.lastTimeStamp, t, e))), this.onModelChange && e && (console.log("calling onModelChange from activation: " + this.el.id), this.onModelChange(), this.lastTimeStamp = this.model.get("timeStamp"))
        },
        deactivate: function() {
            console.log("deactivating: " + this.el.id), this.isActive = !1
        },
        close: function() {
            this.closeSubviews(), this.unbindFromAll(), this.off(), this.remove(), this.onClose && this.onClose()
        },
        beforeModelFetch: function() {
            this.$el && (this.trigger("model-updating"), this.$el.addClass("is-updating").removeClass("model-updated-with-error"))
        },
        afterModelFetch: function() {
            this.$el && (this.$el.removeClass("is-updating"), this.trigger("model-updated"))
        },
        modelFetchedWithError: function() {
            this.$el && (this.$el.addClass("model-updated-with-error"), this.trigger("model-updated-with-error"))
        },
        modelFetchedWithSucess: function() {
            if (this.$el) {
                this.$el.removeClass("model-updated-with-error");
                var e = this.$el.attr("data-fwsc");
                e || (e = 0), this.trigger("model-updated-with-success"), this.$el.attr("data-fwsc", ++e)
            }
        },
        renderQueue: [],
        bindTo: function(e, t, n, r) {
            r || (r = this), e.on(t, n, r), this.bindings || (this.bindings = []), this.bindings.push({
                object: e,
                event: t,
                callback: n
            })
        },
        $bindTo: function(e, t, n) {
            e.off(t, n), e.on(t, n), this.bindings || (this.bindings = []), this.bindings.push({
                object: e,
                event: t,
                callback: n
            })
        },
        unbindFromAll: function() {
            var e = this;
            _.each(this.bindings, function(t) {
                t.object.off(t.event, t.callback, e)
            })
        },
        eachSubview: function(e) {
            _.each(this.subviews, e)
        },
        appendSubview: function(e, t) {
            t || (t = this.$el), this.subviews || (this.subviews = {}), this.subviews[e.cid] = e, t.append(e.el), this.addSubviewToRenderQueue(e)
        },
        addSubviewToRenderQueue: function(e) {
            e.selfRenderOnly || this.renderQueue.push({
                id: e.cid
            })
        },
        renderSubviews: function(e) {
            this.eachSubview(_.bind(function(e) {
                if (!e.selfRenderOnly) {
                    var t = this;
                    e.$el.bind("render-complete", function() {
                        t.subviewRenderComplete(e.cid)
                    }), e.render()
                }
            }, this)), e && this.$el.bind("subviews-rendered", e)
        },
        subviewRenderComplete: function(e) {
            var t = _.findWhere(this.renderQueue, _.findWhere(this.renderQueue, {
                id: e
            }));
            if (!t)
                return;
            this.renderQueue = _.without(this.renderQueue, _.findWhere(this.renderQueue, {
                id: e
            })), 0 == this.renderQueue.length && this.$el.trigger("subviews-rendered")
        },
        isEmpty: function(e) {
            for (var t in e)
                if (e.hasOwnProperty(t))
                    return !1;
            return !0
        },
        closeSubviews: function() {
            this.eachSubview(function(e) {
                e.close()
            }), this.subviews = {}
        },
        detachSubview: function(e) {
            this.subviews && delete this.subviews[e.cid], e.$el.detach()
        },
        templateContext: function() {
            return this.model ? this.model.toJSON() : {}
        },
        layout: function(e, t) {
            var n = this;
            t || (t = this.template);
            if (t) {
                this.closeSubviews(), this.$el.empty(), e || (e = this.templateContext());
                var r = gIsAssetsSourceLoaded ? "text!templates/{0}.dust".format(t) : "templates";
                require([r], function(r) {
                    if (!dust) {
                        console.log("Dust is not loaded.. dust please..");
                        return
                    }
                    var i;
                    gIsAssetsSourceLoaded ? i = dust.compile(r, t) : dust.cache[t] || (i = dust.compile(e, t)), dust.loadSource(i), dust.render(t, e, function(e, t) {
                        if (e) {
                            console.log("Dust render error: {0}".format(e));
                            return
                        }
                        _.bind(function() {
                            this.$el.html(t), this.onRender && this.onRender(), this.$el.trigger("render-complete", [this.cid])
                        }, n)()
                    })
                })
            }
        },
        render: function(e) {
            if (!this.validate())
                return;
            return this.layout(e), this
        },
        validate: function() {
            if (!this.model)
                return !0;
            if (!this.model.isValid())
                return !1;
            var e = !0;
            return this.eachSubview(function(t) {
                e = t.validate()
            }), e
        }
    }), t.extend = e.View.extend, t
}), define("lib/dust.ws", ["dust"], function() {
    function doesStatNeedsToBeAveraged(e) {
        return e.indexOf("PerGame") > 0 || e === "passSuccess"
    }

    function getStatNameLongForm(e) {
        e = e.capitaliseFirstLetter();
        switch (e) {
            case "ShotsPerGame":
                return e = "Shots per game", e;
            case "PassSuccess":
                return e = "Pass success percentage", e;
            case "ManOfTheMatch":
                return e = "Man of the match", e;
            case "InterceptionPerGame":
                return e = "Interceptions per game", e;
            case "ClearancePerGame":
                return e = "Clearances per game", e;
            case "WasDribbledPerGame":
                return e = "Dribbled past per game", e;
            case "DribbleWonPerGame":
                return e = "Dribbles per game", e;
            case "GoalOwn":
                return e = "Own goals", e;
            case "KeyPassPerGame":
                return e = "Key passes per game", e;
            case "DispossessedPerGame ":
                return e = "Dispossessed per game", e;
            case "TurnoverPerGame":
                return e = "Bad control per game", e;
            case "TotalPassesPerGame":
                return e = "Passes per game", e;
            case "AccurateCrossesPerGame":
                return e = "Crosses per game", e;
            case "AccurateLongPassPerGame":
                return e = "Long balls per game", e;
            case "AccurateThroughBallPerGame":
                return e = "Through balls per game", e;
            case "PassLongBallAccurate":
                return e = "Accurate long balls", e;
            case "PassLongBallInaccurate":
                return e = "Inaccurate long balls", e;
            case "ShortPassAccurate":
                return e = "Accurate short passes", e;
            case "ShortPassInaccurate":
                return e = "Inaccurate short passes", e;
            case "PassCrossAccurate":
                return e = "Accurate cross passes", e;
            case "PassCrossInaccurate":
                return e = "Inaccurate cross passes", e;
            case "PassCornerAccurate":
                return e = "Accurate corner passes", e;
            case "PassCornerInaccurate":
                return e = "Inaccurate corner passes", e;
            case "PassFreekickAccurate":
                return e = "Accurate freekicks", e;
            case "PassFreekickInaccurate":
                return e = "Inaccurate freekicks", e;
            case "GoalSixYardBox":
                return e = "Goals scored in the six yard box", e;
            case "GoalPenaltyArea":
                return e = "Goals scored from inside the penalty area, excluding six yard box", e;
            case "GoalObox":
                return e = "Goals scored from outside the penalty area", e;
            case "GoalTotal":
                return e = "Total goals", e;
            case "ShotSixYardBox":
                return e = "Shots from inside the six yard box", e;
            case "ShotPenaltyArea":
                return e = "Shots from inside the penalty area, excluding six yard box", e;
            case "ShotOboxTotal":
                return e = "Shots from outside the penalty area", e;
            case "ConversionSixYardBox":
                return e = "Conversion percentage in the six yard box", e;
            case "ConversionPenaltyArea":
                return e = "Conversion percentage inside the penalty area", e;
            case "ConversionOboxTotal":
                return e = "Conversions outside the penalty area", e;
            case "PassSuccessInMatch":
                return e = "Pass accuracy in %", e;
            case "ShotOnTarget":
                return e = "Shots on target", e;
            case "Turnover":
                return e = "Bad control", e;
            case "PassCrossTotal":
                return e = "Cross passes", e;
            case "PassThroughBallTotal":
                return e = "Through balls", e;
            case "PassThroughBallAccurate":
                return e = "Accurate through balls", e;
            case "ShotsConcededPerGame":
                return e = "Shots conceded per game", e;
            case "TacklePerGame":
                return e = "Tackles per game", e;
            case "FoulsPerGame":
                return e = "Fouls per game", e;
            case "ShotOnTargetPerGame":
                return e = "Shots on target per game", e;
            case "FoulGivenPerGame":
                return e = "Fouled per game", e;
            case "OffsideGivenPerGame":
                return e = "Offsides per game", e;
            case "DispossessedPerGame":
                return e = "Dispossessed per game", e;
            case "Dispossessed":
                return e = "Player is dispossessed on the ball by an opponent – no dribble involved", e
        }
    }

    function getTitleOfStat(e) {
        return getStatNameLongForm(e) ? getStatNameLongForm(e) : e.capitaliseFirstLetter().insertSpacesBetweenWords()
    }

    function getColumnNameFromStat(e, t, n, r) {
        return n = n.capitaliseFirstLetter(), transformStatPerSpecialCases(n, e, t, r)
    }

    function transformStatPerSpecialCases(e, t, n, r) {
        switch (e) {
            case "ManOfTheMatch":
                e = "MotM";
                break;
            case "Possession":
                e = "Possession%";
                break;
            case "PassSuccess":
                t === "summaryteam" ? e = "PassSuccess%" : e = "PS%";
                break;
            case "MinsPlayed":
                e = "Mins";
                break;
            case "AssistTotal":
                t === "assists" ? e = "Total" : e = "Assists";
                break;
            case "YellowCard":
                t === "cards" ? e = "Yellow" : t === "summaryteam" ? e = "Discipline" : e = "Yel";
                break;
            case "RedCard":
                e = "Red";
                break;
            case "ShotsPerGame":
                t === "summaryteam" ? e = "Shots pg " : e = "SpG";
                break;
            case "AerialWonPerGame":
                e = "AerialsWon";
                break;
            case "TacklePerGame":
                t === "summaryteam" ? e = "Tackles pg" : e = "Tackles";
                break;
            case "InterceptionPerGame":
                t === "summaryteam" ? e = "Interceptions pg" : e = "Inter";
                break;
            case "FoulsPerGame":
                t === "summaryteam" ? e = "Fouls pg" : e = "Fouls";
                break;
            case "OffsideWonPerGame":
                e = "Offsides";
                break;
            case "ClearancePerGame":
                e = "Clear";
                break;
            case "WasDribbledPerGame":
                e = "Drb";
                break;
            case "OutfielderBlockPerGame":
                e = "Blocks";
                break;
            case "Goal":
                e = "Goals";
                break;
            case "GoalOwn":
                t === "goals" ? e = "Own" : e = "OwnG";
                break;
            case "KeyPassPerGame":
                e = "KeyP";
                break;
            case "DribbleWonPerGame":
                t === "summaryteam" ? e = "Dribbles pg" : e = "Drb";
                break;
            case "FoulGivenPerGame":
                t === "summaryteam" ? e = "Fouled pg" : e = "Fouled";
                break;
            case "OffsideGivenPerGame":
                t === "summaryteam" ? e = "Offsides pg" : e = "Off";
                break;
            case "DispossessedPerGame":
                e = "Disp";
                break;
            case "TurnoverPerGame":
                e = "UnsTch";
                break;
            case "Turnover":
                r ? e = "UnsTouches" : e = "UnsuccessfulTouches";
                break;
            case "TotalPassesPerGame":
                e = "AvgP";
                break;
            case "AccurateCrossesPerGame":
                e = "Crosses";
                break;
            case "AccurateLongPassPerGame":
                e = "LongB";
                break;
            case "AccurateThroughBallPerGame":
                e = "ThrB";
                break;
            case "ShotSixYardBox":
                e = "SixYardBox";
                break;
            case "ShotPenaltyArea":
                e = "PenaltyArea";
                break;
            case "ShotOboxTotal":
                e = "OutOfBox";
                break;
            case "ShotOpenPlay":
                e = "OpenPlay";
                break;
            case "ShotCounter":
                e = "Counter";
                break;
            case "ShotSetPiece":
                e = "SetPiece";
                break;
            case "PenaltyTaken":
                e = "PenaltyTaken";
                break;
            case "ShotOffTarget":
                e = "OffTarget";
                break;
            case "ShotOnPost":
                e = "OnPost";
                break;
            case "ShotOnTarget":
                r ? e = "ShotsOT" : e = "OnTarget";
                break;
            case "ShotsTotal":
                r ? e = "Shots" : e = "Total";
                break;
            case "ShotBlocked":
                r ? e = "BlockedShots" : e = "Blocked";
                break;
            case "ShotRightFoot":
                e = "RightFoot";
                break;
            case "ShotLeftFoot":
                e = "LeftFoot";
                break;
            case "ShotHead":
                e = "Head";
                break;
            case "ShotObp":
                e = "Other";
                break;
            case "ShotsConcededPerGame":
                t === "summaryteam" ? e = "Shots pg" : e = "Shots conceded pg";
                break;
            case "ShotOnTargetPerGame":
                e = "Shots OT pg";
                break;
            case "GoalSixYardBox":
                e = "SixYardBox";
                break;
            case "GoalPenaltyArea":
                e = "PenaltyArea";
                break;
            case "GoalObox":
                e = "OutOfBox";
                break;
            case "GoalTotal":
                e = "Total";
                break;
            case "GoalOpenPlay":
                e = "OpenPlay";
                break;
            case "GoalCounter":
                e = "Counter";
                break;
            case "GoalSetPiece":
                e = "SetPiece";
                break;
            case "PenaltyScored":
                e = "PenaltyScored";
                break;
            case "GoalNormal":
                e = "Normal";
                break;
            case "GoalRightFoot":
                e = "RightFoot";
                break;
            case "GoalLeftFoot":
                e = "LeftFoot";
                break;
            case "GoalHead":
                e = "Head";
                break;
            case "GoalObp":
                e = "Other";
                break;
            case "ConversionSixYardBox":
                e = "SixYardBox%";
                break;
            case "ConversionPenaltyArea":
                e = "PenaltyArea%";
                break;
            case "ConversionOboxTotal":
                e = "OutOfBox%";
                break;
            case "ConversionOpenPlay":
                e = "OpenPlay";
                break;
            case "ConversionCounter":
                e = "Counter";
                break;
            case "ConversionSetPiece":
                e = "SetPiece";
                break;
            case "ConversionPenalty":
                e = "Penalty";
                break;
            case "ConversionTotal":
                e = "Total";
                break;
            case "SaveSixYardBox":
                e = "SixYardBox";
                break;
            case "SavePenaltyArea":
                e = "PenaltyArea";
                break;
            case "SaveObox":
                e = "OutOfBox";
                break;
            case "DuelAerialWon":
                r ? e = "AerialsWon" : e = "Won";
                break;
            case "DuelAerialLost":
                e = "Lost";
                break;
            case "PassLongBallAccurate":
                e = "AccLB";
                break;
            case "PassLongBallInaccurate":
                e = "InAccLB";
                break;
            case "PassThroughBallTotal":
                r ? e = "ThB" : e = "ThBalls";
                break;
            case "PassThroughBallAccurate":
                e = "AccThB";
                break;
            case "ShortPassAccurate":
                e = "AccSP";
                break;
            case "ShortPassInaccurate":
                e = "InAccSP";
                break;
            case "PassCrossAccurate":
                r ? e = "AccCrosses" : e = "AccCr";
                break;
            case "PassCrossInaccurate":
                e = "InAccCr";
                break;
            case "PassCrossTotal":
                e = "Crosses";
                break;
            case "PassCornerAccurate":
                e = "AccCrn";
                break;
            case "PassCornerInaccurate":
                e = "InAccCrn";
                break;
            case "PassFreekickAccurate":
                e = "AccFrK";
                break;
            case "PassFreekickInaccurate":
                e = "InAccFrK";
                break;
            case "PassSuccessInMatch":
                e = "PA%";
                break;
            case "PassLongBallTotal":
                r ? e = "LB" : e = "LongBalls";
                break;
            case "TotalPasses":
                r && (e = "Passes");
                break;
            case "KeyPassLong":
                e = "Long";
                break;
            case "KeyPassShort":
                e = "Short";
                break;
            case "KeyPassesTotal":
                e = "Total";
                break;
            case "KeyPassCross":
                e = "Cross";
                break;
            case "KeyPassCorner":
                e = "Corner";
                break;
            case "KeyPassThroughball":
                e = "Throughball";
                break;
            case "KeyPassFreekick":
                e = "Freekick";
                break;
            case "KeyPassThrowin":
                e = "Throwin";
                break;
            case "KeyPassOther":
                e = "Other";
                break;
            case "KeyPassTotal":
                e = "KeyPasses";
                break;
            case "AssistCross":
                e = "Cross";
                break;
            case "AssistCorner":
                e = "Corner";
                break;
            case "AssistThroughball":
                e = "Throughball";
                break;
            case "AssistFreekick":
                e = "Freekick";
                break;
            case "AssistThrowin":
                e = "Throwin";
                break;
            case "AssistOther":
                e = "Other";
                break;
            case "Assist":
                e = "Total";
                break;
            case "TackleWonTotal":
                e = "TotalTackles";
                break;
            case "ChallengeLost":
                e = "DribbledPast";
                break;
            case "TackleWon":
                e = "Tackles";
                break;
            case "InterceptionAll":
                r ? e = "Interceptions" : e = "Total";
                break;
            case "FoulGiven":
                e = "Fouled";
                break;
            case "FoulCommitted":
                e = "Fouls";
                break;
            case "OffsideGiven":
                r ? e = "Offsides" : e = "CaughtOffside";
                break;
            case "ClearanceTotal":
                r ? e = "Clearances" : e = "Total";
                break;
            case "DribbleLost":
                e = "Unsuccessful";
                break;
            case "DribbleWon":
                r ? e = "Dribbles" : e = "Successful";
                break;
            case "OutfielderBlock":
                e = "ShotsBlocked";
                break;
            case "PassCrossBlockedDefensive":
                e = "CrossesBlocked";
                break;
            case "OutfielderBlockedPass":
                e = "PassesBlocked";
                break;
            case "TackleTotalAttempted":
                e = "TotalAttemptedTackles";
                break;
            case "PassTotal":
                e = "Total";
                break;
            case "DuelAerialTotal":
                e = "Total";
                break;
            case "SaveTotal":
                e = "Total";
                break;
            case "Dispossessed":
                r && (e = "Disp")
        }
        return e
    }

    dust.helpers.imageUrl = function(e, t, n, r) {
        if (!gImageUrl)
            return "";
        var i = dust.helpers.tap(r.fileName, e, t);
        return i ? e.write(gImageUrl + i) : ""
    }, dust.helpers.playerName = function(e, t, n, r) {
        var i, s, o = dust.helpers.tap(r.fullName, e, t);
        if (!o)
            return "";
        i = o, s = o.split(" ");
        if (r.isShortName) {
            var u = [];
            for (var a = 0; a < s.length; a++)
                if (a != s.length - 1) {
                    var f = s[a].split("");
                    u.push(f[0] + ".")
                } else
                    u.push(s[a]);
            i = u.join(" ")
        } else
            r.isLastName && (i = s[s.length - 1]);
        return e.write(i)
    }, dust.helpers.valueOfAttribute = function(e, t, n, r) {
        var i = dust.helpers.tap(r.obj, e, t),
            s = dust.helpers.tap(r.attribute, e, t),
            o = dust.helpers.tap(r.iterate, e, t);
        if (!i)
            return e.write("");
        if (!s && !o)
            return e.write("");
        var u = o ? i[t.stack.index] : i[s];
        return e.write(u)
    }, dust.helpers.tap = function(e, t, n) {
        var r = e;
        return typeof e == "function" && (e.isFunction === !0 ? r = e() : (r = "", t.tap(function(e) {
            return r += e, ""
        }).render(e, n).untap(), r === "" && (r = !1))), r
    }, dust.helpers.partial = function(e, t, n, r) {
        var i = {};
        if (r) {
            var s = r.key ? r.key : "partial";
            for (var o in r)
                o !== "key" && (i[o] = r[o])
        }
        var u = t.get(s);
        if (u)
            for (var a in u)
                i[a] = u[a];
        i.isPartial = !0;
        if (r && r.template) {
            var f = r.template;
            if (f.indexOf(":") == -1)
                return e.partial(f, dust.makeBase(i));
            var l = f.indexOf(":"),
                c = f.substring(parseInt(l + 1));
            f = f.substring(0, parseInt(l));
            var h = t.get(c);
            if (h)
                for (var a in h)
                    i[a] = h[a];
            return e.partial(f, dust.makeBase(i))
        }
        return n.block(e, dust.makeBase(i))
    }, dust.helpers.param = function(e, t, n, r) {
        if (t.global.isPartial && r) {
            var i = r.key,
                s = r.defaultVal,
                o = t.global[i];
            i && !o && s && (t.global[i] = s)
        }
        return e
    }, dust.helpers.statColumns = function(e, t, n, r) {
        r = r || {};
        var i = r.columns || t.current(),
            s = r.category,
            o = r.subcategory,
            u = r.isMatchCentre,
            a = r.displayDiscipline || !1,
            f = r.exclude ? r.exclude.split(",") : [],
            l = 0;
        a && f.push("RedCard");
        if (i instanceof Array)
            for (var c in i)
                if (i.hasOwnProperty(c) && c.indexOf("$") !== 0) {
                    var h = i[c];
                    if (f && f.indexOf(h.capitaliseFirstLetter()) === -1) {
                        var p = {
                            index: l++,
                            value: h,
                            title: getTitleOfStat(h)
                        };
                        p.columnName = getColumnNameFromStat(s, o, h, u), e = e.render(n.block, t.push(p))
                    }
                }
        return e
    }, dust.helpers.columnLegend = function(e, t, n, r) {
        r = r || {};
        var i = r.columns || t.current(),
            s = r.category,
            o = r.subcategory,
            u = r.isMatchCentre,
            a = r.displayDiscipline || !1,
            f = r.exclude ? r.exclude.split(",") : [],
            l = 0;
        a && f.push("RedCard");
        if (i instanceof Array)
            for (var c in i)
                if (i.hasOwnProperty(c) && c.indexOf("$") !== 0) {
                    var h = i[c],
                        p = getStatNameLongForm(h);
                    if (f && f.indexOf(h.capitaliseFirstLetter()) === -1 && p) {
                        var d = {
                            index: l++,
                            value: h,
                            title: p
                        };
                        d.columnName = getColumnNameFromStat(s, o, h, u), areStringsTooSimilar(d.columnName, d.title) || (e = e.render(n.block, t.push(d)))
                    }
                }
        return e
    }, dust.helpers.footnotes = function(e, t, n, r) {
        r = r || {};
        var i = r.columns || t.current(),
            s = r.category,
            o = r.subcategory,
            u = [];
        return i.indexOf("AssistCross") && s === "assists" && u.push("Cross assists do not include corners"), e.render(n.block, t.push(u))
    }, dust.helpers.stats = function(e, t, n, r) {
        r = r || {};
        var i = r.statNamesToDisplay || t.current(),
            s = r.reference,
            o = r.object,
            u = r.uniqueRender,
            a = r.displayDiscipline || !1,
            f = r.exclude ? r.exclude.split(",") : [];
        a && f.push("RedCard");
        if (o && i instanceof Object && Array.isArray(i))
            for (var l = 0; l < i.length; l++) {
                var c = i[l],
                    h = o[c] || o[c.lowercaseFirstLetter()];
                if (!f || f && f.indexOf(c.capitaliseFirstLetter()) === -1) {
                    if (c === u) {
                        if (c === "yellowCard")
                            var p = {
                                key: c,
                                value: h,
                                yellowCard: h,
                                redCard: o.redCard,
                                sortBy: s
                            }
                    } else
                        var p = {
                            key: c,
                            value: h,
                            title: getTitleOfStat(c),
                            sortBy: s
                        };
                    e = e.render(n.block, t.push(p))
                }
            }
        return e
    }, dust.helpers.statTotalsAndAverages = function(e, t, n, r) {
        r = r || {};
        var i = r.statNamesToDisplay || t.current(),
            s = r.objects,
            o = r.displayDiscipline || !1,
            u = r.exclude ? r.exclude.split(",") : [];
        o && u.push("RedCard");
        var a = {},
            f = {};
        if (i instanceof Object && Array.isArray(i))
            for (var l = 0; l < i.length; l++) {
                var c = i[l];
                for (var h = s.length - 1; h >= 0; h--) {
                    var p = s[h];
                    a[c] || (a[c] = 0), f[c] || (f[c] = 0), p[c] !== 0 && (a[c] += p[c], f[c] ++)
                }
                if (!u || u && u.indexOf(c.capitaliseFirstLetter()) === -1) {
                    var d = a[c];
                    if (doesStatNeedsToBeAveraged(c)) {
                        var v = a[c] / f[c];
                        e = e.render(n.block, t.push(v))
                    } else
                        e = e.render(n.block, t.push(d))
                }
            }
        return e
    }, dust.helpers.calculateAverageRating = function(e, t, n, r) {
        r = r || {};
        var i = r.players,
            s = 0,
            o = {};
        o.Rating = 0;
        for (var u = i.length - 1; u >= 0; u--) {
            var a = i[u];
            if (a.rating && a.apps) {
                var f = a.apps - a.subOn;
                o.Rating += a.rating * f, s += f
            }
        }
        return s && (o.Rating = o.Rating / s), e = e.render(n.block, t.push(o.Rating)), e
    }, dust.helpers.iterateOnObject = function(e, t, n, r) {
        r = r || {};
        var i = r.on || t.current(),
            s = r.exclude,
            o = r.reference;
        if (i instanceof Object)
            for (var u in i)
                if (i.hasOwnProperty(u) && u.indexOf("$") !== 0 && (!s || s && u !== s)) {
                    var a = {
                        key: u,
                        value: i[u],
                        title: getTitleOfStat(u),
                        sortBy: o
                    };
                    e = e.render(n.block, t.push(a))
                }
        return e
    }, dust.helpers.nestedArray = function(e, t, n, r) {
        r = r || {};
        var i = r.on || t.current(),
            s = r.exclude;
        for (var o = 0; o < i.length; o++)
            e = e.render(n.block, t.push({
                value: i[o][0],
                displayValue: i[o][1]
            }));
        return e
    }, dust.helpers.round = function(e, t, n, r) {
        r = r || {};
        var i = r.number,
            s = r.precision || 2,
            o = r.displayDashInsteadOfZero && r["displayDashInsteadOfZero"] != "false" || !1,
            u = r.keepDotsAndZeros && r.keepDotsAndZeros === "true" && i !== 10 ? !0 : !1;
        i = dust.helpers.tap(r.number, e, t);
        var a = NG.roundNumber(i, s, u),
            f = NG.roundNumber(0, s, u);
        return o && a === f && (a = "-"), e.write(a)
    }, dust.helpers.wrap = function(e, t, n, r) {
        r = r || {};
        var i = r.word,
            s = r.maxChars;
        return i = dust.helpers.tap(r.word, e, t), s < i.length && (i = i.substring(0, s), i += ".."), e.write(i)
    }, dust.helpers.math = function(e, t, n, r) {
        if (r && typeof r.key != "undefined" && r.method) {
            var i = r.key,
                s = r.method,
                o = r.operand,
                u = r.round,
                a = null,
                f = r.ignoreTrailingZeros,
                l = function() {
                    return console.log("operand is required for this math method"), null
                };
            i = dust.helpers.tap(i, e, t), o = dust.helpers.tap(o, e, t);
            switch (s) {
                case "mod":
                    (o === 0 || o === 0) && console.log("operand for divide operation is 0/-0: expect Nan!"), a = parseFloat(i) % parseFloat(o);
                    break;
                case "add":
                    a = parseFloat(i) + parseFloat(o);
                    break;
                case "subtract":
                    a = parseFloat(i) - parseFloat(o);
                    break;
                case "multiply":
                    a = parseFloat(i) * parseFloat(o);
                    break;
                case "divide":
                    (o === 0 || o === 0) && console.log("operand for divide operation is 0/-0: expect Nan/Infinity!"), a = parseFloat(i) / parseFloat(o);
                    break;
                case "ceil":
                    a = Math.ceil(parseFloat(i));
                    break;
                case "floor":
                    a = Math.floor(parseFloat(i));
                    break;
                case "round":
                    a = parseFloat(i).toFixed(o);
                    break;
                case "abs":
                    a = Math.abs(parseFloat(i));
                    break;
                default:
                    console.log("method passed is not supported")
            }
            return a !== null ? (u && (a = parseFloat(a).toFixed(u ? u : 0)), n && n.block ? e.render(n.block, t.push({
                isSelect: !0,
                isResolved: !1,
                selectKey: a
            })) : (f && (a = parseFloat(Number(a).toFixed(4))), e.write(a))) : e
        }
        return console.log("Key is a required parameter for math helper along with method/operand!"), e
    }, dust.helpers.if = function(chunk, context, bodies, params) {
        var body = bodies.block,
            skip = bodies["else"];
        if (params && params.cond) {
            var cond = params.cond;
            cond = dust.helpers.tap(cond, chunk, context);
            try {
                if (eval(cond))
                    return body ? chunk.render(bodies.block, context) : (console.log("Missing body block in the if helper!"), chunk)
            } catch (e) {
                console.error(e)
            }
            if (skip)
                return chunk.render(bodies["else"], context)
        } else
            console.log("No condition given in the if helper!");
        return chunk
    }, dust.helpers.pager = function(e, t, n, r) {
        var i = dust.helpers.tap(r.first, e, t),
            s = dust.helpers.tap(r.last, e, t),
            o = r.url,
            u = '<ul class="pager">';
        for (var a = i; a <= s; a++)
            u += '<li class="pager-link"><a href="' + o.replace("%page%", a) + '">' + a + "</a></li>";
        return u += "</ul>", e.write(u), e
    }
}), define("views/LoadingView", ["views/BaseView", "lib/dust.ws"], function(e) {
    var t = e.extend({
        template: "spinning-loading-animation",
        className: "loading-wrapper",
        initialize: function(e) {
            this.el = e.el, this.firstRender = !0, this.renderOnInitialize = e.renderOnInitialize, this.render({
                firstRender: this.firstRender
            }), this.show()
        },
        show: function() {
            this.$el.show()
        },
        hide: function() {
            this.firstRender && (this.firstRender = !1, this.render({
                firstRender: this.firstRender
            })), this.$el.hide()
        },
        onRender: function() {
            this.renderOnInitialize !== !1 && (this.show(), this.renderOnInitialize = !1), this.$el.addClass("loading-wrapper")
        }
    });
    return t
}), define("models/BaseModel", ["backbone"], function(e) {
    var t = e.Model.prototype.fetch,
        n = e.Model.extend({
            idAttribute: "matchId",
            defaults: {},
            fetch: function() {
                var e = [];
                if (arguments) {
                    var n = arguments[0],
                        r = _.extend({}, arguments[0] ? arguments[0] : {});
                    this.trigger("before-fetch");
                    var i = this;
                    r.success = function() {
                        n && n.success && n.success(), i.trigger("after-fetch"), (!this.validate || this.validate && !this.validate()) && i.trigger("fetched-with-success")
                    }, r.error = function() {
                        n && n.error && n.error(), i.trigger("after-fetch"), i.trigger("fetched-with-error")
                    }, e[0] = r
                }
                return t.apply(this, e)
            },
            toJSON: function() {
                if (this._isSerializing)
                    return this.id || this.cid;
                this._isSerializing = !0;
                var e = _.clone(this.attributes);
                return _.each(e, function(t, n) {
                    if (!t)
                        return;
                    _.isFunction(t.toJSON) && (e[n] = t.toJSON())
                }), this._isSerializing = !1, e
            },
            forward: function(e, t, n) {
                var r = this,
                    i = n && n.property ? n.property : e;
                r[i] = t, t.set(r.get(e)), r.on("change:" + e, function(e, n, r) {
                    t.set(n, r)
                }), t.add = function(t, n) {
                    var i = _.clone(r.get(e));
                    i.push(t.attributes), r.set(e, i)
                }
            }
        });
    return n
}), define("models/StatisticsTableModel", ["models/BaseModel"], function(e) {
    var t = e.extend({
        getUrlFriendlyAttributeValue: function(e) {
            return typeof this[e] == "function" ? this[e]() : Backbone.Model.prototype.get.call(this, e) !== undefined ? Backbone.Model.prototype.get.call(this, e) : ""
        },
        reset: function(e) {
            var t = e ? e.exclude : [],
                n = {};
            for (var r = 0; t && r < t.length; r++) {
                var i = t[r];
                n[i] = this.get(i)
            }
            this.clear({
                silent: !0
            }), this.set(this.defaults, {
                silent: !0
            });
            for (var r = 0; t && r < t.length; r++) {
                var i = t[r],
                    s = n[i];
                this.set(i, s, {
                    silent: !0
                })
            }
        }
    });
    return t
}), define("views/StatisticsTableView", ["views/BaseView", "views/LoadingView", "models/StatisticsTableModel", "lib/dust.ws"], function(e, t, n) {
    var r = e.extend({
            initialize: function(e) {
                var n = this;
                this.options = e || {}, this.loadingAnimationView = new t({
                    el: "#" + n.$el.attr("id") + "-loading",
                    renderOnInitialize: !1
                }), this.columnLegendView = new i({
                    el: "#" + n.$el.attr("id") + "-column-legend"
                }), e && e.renderOnInitialize && this.model && this.updateTable()
            },
            updateTable: function(e) {
                this.updateTableServerSide(e)
            },
            updateModelParameters: function(e) {
                for (var t in e)
                    e.hasOwnProperty(t) && e[t] !== undefined && this.model.set(t, e[t])
            },
            updateTableClientSide: function(e) {
                this.startLoadingAnimation(), this.updateModelParameters(e), this.sortStats(), this.render()
            },
            updateTableServerSide: function(e) {
                this.startLoadingAnimation(), this.updateModelParameters(e);
                var t = this;
                this.model.fetch({
                    success: function(e) {
                        var n = e ? e.attributes : t.model.toJSON();
                        t.trigger("newDataReceived", n), t.model.createEventsFromIncidents && t.model.createEventsFromIncidents(), t.render(), t.renderColumnLegendSubView(n)
                    },
                    error: function(e, n) {
                        t.render(null, "statistics-table-error"), ga("send", "event", "button", "click", "tbl: error in fetching data")
                    }
                })
            },
            sortStats: function(e) {
                var t = this.model.get("sortAscending"),
                    e = this.model.get("sortBy");
                e = e.charAt(0).toLowerCase() + e.slice(1);
                var n = this.model.toJSON().playerTableStats;
                n.sort(function(n, r) {
                    var i = n[e] || 0,
                        s = r[e] || 0;
                    return (parseFloat(s) - parseFloat(i)) * (t ? -1 : 1)
                }), this.model.playerTableStats = n
            },
            startLoadingAnimation: function() {
                this.loadingAnimationView.show()
            },
            stopLoadingAnimation: function() {
                this.loadingAnimationView.hide()
            },
            renderColumnLegendSubView: function(e) {
                this.columnLegendView.render(e)
            },
            onRender: function() {
                this.bindEventsToElements(), this.stopLoadingAnimation(), this.trigger("rendered")
            },
            bindEventsToElements: function() {
                this.bindSortingEvents()
            },
            bindSortingEvents: function() {
                var e = this;
                this.$el.find(".sortable").map(function(t, n) {
                    $(this).on("click", function() {
                        var t = e.model.get("sortBy"),
                            n = $(this).attr("data-stat-name");
                        e.model.set("sortBy", n), !t && n === "Rating" ? e.model.set("sortAscending", !0) : t === n ? e.model.set("sortAscending", !e.model.get("sortAscending")) : e.model.set("sortAscending", !1), e.model.set("page", 1);
                        var r = e.model.toJSON().playerTableStats;
                        e.options.sortOnClient && r ? e.updateTableClientSide() : e.updateTableServerSide(), ga("send", "event", "button", "click", "tbl: sorted by " + n)
                    })
                })
            }
        }),
        i = e.extend({
            template: "statistics-table-column-legend",
            initialize: function(e) {
                this.el = e.el
            }
        });
    return r
}), define("lib/helpers/MatchCentreHelper", [], function() {
    var e = {
        timelineWidth: 964,
        getLeftFromMinute: function(e, t, n) {
            var r = 100 * (e / n),
                i = t ? 100 * (t / (n * 60)) : 0;
            return r + i
        },
        getMinuteFromLeft: function(e, t) {
            var n = this.getLeftAsInt(e);
            return parseInt(t * (n / this.timelineWidth), 10)
        },
        getLeftAsInt: function(e) {
            if (!e)
                return;
            var t;
            if (!e.replace)
                return e;
            if (-1 != e.indexOf("px"))
                return e.replace("px", "");
            if (-1 != e.indexOf("%")) {
                var n = e.replace("%", "");
                return n * this.timelineWidth / 100
            }
        },
        getMinuteFromExpandedMinute: function(e, t, n) {
            return t * (e / n)
        },
        getExpandedMinute: function(e, t) {
            var n = 0;
            for (var r in this.periodEndMinutes)
                if (r < e) {
                    var i = this.getExtraTimeMinute(r, this.periodEndMinutes[r]);
                    n += i
                }
            return t + n
        },
        getExtraTimeMinute: function(e, t) {
            var n = this.periodMinuteLimits[e];
            return n ? Math.max(t - n, 0) : 0
        },
        periodMinuteLimits: {
            1: 45,
            2: 90,
            3: 105,
            4: 120
        },
        getKeyIncidentEventSatisfiers: function(e, t) {
            if (!e.satisfiedEventsTypes)
                return null;
            if (!t)
                return null;
            var n = [];
            return _.each(e.satisfiedEventsTypes, function(e) {
                var r = t[e];
                n.push({
                    id: e,
                    name: r
                })
            }), n
        },
        minuteStringExceptions: {
            2: {
                45: "46"
            },
            3: {
                90: "91"
            },
            4: {
                105: "106"
            },
            5: {
                120: "121"
            }
        },
        getMinuteStringException: function(e, t) {
            return this.minuteStringExceptions[e] ? this.minuteStringExceptions[t] : null
        },
        getMinuteString: function(e, t, n) {
            var r = this.getMinuteStringException(n, e);
            if (r)
                return r;
            var i = parseInt(e, 10);
            i = t ? i : i + 1;
            var s = t ? -parseInt(t, 10) : 0;
            return i + s + (t ? "+{0}".format(t) : "")
        },
        getMinuteInfosFromExpandedMinutes: function(e) {
            var t = {};
            for (var n in e) {
                var r = e[n],
                    i = _.values(r),
                    s = _.last(i);
                for (var o in r) {
                    var u = r[o],
                        a = this.getExtraTimeMinute(n, o),
                        f = this.getMinuteString(o, a, n);
                    t[u] = {
                        expandedMinute: u,
                        minute: o,
                        extraTime: a,
                        minuteString: f,
                        isEndOfPeriod: s == u,
                        period: n
                    }
                }
            }
            return t
        }
    };
    return e
}), define("models/StatisticsPlayerTableModel", ["models/BaseModel", "models/StatisticsTableModel", "lib/helpers/MatchCentreHelper"], function(e, t, n) {
    var r = t.extend({
        urlRoot: "/StatisticsFeed/1/GetPlayerStatistics",
        defaults: {
            category: "shots",
            subcategory: "zones",
            statsAccumulationType: 0,
            numberOfPlayersToPick: 10,
            isCurrent: !0,
            sortBy: "Rating",
            displayApps: !0,
            subOn: "false"
        },
        url: function() {
            var e = this.urlRoot + "?category=" + this.getUrlFriendlyAttributeValue("category") + "&subcategory=" + this.getUrlFriendlyAttributeValue("subcategory") + "&statsAccumulationType=" + this.getUrlFriendlyAttributeValue("statsAccumulationType") + "&isCurrent=" + this.getUrlFriendlyAttributeValue("isCurrent") + "&playerId=" + this.getUrlFriendlyAttributeValue("playerId") + "&teamIds=" + this.getUrlFriendlyAttributeValue("teamIds") + "&matchId=" + this.getUrlFriendlyAttributeValue("matchId") + "&stageId=" + this.getUrlFriendlyAttributeValue("stageId") + "&tournamentOptions=" + this.getUrlFriendlyAttributeValue("tournamentOptions") + "&sortBy=" + this.getUrlFriendlyAttributeValue("sortBy") + "&sortAscending=" + this.getUrlFriendlyAttributeValue("sortAscending") + "&age=" + this.getUrlFriendlyAttributeValue("age") + "&ageComparisonType=" + this.getUrlFriendlyAttributeValue("ageComparisonType") + "&appearances=" + this.getUrlFriendlyAttributeValue("appearances") + "&appearancesComparisonType=" + this.getUrlFriendlyAttributeValue("appearancesComparisonType") + "&field=" + this.getUrlFriendlyAttributeValue("field") + "&nationality=" + this.getUrlFriendlyAttributeValue("nationality") + "&positionOptions=" + this.getUrlFriendlyAttributeValue("positionOptions") + "&timeOfTheGameEnd=" + this.getUrlFriendlyAttributeValue("timeOfTheGameEnd") + "&timeOfTheGameStart=" + this.getUrlFriendlyAttributeValue("timeOfTheGameStart") + "&isMinApp=" + this.getUrlFriendlyAttributeValue("isMinApp") + "&page=" + this.getUrlFriendlyAttributeValue("page") + "&includeZeroValues=" + this.getUrlFriendlyAttributeValue("includeZeroValues") + "&numberOfPlayersToPick=" + this.getUrlFriendlyAttributeValue("numberOfPlayersToPick");
            return e
        },
        initialize: function(e) {
            r.__super__.initialize.apply(this, [e]), e.matchCentreStatistics && (this.urlRoot = "/StatisticsFeed/1/GetMatchCentrePlayerStatistics"), this.set("category", e.category), this.set("subcategory", e.subcategory), this.set("teamIds", e.teamIds), this.set("currentTeamId", e.currentTeamId), this.set("stageId", e.stageId), this.set("playerId", e.playerId), this.set("isTournamentTable", e.isTournamentTable), this.set("isHistoricTournamentTable", e.isHistoricTournamentTable), this.set("isMinApp", e.isMinApp), this.set("matchCentreStatistics", e.matchCentreStatistics), this.set("showTotals", e.showTotals), this.set("displayAge", e.displayAge), this.set("displayHeight", e.displayHeight), this.set("displayWeight", e.displayWeight), this.set("displayTournamentShortNames", e.displayTournamentShortNames), this.set("hideTeamMetaData", e.hideTeamMetaData), this.set("includeZeroValues", e.includeZeroValues), e.displayApps !== undefined && this.set("displayApps", e.displayApps)
        },
        createEventsFromIncidents: function() {
            var e = this.get("playerTableStats");
            for (var t = e.length - 1; t >= 0; t--) {
                var r = e[t].incidents,
                    i = [];
                if (r) {
                    for (var s = r.length - 1; s >= 0; s--) {
                        var o = r[s];
                        i.push(_.extend({}, o, {
                            satisfiers: n.getKeyIncidentEventSatisfiers(o, this.get("eventTypes"))
                        }))
                    }
                    this.get("playerTableStats")[t].events = i
                }
            }
        }
    });
    return r
}), define("views/StatisticsPlayerTableView", ["views/BaseView", "views/StatisticsTableView", "models/StatisticsPlayerTableModel", "lib/dust.ws"], function(e, t, n) {
    var r = t.extend({
        template: "statistics-player-table",
        initialize: function(e) {
            this.model = new n(e), r.__super__.initialize.apply(this, [e])
        }
    });
    return r
}), define("views/StatisticsPagingView", ["views/BaseView", "lib/dust.ws"], function(e) {
    var t = e.extend({
        template: "statistics-paging",
        events: {
            "click #first": "handleFirstPageClick",
            "click #prev": "handlePreviousPageClick",
            "click #next": "handleNextPageClick",
            "click #last": "handleLastPageClick"
        },
        pagingParameters: {
            page: 1
        },
        initialize: function(e) {
            (e.renderOnInitialize === undefined || e.renderOnInitialize === !0) && this.render()
        },
        onRender: function() {
            this.trigger("rendered")
        },
        handleFirstPageClick: function(e) {
            this.pagingParameters.page && this.pagingParameters.page !== 1 && (this.pagingParameters.page = 1, this.handlePagingChange(), ga("send", "event", "button", "click", "tbl: first page clicked"))
        },
        handlePreviousPageClick: function(e) {
            var t = $(e.currentTarget);
            t.hasClass("disabled") ? e.preventDefault() : (this.pagingParameters.page = $(e.currentTarget).data("page") - 1, this.handlePagingChange(), ga("send", "event", "button", "click", "tbl: previous page clicked"))
        },
        handleNextPageClick: function(e) {
            var t = $(e.currentTarget);
            t.hasClass("disabled") ? e.preventDefault() : (this.pagingParameters.page = $(e.currentTarget).data("page") + 1, this.handlePagingChange(), ga("send", "event", "button", "click", "tbl: next page clicked"))
        },
        handleLastPageClick: function(e) {
            this.pagingParameters.page && $(e.currentTarget).data("page") !== this.pagingParameters.page && (this.pagingParameters.page = $(e.currentTarget).data("page"), this.handlePagingChange(), ga("send", "event", "button", "click", "tbl: last page clicked"))
        },
        handlePagingChange: function() {
            this.trigger("pagingChanged", this.pagingParameters)
        }
    });
    return t
}), define("models/StatisticsMiniFilterModel", ["models/BaseModel"], function(e) {
    var t = e.extend({
        defaults: {
            field: "Overall",
            isMinApp: !0
        },
        initialize: function(e) {
            e && (e.tournaments && this.set("tournaments", e.tournaments), e.tournaments && e.tournaments[0] ? this.set("tournamentOptions", e.tournaments[0].TournamentId) : e.tournamentOptions && this.set("tournamentOptions", e.tournamentOptions), e.filterOptions && e.filterOptions.displayApps !== undefined && this.set("displayApps", e.filterOptions.displayApps), e.filterOptions && e.isMinApp !== undefined && this.set("isMinApp", e.isMinApp))
        },
        getFilterParameters: function() {
            return {
                field: this.get("field"),
                isMinApp: this.get("isMinApp"),
                tournamentOptions: this.get("tournamentOptions"),
                stageId: this.get("stageId"),
                page: this.get("page"),
                teamIds: this.get("teamIds")
            }
        }
    });
    return t
}), define("views/StatisticsMiniFilterView", ["views/BaseView", "models/StatisticsMiniFilterModel", "lib/dust.ws"], function(e, t) {
    var n = e.extend({
        template: "statistics-mini-filter",
        events: {
            "click [data-backbone-model-attribute]": "handleFilterClick"
        },
        initialize: function(e) {
            var n = this;
            this.model = new t(e), this.listenTo(this.model, "change", this.renderSelf), this.listenTo(this.model, "change", this.triggerChangeEvent), this.listenTo(this.model, "change:tournamentOptions", function() {
                var e = n.model.get("tournamentOptions");
                n.model.set("stageId", n.getStageIdOfTournament(e), {
                    silent: !0
                })
            }), e.renderOnInitialize && this.render()
        },
        handleFilterClick: function(e) {
            this.model.set("page", "1", {
                silent: !0
            });
            var t = $(e.target).data("backbone-model-attribute"),
                n = $(e.target).data("value");
            this.model.set(t, n), t === "tournamentOptions" && this.trigger("tournamentOptionsChanged", n), ga("send", "event", "button", "click", "tbl: " + t + " changed")
        },
        renderSelf: function() {
            this.render()
        },
        onRender: function() {
            this.trigger("rendered", this.model.getFilterParameters())
        },
        triggerChangeEvent: function() {
            this.trigger("change", this.model.getFilterParameters())
        },
        getStageIdOfTournament: function(e) {
            var t = this.model.get("tournaments");
            for (var n = t.length - 1; n >= 0; n--) {
                var r = t[n];
                if (r.TournamentId === e)
                    return r.StageId
            }
        }
    });
    return n
}), define("models/StatisticsFilterModel", ["models/BaseModel"], function(e) {
    var t = e.extend({
        countries: [],
        initialize: function(e) {
            this.countries = e.countries
        }
    });
    return t
}), define("views/StatisticsFilterView", ["views/BaseView", "models/StatisticsFilterModel", "lib/dust.ws"], function(e, t) {
    var n = e.extend({
            template: "statistics-filter",
            events: {
                "change #category": "handleCategoryChange",
                "change #subcategory": "handleSubCategoryChange",
                "click .field-option": "handleFieldClick",
                "click #tournament": "handleTournamentClick",
                "click .tournament-option": "handleTournamentOptionClick",
                "change #tournamentOptions": "handleTournamentOptionsChange",
                "click #toggle": "handleToggleClick",
                "mousedown #tournament": "handleTournamentMousedown",
                "change #appearancesComparisonType": "handleAppearancesComparisonTypeChange",
                "blur #appearances": "handleAppearancesBlur",
                "click #time-of-the-game": "handleTimeOfTheGameClick",
                "mousedown #time-of-the-game": "handleTimeOfTheGameMousedown",
                "change #ageComparisonType": "handleAgeComparisonTypeChange",
                "blur #age": "handleAgeBlur",
                "click #position": "handlePositionClick",
                "click .position-option": "handlePositionOptionClick",
                "mousedown #position": "handlePositionMousedown",
                "change #nationality": "handleNationalityChange",
                "change #formation": "handleFormationChange",
                "click .reset-button": "handleResetButtonClick",
                "click .search-button": "handleSearchButtonClick",
                "click #sendFeedbackIcon": "handleSendFeedbackIconClick",
                "submit #feedback-submit-form": "handleFeedbackFormSubmit",
                "click #feedback-thankyou input": "handleOKButtonClick"
            },
            defaults: {
                category: "shots",
                field: "Overall"
            },
            initialize: function(e) {
                e || (e = {}), this.setMaxGameDuration(e.tournamentStageType), (e.renderOnInitialize === undefined || e.renderOnInitialize === !0) && this.render()
            },
            setMaxGameDuration: function(e) {
                this.maxGameDuration = !e || e === 1 ? 90 : 120
            },
            onRender: function() {
                this.initializeTimeOfTheGame(), this.setDefaultValues(), this.setCustomValues(), this.bindMouseLoseFocusEvents(), this.search(), this.trigger("rendered")
            },
            setCustomValues: function() {
                var e = this.model.get("tournamentId");
                e && this.setTournamentId(e)
            },
            setTournamentId: function(e) {
                var t, n = 0,
                    r = 0,
                    i = this.$el.find("#tournament"),
                    s = this.$el.find("#tournament-element-area"),
                    o = this.$el.find("#tournament-validation-alert"),
                    u = this.$el.find(".tournament-option");
                u.each(function() {
                    n++, Number($(this).val()) !== Number(e) ? ($(this).trigger("click", {
                        silent: !0
                    }), r++) : t = !0
                }), t ? i.prop("disabled", !0) : this.updateTournamentDataValue(e), r === n && (s.hide(), o.hide())
            },
            search: function(e) {
                var t = e || {},
                    n = this.$el.attr("id"),
                    r = this;
                $("#" + n + " [data-value]").map(function(e, n) {
                    var i = $(this).attr("id"),
                        s = $(this).attr("data-value") ? $(this).attr("data-value") : $(this).val();
                    t[i] = s;
                    if (i === "tournamentOptions") {
                        var o = r.model.get("tournaments");
                        o && (t.stageId = r.getStageIdOfTournament(o, s))
                    }
                }), t.page = 1, this.trigger("runSearch", t)
            },
            reset: function() {
                this.$el.find(".reset-button").trigger("click")
            },
            isTournamentInDefaultTournaments: function(e) {
                function n(e, t) {
                    return t.indexOf(e) > -1 || t.indexOf(Number(e)) > -1
                }

                var t = [2, 3, 4, 5, 22];
                return n(e, t)
            },
            updateTournamentDataValue: function(e) {
                var t = this.$el.find("#tournamentOptions");
                if (!e) {
                    var n = this.$el.find("#tournamentOptions input:checked"),
                        r = [];
                    n.each(function() {
                        r.push($(this).val())
                    });
                    var i = r.join();
                    i || (i = "-1"), t.attr("data-value", i)
                } else
                    t.attr("data-value", e)
            },
            handleSearchButtonClick: function(e) {
                this.search(), ga("send", "event", "button", "click", "tbl: search")
            },
            handleFieldClick: function(e, t) {
                var n = $(e.currentTarget),
                    r = this.$el.find(".field-option");
                r.removeClass("selected"), r.removeClass("default-selected"), n.attr("id") !== "overall" ? n.toggleClass("selected") : n.toggleClass("default-selected"), this.$el.find("#field").attr("data-value", n.attr("data-option-value"));
                if (!t || t && !t.silent)
                    this.search(), ga("send", "event", "button", "click", "tbl: field (detailed filter) changed")
            },
            handleNationalityChange: function(e, t) {
                var n = $(e.currentTarget);
                n.val() !== "" ? n.addClass("user-input-value") : n.removeClass("user-input-value"), (!t || t && !t.silent) && ga("send", "event", "dropdown", "change", "tbl: nationality changed")
            },
            handleCategoryChange: function(e) {
                var t = $(e.currentTarget),
                    n = t.val(),
                    r = this.$el.find(".reset-button");
                this.updateSubCategoryDropdown(this.getSubcategoriesOfCategory(n)), this.search({
                    sortAscending: ""
                }), ga("send", "event", "dropdown", "change", "tbl: category changed to " + n)
            },
            handleSubCategoryChange: function(e) {
                this.search({
                    sortAscending: ""
                }), ga("send", "event", "dropdown", "change", "tbl: subcategory changed to " + $(e.currentTarget).val())
            },
            updateSubCategoryDropdown: function(e) {
                var t = this.$el.find("#subcategory");
                t.prop("disabled", !1), t.empty();
                for (var n = 0; n < e.length; n++) {
                    var r = e[n],
                        i = $("<option></option>").attr("value", r.value).text(r.displayValue);
                    t.append(i)
                }
                e.length === 1 && t.prop("disabled", !0)
            },
            handleTournamentClick: function(e) {
                this.$el.find("#tournamentOptions").toggle()
            },
            handlePositionClick: function(e) {
                this.$el.find("#positionOptions").toggle()
            },
            handleTimeOfTheGameClick: function(e) {
                this.$el.find("#time-of-the-game-options").css("display") === "none" && ga("send", "event", "slider", "change", "tbl: time of the game changed"), this.$el.find("#time-of-the-game-options").toggle()
            },
            handleTournamentMousedown: function(e) {
                e.preventDefault(), e.currentTarget.blur(), window.focus()
            },
            handlePositionMousedown: function(e) {
                e.preventDefault(), e.currentTarget.blur(), window.focus()
            },
            handleTimeOfTheGameMousedown: function(e) {
                e.preventDefault(), e.currentTarget.blur(), window.focus()
            },
            handleTournamentOptionClick: function(e, t) {
                this.updateTournamentCount(), this.updateTournamentDataValue(), (!t || t && !t.silent) && ga("send", "event", "dropdown", "change", "tbl: tournament option changed")
            },
            handlePositionOptionClick: function(e) {
                this.updatePositionCount(), this.updatePositionDataValue(), ga("send", "event", "dropdown", "change", "tbl: position option changed")
            },
            handleTournamentOptionsChange: function(e) {
                var t = $(e.currentTarget);
                this.setMaxGameDuration(t.find(":selected").data("stage-type")), this.model.set("tournamentOptions", t.val()), this.$el.trigger("tournamentChanged", t.val())
            },
            handleAppearancesComparisonTypeChange: function(e, t) {
                var n = $(e.currentTarget),
                    r = this.$el.find("#appearances"),
                    i = this.$el.find("#appearancesComparisonType");
                n.val() !== "0" ? (r.fadeTo("fast", 1), n.addClass("user-input-value")) : (r.val(""), r.fadeTo("fast", 0), n.removeClass("user-input-value")), i.attr("data-value", n.val()), (!t || t && !t.silent) && ga("send", "event", "dropdown", "change", "tbl: apps comparison type changed")
            },
            handleAppearancesBlur: function(e) {
                var t = $(e.currentTarget),
                    n = t.val(),
                    r = this.$el.find("#appearances-validation-alert");
                n && n <= 0 ? r.slideDown("fast") : r.slideUp("fast")
            },
            handleAgeComparisonTypeChange: function(e, t) {
                var n = $(e.currentTarget),
                    r = this.$el.find("#age"),
                    i = this.$el.find("#ageComparisonType");
                n.val() !== "0" ? (r.fadeTo("fast", 1), n.addClass("user-input-value")) : (r.val(""), r.fadeTo("fast", 0), n.removeClass("user-input-value")), i.attr("data-value", n.val()), (!t || t && !t.silent) && ga("send", "event", "dropdown", "change", "tbl: age comparison type changed")
            },
            handleFormationChange: function(e, t) {
                var n = $(e.currentTarget),
                    r = this.$el.find("#formation");
                r.attr("data-value", n.val()), (!t || t && !t.silent) && ga("send", "event", "dropdown", "change", "tbl: formation changed")
            },
            handleAgeBlur: function(e) {
                var t = $(e.currentTarget),
                    n = t.val(),
                    r = this.$el.find("#age-validation-alert");
                n && n <= 0 ? r.slideDown("fast") : r.slideUp("fast")
            },
            updateTournamentCount: function() {
                var e = this.$el.find("#tournamentOptions :checkbox:checked").length,
                    t = this.$el.find("#tournamentOptions :checkbox").length,
                    n = this.$el.find("#tournament-validation-alert"),
                    r = this.$el.find("#tournament-option"),
                    i = this.$el.find("#tournament");
                e === 0 ? n.slideDown("fast") : n.slideUp("fast"), e !== t ? (r.text(e), i.addClass("user-input-value")) : (r.text("All"), i.removeClass("user-input-value"))
            },
            updatePositionCount: function() {
                var e = this.$el.find("#pitch :checkbox:checked"),
                    t = this.$el.find("#pitch :checkbox"),
                    n = this.$el.find("#subs"),
                    r = this.$el.find("#position-validation-alert"),
                    i = this.$el.find("#position-option"),
                    s = this.$el.find("#position"),
                    o = e.length + (n.prop("checked") ? 1 : 0),
                    u = t.length + (n ? 1 : 0);
                o === 0 ? r.slideDown("fast") : r.slideUp("fast"), o !== u ? (i.text(o), s.addClass("user-input-value")) : (i.text("All"), s.removeClass("user-input-value"))
            },
            updatePositionDataValue: function() {
                var e = this.$el.find("#pitch .position-option"),
                    t = this.$el.find("#subs"),
                    n = this.$el.find("#positionOptions"),
                    r = [];
                e.each(function() {
                    this.checked && r.push($(this).val())
                }), t.prop("checked") && r.push(t.val()), n.attr("data-value", r.join())
            },
            handleToggleClick: function(e) {
                var t = this.$el.find("#pitch input"),
                    n = this.$el.find("#subs"),
                    r = new Array,
                    i = new Array;
                t.each(function() {
                    $(this).prop("checked") && r.push($(this)), i.push($(this))
                }), n.prop("checked") && r.push(n), i.push(n);
                var s = r.length > i.length / 2;
                for (var o = 0; o < i.length; o++) {
                    var u = i[o];
                    s ? u.prop("checked", !1) : u.prop("checked", !0)
                }
                this.updatePositionCount(), this.updatePositionDataValue()
            },
            updateTimeOfGameDisplayValues: function(e, t) {
                var n = this.$el.find("#time-of-the-game-slider"),
                    r = this.$el.find("#time-of-the-game"),
                    i = this.$el.find("#time-of-the-game-option"),
                    s = this.$el.find("#timeOfTheGameStart"),
                    o = this.$el.find("#timeOfTheGameEnd");
                if (e !== 0 && !e || t !== 0 && !t)
                    e = n.slider("values", 0), t = n.slider("values", 1);
                i.text(e + " - " + t), e === 0 && t === this.maxGameDuration ? r.removeClass("user-input-value") : r.addClass("user-input-value"), s.attr("data-value", e / 15), o.attr("data-value", t / 15 - 1)
            },
            handleResetButtonClick: function(e) {
                function p() {
                    i.is(":disabled") || s.each(function(e) {
                        var t = $(this);
                        t.prop("checked") || t.trigger("click", {
                            silent: !0
                        })
                    })
                }

                function d() {
                    o.val("0"), o.trigger("change", {
                        silent: !0
                    })
                }

                function v() {
                    u.val("0"), u.trigger("change", {
                        silent: !0
                    })
                }

                function m() {
                    a.each(function() {
                        $(this).prop("checked") || $(this).trigger("click")
                    }), f.prop("checked") === !1 && (f.prop("checked", !1), f.trigger("click")), l.prop("checked", !0)
                }

                function g() {
                    c.slider("values", 0, 0), c.slider("values", 1, t.maxGameDuration), t.updateTimeOfGameDisplayValues()
                }

                var t = this,
                    n = this.$el.find("#overall"),
                    r = this.$el.find("#nationality"),
                    i = this.$el.find("#tournament"),
                    s = this.$el.find("#tournamentOptions :input"),
                    o = this.$el.find("#appearancesComparisonType"),
                    u = this.$el.find("#ageComparisonType"),
                    a = this.$el.find("#pitch input"),
                    f = this.$el.find("#subs"),
                    l = this.$el.find("#toggle"),
                    c = this.$el.find("#time-of-the-game-slider"),
                    h = this.$el.find("#formation");
                n.trigger("click", {
                    silent: !0
                }), r.val(""), r.trigger("change", {
                    silent: !0
                }), h.val(""), h.trigger("change", {
                    silent: !0
                }), p(), d(), v(), m(), g(), this.search({
                    sortBy: "Rating",
                    sortAscending: ""
                }), ga("send", "event", "button", "click", "tbl: reset button clicked")
            },
            handleSendFeedbackIconClick: function(e) {
                var t = this.$el.find(".feedback-area");
                t.slideToggle("fast"), ga("send", "event", "button", "click", "feedback button clicked")
            },
            handleFeedbackFormSubmit: function(e) {
                e.preventDefault();
                var t = $(e.currentTarget),
                    n = t.attr("action"),
                    r = t.serialize(),
                    i = this.$el.find("#feedback-thankyou"),
                    s = this;
                $.post(n, r, function() {}).fail(function() {}).always(function() {
                    t.hide(), i.show()
                })
            },
            handleOKButtonClick: function(e) {
                var t = this.$el.find(".feedback-area");
                t.slideUp("fast")
            },
            initializeTimeOfTheGame: function() {
                var e = this.$el.find("#time-of-the-game-slider"),
                    t = this;
                e.slider({
                    range: !0,
                    min: 0,
                    max: t.maxGameDuration,
                    step: 15,
                    values: [0, t.maxGameDuration],
                    slide: function(e, n) {
                        var r = n.values[0],
                            i = n.values[1];
                        if (r >= n.values[1])
                            return !1;
                        t.updateTimeOfGameDisplayValues(r, i)
                    }
                }), this.updateTimeOfGameDisplayValues()
            },
            bindMouseLoseFocusEvents: function() {
                var e = this;
                $(document).mouseup(function(t) {
                    if (!e.model.get("tournaments")) {
                        var n = e.$el.find("#tournamentOptions");
                        !n.is(t.target) && n.has(t.target).length === 0 && n.slideUp("fast")
                    }
                    var r = e.$el.find("#positionOptions");
                    !r.is(t.target) && r.has(t.target).length === 0 && r.slideUp("fast");
                    var i = e.$el.find("#time-of-the-game-element");
                    !i.is(t.target) && i.has(t.target).length === 0 && $("#time-of-the-game-options").slideUp("fast")
                })
            },
            setDefaultValues: function() {
                var e = this.$el.find("#category"),
                    t = this.$el.find("#field");
                this.updatePositionDataValue(), e.val(this.defaults.category), this.updateSubCategoryDropdown(s[this.defaults.category]), t.attr("data-value", $("#" + this.defaults.field).attr("data-option-value"))
            },
            getStageIdOfTournament: function(e, t) {
                for (var n = 0; e && n < e.length; n++) {
                    var r = e[n];
                    if (r && r.TournamentId === t)
                        return r.StageId
                }
            },
            getSubcategoriesOfCategory: function(e) {
                function t(e) {
                    function t(e, t) {
                        return {
                            value: e,
                            displayValue: t
                        }
                    }

                    switch (e) {
                        case "zones":
                            return t("zones", "Zones");
                        case "situations":
                            return t("situations", "Situations");
                        case "accuracy":
                            return t("accuracy", "Accuracy");
                        case "bodyparts":
                            return t("bodyparts", "Body Parts");
                        case "sides":
                            return t("sides", "Sides");
                        case "length":
                            return t("length", "Length");
                        case "type":
                            return t("type", "Type");
                        case "directions":
                            return t("directions", "Directions");
                        case "success":
                            return t("success", "Success");
                        case "reasons":
                            return t("reasons", "Reasons");
                        case "pointsongoal":
                            return t("pointsongoal", "Points on goal");
                        case "shotzone":
                            return t("shotzone", "Shot zone")
                    }
                }

                switch (e) {
                    case "shots":
                        return [t("zones"), t("situations"), t("accuracy"), t("bodyparts")];
                    case "goals":
                        return [t("zones"), t("situations"), t("bodyparts")];
                    case "conversion":
                        return [t("zones"), t("situations")];
                    case "passes":
                        return [t("length"), t("type")];
                    case "key-passes":
                        return [t("length"), t("type")];
                    case "assists":
                        return [t("type")];
                    case "dribbles":
                        return [t("success")];
                    case "tackles":
                        return [t("success")];
                    case "interception":
                        return [t("success")];
                    case "clearances":
                        return [t("success")];
                    case "blocks":
                        return [t("type")];
                    case "offsides":
                        return [t("type")];
                    case "fouls":
                        return [t("type")];
                    case "cards":
                        return [t("type")];
                    case "possession-loss":
                        return [t("type")];
                    case "saves":
                        return [t("shotzone")];
                    case "aerial":
                        return [t("success")]
                }
            }
        }, {
            countries: []
        }),
        r = function(e, t) {
            this.value = e, this.displayValue = t
        },
        i = {
            zones: new r("zones", "Zones"),
            situations: new r("situations", "Situations"),
            accuracy: new r("accuracy", "Accuracy"),
            bodyparts: new r("bodyparts", "Body Parts"),
            sides: new r("sides", "Sides"),
            length: new r("length", "Length"),
            type: new r("type", "Type"),
            directions: new r("directions", "Directions"),
            success: new r("success", "Success"),
            reasons: new r("reasons", "Reasons"),
            pointsongoal: new r("pointsongoal", "Points on goal"),
            shotzone: new r("shotzone", "Shot zone")
        },
        s = {
            shots: [i.zones, i.situations, i.accuracy, i.bodyparts],
            goals: [i.zones, i.situations, i.bodyparts],
            conversion: [i.zones, i.situations, i.bodyparts],
            passes: [i.length, i.type],
            "key-passes": [i.length, i.type],
            assists: [i.type],
            dribbles: [i.success],
            tackles: [i.success],
            interception: [i.success],
            clearances: [i.success],
            blocks: [i.type],
            offsides: [i.type],
            fouls: [i.type],
            cards: [i.type],
            "possession-loss": [i.type],
            saves: [i.bodyparts, i.shotzone],
            aerial: [i.success]
        };
    return n
}), define("models/StatisticsPlayerFilterModel", ["models/StatisticsFilterModel"], function(e) {
    var t = e.extend({
        defaults: {
            displayTournaments: !0
        },
        initialize: function(e) {
            this.set("showPlayerFilters", !0), e.displayTournaments !== undefined && this.set("displayTournaments", e.displayTournaments), t.__super__.initialize.apply(this, [e])
        }
    });
    return t
}), define("views/StatisticsPlayerFilterView", ["views/BaseView", "views/StatisticsFilterView", "models/StatisticsPlayerFilterModel", "lib/dust.ws"], function(e, t, n) {
    var r = t.extend({
        initialize: function(e) {
            this.events = r.__super__.events, this.events["change #statsAccumulationType"] = "handleAccumulationTypeChange", this.events["click #accumulationInfo"] = "handleAccumulationInfoClick", r.__super__.initialize.apply(this, [e]), r.__super__.model = new n({
                countries: e.countries ? e.countries : t.countries,
                tournaments: e.tournaments,
                tournamentId: e.tournamentId,
                stageId: e.stageId,
                displayTournaments: e.displayTournaments,
                disableAge: e.disableAge,
                disableNationality: e.disableNationality
            })
        },
        handleAccumulationTypeChange: function(e) {
            r.__super__.search.call(this), ga("send", "event", "button", "click", "tbl: accumulation type changed to " + $(e.currentTarget).val())
        },
        handleAccumulationInfoClick: function(e) {
            var t = this.$el.find(".accumulation-player-info");
            t.slideToggle("fast"), ga("send", "event", "button", "click", "tbl: accumulation info clicked")
        }
    });
    return r
}), define("models/StatisticsTeamTableModel", ["models/BaseModel", "models/StatisticsTableModel"], function(e, t) {
    var n = t.extend({
        urlRoot: "/StatisticsFeed/1/GetTeamStatistics",
        defaults: {
            category: "shots",
            subcategory: "zones",
            statsAccumulationType: 0,
            isCurrent: !0,
            sortBy: "Rating"
        },
        url: function() {
            var e = this.urlRoot + "?category=" + this.getUrlFriendlyAttributeValue("category") + "&subcategory=" + this.getUrlFriendlyAttributeValue("subcategory") + "&statsAccumulationType=" + this.getUrlFriendlyAttributeValue("statsAccumulationType") + "&field=" + this.getUrlFriendlyAttributeValue("field") + "&tournamentOptions=" + this.getUrlFriendlyAttributeValue("tournamentOptions") + "&timeOfTheGameStart=" + this.getUrlFriendlyAttributeValue("timeOfTheGameStart") + "&timeOfTheGameEnd=" + this.getUrlFriendlyAttributeValue("timeOfTheGameEnd") + "&teamIds=" + this.getUrlFriendlyAttributeValue("teamIds") + "&stageId=" + this.getUrlFriendlyAttributeValue("stageId") + "&sortBy=" + this.getUrlFriendlyAttributeValue("sortBy") + "&sortAscending=" + this.getUrlFriendlyAttributeValue("sortAscending") + "&page=" + this.getUrlFriendlyAttributeValue("page") + "&numberOfTeamsToPick=" + this.getUrlFriendlyAttributeValue("numberOfTeamsToPick") + "&isCurrent=" + this.getUrlFriendlyAttributeValue("isCurrent") + "&formation=" + this.getUrlFriendlyAttributeValue("formation");
            return e
        },
        initialize: function(e) {
            n.__super__.initialize.apply(this), this.set("category", e.category), this.set("subcategory", e.subcategory), this.set("teamIds", e.teamIds), this.set("stageId", e.stageId), this.set("displayDiscipline", e.displayDiscipline), e.sortBy && this.set("sortBy", e.sortBy)
        }
    });
    return n
}), define("views/StatisticsTeamTableView", ["views/BaseView", "views/StatisticsTableView", "views/StatisticsTeamTableView", "models/StatisticsTeamTableModel", "lib/dust.ws"], function(e, t, n, r) {
    var i = t.extend({
        template: "statistics-team-table",
        initialize: function(e) {
            i.__super__.initialize.apply(this), this.model = new r(e)
        }
    });
    return i
}), define("models/StatisticsTeamFilterModel", ["models/StatisticsFilterModel"], function(e) {
    var t = e.extend({
        initialize: function(e) {
            this.set("showFormationFilter", e.showFormationFilter), t.__super__.initialize.apply(this, [e])
        }
    });
    return t
}), define("views/StatisticsTeamFilterView", ["views/BaseView", "views/StatisticsFilterView", "models/StatisticsTeamFilterModel", "lib/dust.ws"], function(e, t, n) {
    var r = t.extend({
        initialize: function(e) {
            this.events = r.__super__.events, this.events["change #statsAccumulationType"] = "handleAccumulationTypeChange", this.events["click #accumulationInfo"] = "handleAccumulationInfoClick", r.__super__.initialize.apply(this, [e]), r.__super__.model = new n({
                countries: e.countries ? e.countries : t.countries,
                tournaments: e.tournaments,
                tournamentId: e.tournamentId,
                tournamentOptions: e.tournamentOptions,
                stageId: e.stageId,
                showFormationFilter: e.showFormationFilter,
                disableAge: e.disableAge,
                disablePositions: e.disablePositions,
                disableNationality: e.disableNationality
            })
        },
        handleAccumulationTypeChange: function(e) {
            r.__super__.search.call(this), ga("send", "event", "button", "click", "tbl: accumulation type changed to " + $(e.currentTarget).val())
        },
        handleAccumulationInfoClick: function(e) {
            var t = this.$el.find(".accumulation-player-info");
            t.slideToggle("fast"), ga("send", "event", "button", "click", "tbl: accumulation info clicked")
        }
    });
    return r
}), define("helpers/StatisticsTableConstructor", ["views/StatisticsPlayerTableView", "views/StatisticsPagingView", "views/StatisticsMiniFilterView", "views/StatisticsPlayerFilterView", "views/StatisticsTeamTableView", "views/StatisticsTeamFilterView"], function(e, t, n, r, i, s) {
    var o = {};
    return o.defaults = {
        tournamentOptions: "2,3,4,5,22"
    }, o.renderPlayerStatisticsTable = function(i) {
        var s = new e({
            el: "#statistics-table-" + i.elementId,
            category: i.category,
            subcategory: i.subcategory,
            playerId: i.playerId,
            stageId: i.stageId,
            teamIds: i.teamIds,
            matchId: i.matchId,
            isTournamentTable: i.isTournamentTable,
            isHistoricTournamentTable: i.isHistoricTournamentTable,
            showTotals: i.showTotals,
            renderOnInitialize: i.renderOnInitialize,
            isCurrent: i.isCurrent,
            numberOfPlayersToPick: i.numberOfPlayersToPick,
            matchCentreStatistics: i.matchCentreStatistics,
            hideTeamMetaData: i.hideTeamMetaData,
            displayIncidents: i.displayIncidents,
            eventTypes: i.eventTypes,
            displayApps: i.displayApps,
            displayHeight: i.displayHeight,
            displayWeight: i.displayWeight,
            sortBy: i.sortBy,
            includeZeroValues: i.includeZeroValues,
            displayTournamentShortNames: i.displayTournamentShortNames,
            currentTeamId: i.currentTeamId,
            sortOnClient: i.sortOnClient
        });
        if (i.paging) {
            var o = new t({
                el: "#statistics-paging-" + i.elementId
            });
            o.listenTo(s, "newDataReceived", function(e) {
                o.render(e)
            }), s.listenTo(o, "pagingChanged", function(e) {
                s.updateTable(e)
            })
        }
        if (i.miniFilters) {
            var u = new n({
                el: "#statistics-mini-filter-" + i.elementId,
                filterOptions: i.miniFilters,
                tournamentOptions: i.tournamentOptions,
                renderOnInitialize: i.miniFilters.renderOnInitialize,
                stageId: i.stageId,
                displayApps: i.miniFilters.displayApps,
                isMinApp: i.miniFilters.isMinApp
            });
            s.listenTo(u, "change", function(e) {
                s.updateTable(e)
            }), s.listenToOnce(u, "rendered", function(e) {
                s.updateTable(e)
            }), u.render()
        }
        if (i.detailedFilters) {
            var a = new r({
                el: "#statistics-filter-" + i.elementId,
                countries: i.countries,
                tournamentStageType: i.tournamentStageType,
                stageId: i.stageId,
                tournamentId: i.tournamentId,
                renderOnInitialize: i.renderOnInitialize,
                disableAge: i.disableAge,
                disablePositions: i.disablePositions,
                disableNationality: i.disableNationality,
                displayTournaments: i.displayTournaments
            });
            s.listenTo(a, "runSearch", function(e) {
                s.updateTable(e)
            }), s.listenTo(a, "reset", function() {
                s.model.reset()
            }), a.render()
        }
    }, o.renderTeamStatisticsTable = function(e) {
        var r = new i({
            el: "#statistics-team-table-" + e.elementId,
            category: e.category,
            subcategory: e.subcategory,
            displayTournaments: e.displayTournaments,
            displayDiscipline: e.displayDiscipline,
            sortBy: e.sortBy,
            sortAscending: e.sortAscending,
            stageId: e.stageId,
            allowColumnNameSpecialCases: e.allowColumnNameSpecialCases,
            tournamentOptions: e.tournamentOptions,
            numberOfTeamsToPick: e.numberOfTeamsToPick,
            renderOnInitialize: e.renderOnInitialize
        });
        if (e.paging) {
            var o = new t({
                el: "#statistics-team-paging-" + e.elementId
            });
            o.listenTo(r, "newDataReceived", function(e) {
                o.render(e)
            }), r.listenTo(o, "pagingChanged", function(e) {
                r.updateTable(e)
            })
        }
        if (e.miniFilters) {
            var u = new n({
                el: "#statistics-team-mini-filter-" + e.elementId,
                filterOptions: e.miniFilters,
                tournamentOptions: e.tournamentOptions,
                renderOnInitialize: !1,
                stageId: e.stageId
            });
            r.listenTo(u, "change", function(e) {
                r.updateTable(e)
            }), r.listenToOnce(u, "rendered", function(e) {
                r.updateTable(e)
            }), u.render()
        }
        if (e.detailedFilters) {
            var a = new s({
                el: "#statistics-team-filter-" + e.elementId,
                countries: e.countries,
                tournamentId: e.tournamentId,
                showFormationFilter: e.showFormationFilter,
                renderOnInitialize: e.renderOnInitialize
            });
            r.listenTo(a, "runSearch", function(e) {
                r.updateTable(e)
            }), r.listenTo(a, "reset", function() {
                r.model.reset()
            }), a.render()
        }
    }, o
}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-statistics" != window.currentView)
        return;
    WS.TabbedPanels({
        id: "top-team-stats",
        tabs: {
            view: {
                id: "top-team-stats-options"
            },
            model: {
                defaultTab: "#top-team-stats-summary",
                init: {
                    "#top-team-stats-summary": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "summary",
                            miniFilters: !0,
                            category: "summaryteam",
                            subcategory: "all",
                            tournamentOptions: e.defaults.tournamentOptions,
                            paging: !0,
                            displayTournaments: !0,
                            displayDiscipline: !0,
                            allowColumnNameSpecialCases: !0,
                            numberOfTeamsToPick: 20
                        })
                    },
                    "#top-team-stats-defensive": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "defensive",
                            miniFilters: !0,
                            category: "summaryteam",
                            subcategory: "defensive",
                            tournamentOptions: e.defaults.tournamentOptions,
                            paging: !0,
                            displayTournaments: !0,
                            sortBy: "tacklePerGame",
                            sortAscending: !1,
                            allowColumnNameSpecialCases: !0,
                            numberOfTeamsToPick: 20
                        })
                    },
                    "#top-team-stats-offensive": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "offensive",
                            miniFilters: !0,
                            category: "summaryteam",
                            subcategory: "offensive",
                            tournamentOptions: e.defaults.tournamentOptions,
                            paging: !0,
                            displayTournaments: !0,
                            sortBy: "dribbleWonPerGame",
                            sortAscending: !1,
                            allowColumnNameSpecialCases: !0,
                            numberOfTeamsToPick: 20
                        })
                    },
                    "#top-team-stats-detailed": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "detailed",
                            detailedFilters: !0,
                            countries: countries,
                            paging: !0,
                            displayTournaments: !0,
                            allowColumnNameSpecialCases: !0,
                            displayDiscipline: !1,
                            tournamentOptions: e.defaults.tournamentOptions,
                            numberOfTeamsToPick: 20,
                            renderOnInitialize: !1
                        })
                    }
                }
            }
        }
    }), WS.TabbedPanels({
        id: "top-player-stats",
        tabs: {
            view: {
                id: "top-player-stats-options"
            },
            model: {
                defaultTab: "#top-player-stats-summary",
                init: {
                    "#top-player-stats-summary": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "summary",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "all",
                            tournamentOptions: e.defaults.tournamentOptions,
                            paging: !0
                        })
                    },
                    "#top-player-stats-offensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "offensive",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "offensive",
                            tournamentOptions: e.defaults.tournamentOptions,
                            paging: !0
                        })
                    },
                    "#top-player-stats-defensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "defensive",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "defensive",
                            tournamentOptions: e.defaults.tournamentOptions,
                            paging: !0
                        })
                    },
                    "#top-player-stats-passing": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "passing",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "passing",
                            tournamentOptions: e.defaults.tournamentOptions,
                            paging: !0
                        })
                    },
                    "#top-player-stats-detailed": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "detailed",
                            detailedFilters: !0,
                            countries: countries,
                            paging: !0,
                            renderOnInitialize: !1
                        })
                    }
                }
            }
        }
    })
}), define("tables-statistics", function() {}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-player" != window.currentView)
        return;
    WS.TabbedPanels({
        id: "player-tournament-stats",
        tabs: {
            view: {
                id: "player-tournament-stats-options"
            },
            model: {
                defaultTab: "#player-tournament-stats-summary",
                activate: {
                    "#player-tournament-stats-summary": function() {},
                    "#player-tournament-stats-defensive": function() {},
                    "#player-tournament-stats-offensive": function() {},
                    "#player-tournament-stats-passing": function() {},
                    "#player-tournament-stats-detailed": function() {}
                },
                init: {
                    "#player-tournament-stats-summary": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "summary",
                            category: "summary",
                            subcategory: "all",
                            playerId: playerId,
                            isTournamentTable: !0,
                            showTotals: !0,
                            renderOnInitialize: !1,
                            allowColumnNameSpecialCases: !0,
                            includeZeroValues: !0,
                            numberOfPlayersToPick: "",
                            miniFilters: {
                                isMinApp: !1
                            },
                            currentTeamId: currentTeamId
                        })
                    },
                    "#player-tournament-stats-defensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "defensive",
                            category: "summary",
                            subcategory: "defensive",
                            playerId: playerId,
                            renderOnInitialize: !1,
                            isTournamentTable: !0,
                            showTotals: !0,
                            allowColumnNameSpecialCases: !0,
                            includeZeroValues: !0,
                            numberOfPlayersToPick: "",
                            miniFilters: {
                                isMinApp: !1
                            },
                            currentTeamId: currentTeamId
                        })
                    },
                    "#player-tournament-stats-offensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "offensive",
                            category: "summary",
                            subcategory: "offensive",
                            playerId: playerId,
                            renderOnInitialize: !1,
                            isTournamentTable: !0,
                            showTotals: !0,
                            allowColumnNameSpecialCases: !0,
                            includeZeroValues: !0,
                            numberOfPlayersToPick: "",
                            miniFilters: {
                                isMinApp: !1
                            },
                            currentTeamId: currentTeamId
                        })
                    },
                    "#player-tournament-stats-passing": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "passing",
                            category: "summary",
                            subcategory: "passing",
                            playerId: playerId,
                            renderOnInitialize: !1,
                            isTournamentTable: !0,
                            showTotals: !0,
                            allowColumnNameSpecialCases: !0,
                            includeZeroValues: !0,
                            numberOfPlayersToPick: "",
                            miniFilters: {
                                isMinApp: !1
                            },
                            currentTeamId: currentTeamId
                        })
                    },
                    "#player-tournament-stats-detailed": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "detailed",
                            category: "shots",
                            subcategory: "zones",
                            detailedFilters: !0,
                            paging: !1,
                            displayTournaments: !1,
                            displayDiscipline: !1,
                            playerId: playerId,
                            renderOnInitialize: !1,
                            isTournamentTable: !0,
                            showTotals: !0,
                            allowColumnNameSpecialCases: !0,
                            includeZeroValues: !0,
                            numberOfPlayersToPick: "",
                            disableAge: !0,
                            disablePositions: !0,
                            disableNationality: !0,
                            currentTeamId: currentTeamId
                        })
                    }
                }
            }
        }
    })
}), define("tables-player", function() {}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-tournament-player" != window.currentView)
        return;
    WS.TabbedPanels({
        id: "stage-top-player-stats",
        tabs: {
            view: {
                id: "stage-top-player-stats-options"
            },
            model: {
                defaultTab: "#stage-top-player-stats-summary",
                activate: {
                    "#stage-top-player-stats-summary": function() {},
                    "#stage-top-player-stats-offensive": function() {},
                    "#stage-top-player-stats-defensive": function() {},
                    "#stage-top-player-stats-passing": function() {}
                },
                init: {
                    "#stage-top-player-stats-summary": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "summary",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "all",
                            stageId: stageId,
                            tournamentOptions: tournamentId,
                            paging: !0
                        })
                    },
                    "#stage-top-player-stats-offensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "offensive",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "offensive",
                            stageId: stageId,
                            tournamentOptions: tournamentId,
                            paging: !0
                        })
                    },
                    "#stage-top-player-stats-defensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "defensive",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "defensive",
                            stageId: stageId,
                            tournamentOptions: tournamentId,
                            paging: !0
                        })
                    },
                    "#stage-top-player-stats-passing": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "passing",
                            miniFilters: {
                                displayApps: !0
                            },
                            category: "summary",
                            subcategory: "passing",
                            stageId: stageId,
                            tournamentOptions: tournamentId,
                            paging: !0
                        })
                    },
                    "#stage-top-player-stats-detailed": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "detailed",
                            detailedFilters: !0,
                            tournamentId: tournamentId,
                            tournamentStageType: tournamentStageType,
                            stageId: stageId,
                            paging: !0,
                            countries: countries,
                            renderOnInitialize: !1
                        })
                    }
                }
            }
        }
    })
}), define("tables-tournament-player", function() {}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-tournament-team" != window.currentView)
        return;
    WS.TabbedPanels({
        id: "stage-team-stats",
        tabs: {
            view: {
                id: "stage-team-stats-options"
            },
            model: {
                defaultTab: "#stage-team-stats-summary",
                activate: {
                    "#stage-team-stats-summary": function() {},
                    "#stage-team-stats-offensive": function() {},
                    "#stage-team-stats-defensive": function() {},
                    "#stage-team-stats-detailed": function() {}
                },
                init: {
                    "#stage-team-stats-summary": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "summary",
                            miniFilters: !0,
                            category: "summaryteam",
                            subcategory: "all",
                            stageId: stageId,
                            displayDiscipline: !0
                        })
                    },
                    "#stage-team-stats-offensive": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "offensive",
                            miniFilters: !0,
                            category: "summaryteam",
                            subcategory: "offensive",
                            sortBy: "shotsPerGame",
                            stageId: stageId
                        })
                    },
                    "#stage-team-stats-defensive": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "defensive",
                            miniFilters: !0,
                            category: "summaryteam",
                            subcategory: "defensive",
                            sortBy: "tacklePerGame",
                            stageId: stageId
                        })
                    },
                    "#stage-team-stats-detailed": function() {
                        e.renderTeamStatisticsTable({
                            elementId: "detailed",
                            detailedFilters: !0,
                            displayTournaments: !1,
                            stageId: stageId,
                            tournamentId: tournamentId,
                            showFormationFilter: !0
                        })
                    }
                }
            }
        }
    })
}), define("tables-tournament-team", function() {}), require(["views/StatisticsMiniFilterView", "models/StatisticsMiniFilterModel", "views/StatisticsFilterView", "views/StatisticsPlayerFilterView", "models/StatisticsFilterModel", "views/StatisticsTableView", "views/StatisticsPlayerTableView", "models/StatisticsTableModel", "models/StatisticsPlayerTableModel", "views/StatisticsPagingView"], function(e, t, n, r, i, s, o, u, a, f) {
    function m(t) {
        var n = new o({
                el: "#statistics-table-" + t.elementId,
                category: t.category,
                subcategory: t.subcategory,
                displayAge: t.displayAge,
                displayHeight: !0,
                displayWeight: !0,
                hideTeamMetaData: !0,
                paging: !1,
                renderOnInitialize: !1,
                teamIds: teamId,
                stageId: stageId,
                sortBy: t.sortBy,
                sortAscending: t.sortAscending,
                displayAge: !1,
                numberOfPlayersToPick: "",
                includeZeroValues: !0
            }),
            i, s;
        t.miniFilters && (i = new e({
            el: "#statistics-mini-filter-" + t.elementId,
            tournaments: t.miniFilters.tournaments,
            renderOnInitialize: !1,
            teamIds: teamId,
            isMinApp: !1
        }), n.listenTo(i, "change", function(e) {
            n.updateTable(e), l = e.tournamentOptions
        }), i.on("tournamentOptionsChanged", function(e) {
            toggleDetailedTabs(tournaments.isTouramentOpta(e))
        })), t.detailedFilters && (s = new r({
            el: "#statistics-filter-" + t.elementId,
            tournaments: t.tournaments,
            renderOnInitialize: !1,
            countries: countries
        }), n.listenTo(s, "runSearch", function(e) {
            n.updateTable(e)
        }), n.listenTo(s, "reset", function() {
            n.model.reset()
        }));
        var u = {
            miniFilterView: i,
            detailedFilterView: s,
            tableView: n,
            render: function(e) {
                var t = this.tableView,
                    n = this.miniFilterView,
                    r = this.detailedFilterView;
                n && (t.listenToOnce(n, "rendered", function(e) {
                    t.updateTable(e)
                }), n.model.set("tournamentOptions", e), n.render()), r && (r.model.set("tournamentOptions", e), r.render())
            }
        };
        return u
    }

    if ("tables-team" != window.currentView)
        return;
    var l;
    tournaments && (l = tournaments[0].TournamentId, tournaments.isTouramentOpta = function(e) {
        return !tournaments.every(function(t) {
            return t.TournamentId === e ? !t.IsOpta : !0
        })
    }, toggleDetailedTabs(tournaments.isTouramentOpta(l)), tournaments.forEach(function(e) {
        e.IsOpta && optaOnlyTournaments.push(e)
    })), $("#team-squad-stats").on("tournamentChanged", function(e, t) {
        l = t
    });
    var c = m({
            elementId: "summary",
            miniFilters: {
                tournaments: tournaments,
                tournamentOptions: l
            },
            category: "summary",
            subcategory: "all"
        }),
        h = m({
            elementId: "defensive",
            miniFilters: {
                tournaments: optaOnlyTournaments,
                tournamentOptions: l
            },
            category: "summary",
            subcategory: "defensive",
            sortBy: "tacklePerGame",
            sortAscending: !1
        }),
        p = m({
            elementId: "offensive",
            miniFilters: {
                tournaments: optaOnlyTournaments,
                tournamentOptions: l
            },
            category: "summary",
            subcategory: "offensive",
            sortBy: "goal",
            sortAscending: !1
        }),
        d = m({
            elementId: "passing",
            miniFilters: {
                tournaments: optaOnlyTournaments,
                tournamentOptions: l
            },
            category: "summary",
            subcategory: "passing",
            sortBy: "assistTotal",
            sortAscending: !1
        }),
        v = m({
            elementId: "detailed",
            detailedFilters: !0,
            tournaments: optaOnlyTournaments
        });
    $("#team-squad-stats-options").tabs({
        setup: tablesTabsSetup,
        defaultTab: "#team-squad-stats-summary",
        disableFilterActivation: !0,
        activate: {
            "#team-squad-stats-summary": function() {
                c.miniFilterView.model.get("tournamentOptions") !== l && c.render(l)
            },
            "#team-squad-stats-defensive": function() {
                h.miniFilterView.model.get("tournamentOptions") !== l && h.render(l)
            },
            "#team-squad-stats-offensive": function() {
                p.miniFilterView.model.get("tournamentOptions") !== l && p.render(l)
            },
            "#team-squad-stats-passing": function() {
                d.miniFilterView.model.get("tournamentOptions") !== l && d.render(l)
            },
            "#team-squad-stats-detailed": function() {
                v.detailedFilterView.model.get("tournamentOptions") !== l && v.render(l)
            }
        },
        init: {
            "#team-squad-stats-summary": function() {
                c.render(l), l = c.miniFilterView.model.get("tournamentOptions")
            },
            "#team-squad-stats-defensive": function() {
                h.render(l), l = h.miniFilterView.model.get("tournamentOptions")
            },
            "#team-squad-stats-offensive": function() {
                p.render(l), l = p.miniFilterView.model.get("tournamentOptions")
            },
            "#team-squad-stats-passing": function() {
                d.render(l), l = d.miniFilterView.model.get("tournamentOptions")
            },
            "#team-squad-stats-detailed": function() {
                v.render(l), l = v.detailedFilterView.model.get("tournamentOptions")
            }
        }
    })
}), define("tables-team", function() {}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-team-history" != window.currentView)
        return;
    var t = $.extend({}, $.fn.tabs.base);
    t.activate.unshift(function(e) {
        var t = e.init,
            n = e.activate;
        this.bind("activated", function(e, r) {
            var i = t && t[$(r).attr("href")];
            i && ($(r).data("initialized") || (i(), $(r).data("initialized", !0))), n && n[$(r).attr("href")] && n[$(r).attr("href")]()
        })
    }), $("#team-squad-archive-stats-options").tabs({
        setup: t,
        defaultTab: "#team-squad-archive-stats-summary",
        activate: {
            "#team-squad-archive-stats-summary": function() {
                $("#team-squad-archive-stats-summary").data("activeGrid")
            },
            "#team-squad-archive-stats-defensive": function() {
                $("#team-squad-archive-stats-defensive").data("activeGrid")
            },
            "#team-squad-archive-stats-offensive": function() {
                $("#team-squad-archive-stats-offensive").data("activeGrid")
            },
            "#team-squad-archive-stats-passing": function() {
                $("#team-squad-archive-stats-passing").data("activeGrid")
            },
            "#team-squad-archive-stats-detailed": function() {
                $("#team-squad-archive-stats-detailed").data("activeGrid")
            }
        },
        init: {
            "#team-squad-archive-stats-summary": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "summary",
                    category: "summary",
                    subcategory: "all",
                    stageId: stageId,
                    teamIds: teamId,
                    isCurrent: !1,
                    numberOfPlayersToPick: "",
                    includeZeroValues: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    miniFilters: {
                        isMinApp: !1
                    }
                })
            },
            "#team-squad-archive-stats-defensive": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "defensive",
                    category: "summary",
                    subcategory: "defensive",
                    stageId: stageId,
                    teamIds: teamId,
                    isCurrent: !1,
                    miniFilters: {
                        isMinApp: !1
                    },
                    sortBy: "tacklePerGame",
                    numberOfPlayersToPick: "",
                    includeZeroValues: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    isMinApp: !1
                })
            },
            "#team-squad-archive-stats-offensive": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "offensive",
                    category: "summary",
                    subcategory: "offensive",
                    stageId: stageId,
                    teamIds: teamId,
                    isCurrent: !1,
                    miniFilters: {
                        isMinApp: !1
                    },
                    sortBy: "dribbleWonPerGame",
                    numberOfPlayersToPick: "",
                    includeZeroValues: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    isMinApp: !1
                })
            },
            "#team-squad-archive-stats-passing": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "passing",
                    category: "summary",
                    subcategory: "passing",
                    stageId: stageId,
                    teamIds: teamId,
                    isCurrent: !1,
                    miniFilters: {
                        isMinApp: !1
                    },
                    sortBy: "assistTotal",
                    numberOfPlayersToPick: "",
                    includeZeroValues: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    isMinApp: !1
                })
            },
            "#team-squad-archive-stats-detailed": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "detailed",
                    stageId: stageId,
                    teamIds: teamId,
                    isCurrent: !1,
                    detailedFilters: !0,
                    numberOfPlayersToPick: "",
                    displayHeight: !0,
                    displayWeight: !0,
                    isMinApp: !1,
                    displayAge: !1,
                    includeZeroValues: !0,
                    renderOnInitialize: !1,
                    displayTournaments: !1
                })
            }
        }
    })
}), define("tables-team-history", function() {}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-player-history" != window.currentView)
        return;
    WS.TabbedPanels({
        id: "player-tournament-stats",
        tabs: {
            view: {
                id: "player-tournament-stats-options"
            },
            model: {
                defaultTab: "#player-tournament-stats-summary",
                activate: {
                    "#player-tournament-stats-summary": function() {},
                    "#player-tournament-stats-defensive": function() {},
                    "#player-tournament-stats-offensive": function() {},
                    "#player-tournament-stats-passing": function() {},
                    "#player-tournament-stats-detailed": function() {}
                },
                init: {
                    "#player-tournament-stats-summary": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "summary",
                            category: "summary",
                            subcategory: "all",
                            playerId: playerId,
                            isHistoricTournamentTable: !0,
                            miniFilters: {
                                isMinApp: !1
                            },
                            showTotals: !0,
                            includeZeroValues: !0,
                            isCurrent: !1,
                            displayTournamentShortNames: !0,
                            sortBy: "seasonId",
                            numberOfPlayersToPick: ""
                        })
                    },
                    "#player-tournament-stats-defensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "defensive",
                            category: "summary",
                            subcategory: "defensive",
                            isHistoricTournamentTable: !0,
                            miniFilters: {
                                isMinApp: !1
                            },
                            playerId: playerId,
                            showTotals: !0,
                            includeZeroValues: !0,
                            isCurrent: !1,
                            displayTournamentShortNames: !0,
                            sortBy: "seasonId",
                            numberOfPlayersToPick: ""
                        })
                    },
                    "#player-tournament-stats-offensive": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "offensive",
                            category: "summary",
                            subcategory: "offensive",
                            isHistoricTournamentTable: !0,
                            miniFilters: {
                                isMinApp: !1
                            },
                            playerId: playerId,
                            showTotals: !0,
                            includeZeroValues: !0,
                            isCurrent: !1,
                            displayTournamentShortNames: !0,
                            sortBy: "seasonId",
                            numberOfPlayersToPick: ""
                        })
                    },
                    "#player-tournament-stats-passing": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "passing",
                            category: "summary",
                            subcategory: "passing",
                            isHistoricTournamentTable: !0,
                            miniFilters: {
                                isMinApp: !1
                            },
                            playerId: playerId,
                            showTotals: !0,
                            includeZeroValues: !0,
                            isCurrent: !1,
                            displayTournamentShortNames: !0,
                            sortBy: "seasonId",
                            numberOfPlayersToPick: ""
                        })
                    },
                    "#player-tournament-stats-detailed": function() {
                        e.renderPlayerStatisticsTable({
                            elementId: "detailed",
                            category: "shots",
                            subcategory: "zones",
                            isHistoricTournamentTable: !0,
                            isCurrent: !1,
                            detailedFilters: !0,
                            paging: !1,
                            displayTournaments: !1,
                            displayTournamentShortNames: !0,
                            allowColumnNameSpecialCases: !0,
                            displayDiscipline: !1,
                            playerId: playerId,
                            renderOnInitialize: !1,
                            isTournamentTable: !0,
                            showTotals: !0,
                            includeZeroValues: !0,
                            numberOfPlayersToPick: "",
                            disableAge: !0,
                            disablePositions: !0,
                            sortBy: "seasonId",
                            disableNationality: !0
                        })
                    }
                }
            }
        }
    })
}), define("tables-player-history", function() {}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-match-h2h" != window.currentView)
        return;
    var t = $.extend({}, $.fn.tabs.base);
    t.activate.unshift(function(e) {
        var t = e.init,
            n = e.activate;
        this.bind("activated", function(e, r) {
            var i = t && t[$(r).attr("href")];
            i && ($(r).data("initialized") || (i(), $(r).data("initialized", !0))), n && n[$(r).attr("href")] && n[$(r).attr("href")]()
        })
    }), $("#h2h-player-stats-options").tabs({
        setup: t,
        defaultTab: "#h2h-player-stats-summary",
        activate: {
            "#h2h-player-stats-summary": function() {
                $("#h2h-player-stats-summary").data("activeGrid")
            },
            "#h2h-player-stats-defensive": function() {
                $("#h2h-player-stats-defensive").data("activeGrid")
            },
            "#h2h-player-stats-offensive": function() {
                $("#h2h-player-stats-offensive").data("activeGrid")
            },
            "#h2h-player-stats-passing": function() {
                $("#h2h-player-stats-passing").data("activeGrid")
            }
        },
        init: {
            "#h2h-player-stats-summary": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "summary",
                    category: "summary",
                    subcategory: "all",
                    paging: !1,
                    numberOfPlayersToPick: "",
                    teamIds: homeTeamId + "," + awayTeamId,
                    stageId: stageId,
                    matchId: matchId,
                    renderOnInitialize: !1,
                    miniFilters: {
                        renderOnInitialize: !0,
                        isMinApp: !1
                    },
                    displayApps: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    includeZeroValues: !0,
                    sortOnClient: !0
                })
            },
            "#h2h-player-stats-defensive": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "defensive",
                    category: "summary",
                    subcategory: "defensive",
                    paging: !1,
                    numberOfPlayersToPick: "",
                    teamIds: homeTeamId + "," + awayTeamId,
                    stageId: stageId,
                    matchId: matchId,
                    renderOnInitialize: !1,
                    miniFilters: {
                        renderOnInitialize: !0,
                        isMinApp: !1
                    },
                    displayApps: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    sortBy: "tacklePerGame",
                    includeZeroValues: !0,
                    sortOnClient: !0
                })
            },
            "#h2h-player-stats-offensive": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "offensive",
                    category: "summary",
                    subcategory: "offensive",
                    paging: !1,
                    numberOfPlayersToPick: "",
                    teamIds: homeTeamId + "," + awayTeamId,
                    stageId: stageId,
                    matchId: matchId,
                    renderOnInitialize: !1,
                    miniFilters: {
                        renderOnInitialize: !0,
                        isMinApp: !1
                    },
                    displayApps: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    sortBy: "dribbleWonPerGame",
                    includeZeroValues: !0,
                    sortOnClient: !0
                })
            },
            "#h2h-player-stats-passing": function() {
                e.renderPlayerStatisticsTable({
                    elementId: "passing",
                    category: "summary",
                    subcategory: "passing",
                    paging: !1,
                    numberOfPlayersToPick: "",
                    teamIds: homeTeamId + "," + awayTeamId,
                    stageId: stageId,
                    matchId: matchId,
                    renderOnInitialize: !1,
                    miniFilters: {
                        renderOnInitialize: !0,
                        isMinApp: !1
                    },
                    displayApps: !0,
                    displayHeight: !0,
                    displayWeight: !0,
                    sortBy: "assistTotal",
                    includeZeroValues: !0,
                    sortOnClient: !0
                })
            }
        }
    })
}), define("tables-match-h2h", function() {}), require(["helpers/StatisticsTableConstructor"], function(e) {
    if ("tables-match-matchcentre" != window.currentView)
        return;
    var t = WS.TabbedPanels({
            tabs: {
                view: {
                    id: "live-player-home-options"
                },
                model: {
                    defaultTab: "#live-player-home-summary",
                    activate: {
                        "#live-player-home-summary": function() {
                            $("#live-player-summary").data("activeGrid")
                        },
                        "#live-player-home-defensive": function() {
                            $("#live-player-home-defensive").data("activeGrid")
                        },
                        "#live-player-home-offensive": function() {
                            $("#live-player-home-offensive").data("activeGrid")
                        },
                        "#live-player-home-passing": function() {
                            $("#live-player-home-passing").data("activeGrid")
                        }
                    },
                    init: {
                        "#live-player-home-summary": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "home-summary",
                                category: "summary",
                                subcategory: "all",
                                teamIds: homeTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        },
                        "#live-player-home-defensive": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "home-defensive",
                                category: "defensive",
                                subcategory: "all",
                                teamIds: homeTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        },
                        "#live-player-home-offensive": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "home-offensive",
                                category: "offensive",
                                subcategory: "all",
                                teamIds: homeTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        },
                        "#live-player-home-passing": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "home-passing",
                                category: "passing",
                                subcategory: "all",
                                teamIds: homeTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        }
                    }
                }
            }
        }),
        n = WS.TabbedPanels({
            tabs: {
                view: {
                    id: "live-player-away-options"
                },
                model: {
                    defaultTab: "#live-player-away-summary",
                    activate: {
                        "#live-player-away-summary": function() {
                            $("#live-player-summary").data("activeGrid")
                        },
                        "#live-player-away-defensive": function() {
                            $("#live-player-away-defensive").data("activeGrid")
                        },
                        "#live-player-away-offensive": function() {
                            $("#live-player-away-offensive").data("activeGrid")
                        },
                        "#live-player-away-passing": function() {
                            $("#live-player-away-passing").data("activeGrid")
                        }
                    },
                    init: {
                        "#live-player-away-summary": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "away-summary",
                                category: "summary",
                                teamIds: awayTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        },
                        "#live-player-away-defensive": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "away-defensive",
                                category: "defensive",
                                teamIds: awayTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        },
                        "#live-player-away-offensive": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "away-offensive",
                                category: "offensive",
                                teamIds: awayTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        },
                        "#live-player-away-passing": function() {
                            e.renderPlayerStatisticsTable({
                                elementId: "away-passing",
                                category: "passing",
                                teamIds: awayTeamId,
                                matchId: matchId,
                                matchCentreStatistics: !0,
                                numberOfPlayersToPick: "",
                                hideTeamMetaData: !0,
                                displayIncidents: !0,
                                displayApps: !1,
                                eventTypes: matchCentreEventTypes,
                                renderOnInitialize: !0,
                                sortBy: "",
                                sortOnClient: !0
                            })
                        }
                    }
                }
            }
        })
}), define("tables-match-matchcentre", function() {}), define("models/MatchCentreTeamModel", ["backbone", "models/BaseModel"], function(e, t) {
    var n = t.extend({
        initialize: function(e) {},
        getFormation: function(e, t, n, r) {
            var i = this.get("formations");
            if (!i || i.length < 0)
                return null;
            if (6 == r && 0 == e && t == n)
                return _.first(i);
            var s = null != e && null != t ? this.getFormationInRange(e, t) : _.last(i);
            return s
        },
        getFormationInRange: function(e, t) {
            var n = this.get("formations");
            return _.last(_.filter(n, function(e) {
                return e.startMinuteExpanded <= t
            }))
        },
        getPlayerWithId: function(e) {
            try {
                return _.findWhere(this.get("players"), {
                    playerId: parseInt(e, 10)
                })
            } catch (t) {}
            return null
        },
        getPlayerAtIndex: function(e) {
            var t = this.get("players");
            return t && e < t.length ? t[e] : null
        },
        getDefaultPlayer: function() {
            return _.findWhere(this.get("players"), {
                position: "GK"
            })
        },
        validate: function(e, t) {
            if (!e)
                return "No team data"
        }
    });
    return n
}), define("commentaryCreator", [], function() {
    var e = function(e, t) {
        var n = e,
            r = t,
            i = {
                1: {
                    Name: "Long Ball",
                    Text: "passed a long ball",
                    Category: "PassEvents"
                },
                2: {
                    Name: "Cross",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                3: {
                    Name: "Head Pass",
                    Text: "passed with his head",
                    Category: "PassEvents"
                },
                4: {
                    Name: "Through Ball",
                    Text: "passed a through ball",
                    Category: "PassEvents"
                },
                5: {
                    Name: "Free kick taken",
                    Text: "passed from a free kick",
                    Category: "PassEvents"
                },
                6: {
                    Name: "Corner taken",
                    Text: "passed from corner",
                    Category: "PassEvents"
                },
                7: {
                    Name: "Players caught offside",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                8: {
                    Name: "Players caught offside",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                106: {
                    Name: "Attacking Pass",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                107: {
                    Name: "Throw-in",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                155: {
                    Name: "Chipped",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                156: {
                    Name: "Lay-off",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                157: {
                    Name: "Launch",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                168: {
                    Name: "Flick-on",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                195: {
                    Name: "Pull Back",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                196: {
                    Name: "Switch of play",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                210: {
                    Name: "Assist",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                218: {
                    Name: "2nd assist",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                219: {
                    Name: "Players on both posts",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                220: {
                    Name: "Player on near post",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                221: {
                    Name: "Player on far post",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                222: {
                    Name: "No players on posts",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                223: {
                    Name: "In-swinger",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                224: {
                    Name: "Out-swinger",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                225: {
                    Name: "Straight",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                236: {
                    Name: "Blocked Pass",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                238: {
                    Name: "Fair Play",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                240: {
                    Name: "GK Start",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                241: {
                    Name: "Indirect",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                266: {
                    Name: "Put Through",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                278: {
                    Name: "Tap",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                279: {
                    Name: "Kick Off",
                    Text: "crossed",
                    Category: "PassEvents"
                },
                15: {
                    Name: "Head",
                    Text: "crossed",
                    Category: "BodyPart"
                },
                72: {
                    Name: "Left footed",
                    Text: "crossed",
                    Category: "BodyPart"
                },
                20: {
                    Name: "Right footed",
                    Text: "crossed",
                    Category: "BodyPart"
                },
                21: {
                    Name: "Other body part",
                    Text: "crossed",
                    Category: "BodyPart"
                },
                22: {
                    Name: "Regular play",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                23: {
                    Name: "Fast break",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                24: {
                    Name: "Set piece",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                25: {
                    Name: "From corner",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                26: {
                    Name: "Free kick",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                97: {
                    Name: "Direct Freekick",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                112: {
                    Name: "Scramble",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                160: {
                    Name: "Throw-in set piece",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                29: {
                    Name: "Assisted",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                154: {
                    Name: "Intentional assist",
                    Text: "crossed",
                    Category: "PatternOfPlay"
                },
                9: {
                    Name: "Penalty",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                28: {
                    Name: "Own goal",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                108: {
                    Name: "Volley",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                109: {
                    Name: "Overhead",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                113: {
                    Name: "Strong",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                114: {
                    Name: "Weak",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                115: {
                    Name: "Rising",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                116: {
                    Name: "Dipping",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                117: {
                    Name: "Lob",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                120: {
                    Name: "Swerve Left",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                121: {
                    Name: "Swerve Right",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                122: {
                    Name: "Swerve Moving",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                133: {
                    Name: "Deflection",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                136: {
                    Name: "Keeper Touched",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                137: {
                    Name: "Keeper Saved",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                138: {
                    Name: "Hit Woodwork",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                153: {
                    Name: "Not past goal line",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                214: {
                    Name: "Big Chance",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                215: {
                    Name: "Individual Play",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                217: {
                    Name: "2nd assisted",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                228: {
                    Name: "Own shot blocked",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                254: {
                    Name: "Follows a Dribble",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                261: {
                    Name: "1 on 1 Chip",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                262: {
                    Name: "Back Heel",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                263: {
                    Name: "Direct Corner",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                266: {
                    Name: "Put Through",
                    Text: "crossed",
                    Category: "ShotDescriptors"
                },
                16: {
                    Name: "Small box-centre",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                17: {
                    Name: "Box-centre",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                18: {
                    Name: "Out of box-centre",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                19: {
                    Name: "35+ centre",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                60: {
                    Name: "Small box-right",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                61: {
                    Name: "Small box-left",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                62: {
                    Name: "Box-deep right",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                63: {
                    Name: "Box-right",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                64: {
                    Name: "Box-left",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                65: {
                    Name: "Box-deep left",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                66: {
                    Name: "Out of box-deep right",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                67: {
                    Name: "Out of box-right",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                68: {
                    Name: "Out of box-left",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                69: {
                    Name: "Out of box-deep left",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                70: {
                    Name: "35+ right",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                71: {
                    Name: "35+ left",
                    Text: "crossed",
                    Category: "PitchLocation"
                },
                73: {
                    Name: "Left",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                74: {
                    Name: "High",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                75: {
                    Name: "Right",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                76: {
                    Name: "Low left",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                77: {
                    Name: "High left",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                78: {
                    Name: "Low centre",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                79: {
                    Name: "High centre",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                80: {
                    Name: "Low right",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                81: {
                    Name: "High right",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                82: {
                    Name: "Blocked",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                83: {
                    Name: "Close left",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                84: {
                    Name: "Close right",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                85: {
                    Name: "Close high",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                86: {
                    Name: "Close left and high",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                87: {
                    Name: "Close right and high",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                100: {
                    Name: "Six yard blocked",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                101: {
                    Name: "Saved off line",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                276: {
                    Name: "Out on sideline",
                    Text: "crossed",
                    Category: "GoalLocation"
                },
                10: {
                    Name: "Hand",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                11: {
                    Name: "6-seconds violation",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                12: {
                    Name: "Dangerous play",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                13: {
                    Name: "Foul",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                31: {
                    Name: "Yellow Card",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                32: {
                    Name: "Second yellow",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                33: {
                    Name: "Red card",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                34: {
                    Name: "Referee abuse",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                35: {
                    Name: "Argument",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                36: {
                    Name: "Fight",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                37: {
                    Name: "Time wasting",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                38: {
                    Name: "Excessive celebration",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                39: {
                    Name: "Crowd interaction",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                40: {
                    Name: "Other reason",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                95: {
                    Name: "Back pass",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                132: {
                    Name: "Dive",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                158: {
                    Name: "Persistent infringement",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                159: {
                    Name: "Foul and abusive language",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                161: {
                    Name: "Encroachment",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                162: {
                    Name: "Leaving field",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                163: {
                    Name: "Entering field",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                164: {
                    Name: "Spitting",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                165: {
                    Name: "Professional foul",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                166: {
                    Name: "Handling on the line",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                171: {
                    Name: "Rescinded card",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                172: {
                    Name: "No impact on timing",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                184: {
                    Name: "Dissent",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                191: {
                    Name: "Off the ball foul",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                192: {
                    Name: "Block by hand",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                241: {
                    Name: "Indirect",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                242: {
                    Name: "Obstruction",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                243: {
                    Name: "Unsporting Behaviour",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                244: {
                    Name: "Not Retreating",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                245: {
                    Name: "Serious Foul",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                264: {
                    Name: "Aerial Foul",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                265: {
                    Name: "Attempted Tackle",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                289: {
                    Name: "Denied goal-scoring opp",
                    Text: "crossed",
                    Category: "FoulReason"
                },
                228: {
                    Name: "Own Shot Blocked",
                    Text: "crossed",
                    Category: "BallTouchEvents"
                },
                238: {
                    Name: "Fair Play",
                    Text: "crossed",
                    Category: "BallTouchEvents"
                },
                190: {
                    Name: "From shot off target",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                88: {
                    Name: "High claim",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                89: {
                    Name: "1 on 1",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                90: {
                    Name: "Deflected save",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                91: {
                    Name: "Dive and deflect",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                92: {
                    Name: "Catch",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                93: {
                    Name: "Dive and catch",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                123: {
                    Name: "Keeper Throw",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                124: {
                    Name: "Goal Kick",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                128: {
                    Name: "Punch",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                139: {
                    Name: "Own Player",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                173: {
                    Name: "Parried safe",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                174: {
                    Name: "Parried danger",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                175: {
                    Name: "Fingertip",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                176: {
                    Name: "Caught",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                177: {
                    Name: "Collected",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                178: {
                    Name: "Standing",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                179: {
                    Name: "Diving",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                180: {
                    Name: "Stooping",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                181: {
                    Name: "Reaching",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                182: {
                    Name: "Hands",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                183: {
                    Name: "Feet",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                186: {
                    Name: "Scored",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                187: {
                    Name: "Saved",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                188: {
                    Name: "Missed",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                198: {
                    Name: "GK hoof",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                199: {
                    Name: "Gk kick from hands",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                237: {
                    Name: "Low",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                267: {
                    Name: "Right Arm",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                268: {
                    Name: "Left Arm",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                269: {
                    Name: "Both Arms",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                270: {
                    Name: "Right Leg",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                271: {
                    Name: "Left Leg",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                272: {
                    Name: "Both Legs",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                273: {
                    Name: "Hit Right Post",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                274: {
                    Name: "Hit Left Post",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                275: {
                    Name: "Hit Bar",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                287: {
                    Name: "Over-arm",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                232: {
                    Name: "Unchallenged",
                    Text: "crossed",
                    Category: "GKEvents"
                },
                14: {
                    Name: "Last line",
                    Text: "crossed",
                    Category: "DefensiveEvents"
                },
                167: {
                    Name: "Out of play",
                    Text: "crossed",
                    Category: "DefensiveEvents"
                },
                169: {
                    Name: "Leading to attempt",
                    Text: "crossed",
                    Category: "DefensiveEvents"
                },
                170: {
                    Name: "Leading to goal",
                    Text: "crossed",
                    Category: "DefensiveEvents"
                },
                185: {
                    Name: "Blocked cross",
                    Text: "crossed",
                    Category: "DefensiveEvents"
                },
                239: {
                    Name: "By Wall",
                    Text: "crossed",
                    Category: "DefensiveEvents"
                },
                285: {
                    Name: "Defensive",
                    Text: "crossed",
                    Category: "DuelEvents"
                },
                286: {
                    Name: "Offensive",
                    Text: "crossed",
                    Category: "DuelEvents"
                },
                247: {
                    Name: "Offside",
                    Text: "crossed",
                    Category: "ContRefDec"
                },
                235: {
                    Name: "Goal Line",
                    Text: "crossed",
                    Category: "ContRefDec"
                },
                53: {
                    Name: "Injured player",
                    Text: "crossed",
                    Category: "Stopages"
                },
                202: {
                    Name: "Weather problem",
                    Text: "crossed",
                    Category: "Stopages"
                },
                203: {
                    Name: "Crowd trouble",
                    Text: "crossed",
                    Category: "Stopages"
                },
                204: {
                    Name: "Fire",
                    Text: "crossed",
                    Category: "Stopages"
                },
                205: {
                    Name: "Object thrown on pitch",
                    Text: "crossed",
                    Category: "Stopages"
                },
                206: {
                    Name: "Spectator on pitch",
                    Text: "crossed",
                    Category: "Stopages"
                },
                207: {
                    Name: "Awaiting officials decision",
                    Text: "crossed",
                    Category: "Stopages"
                },
                208: {
                    Name: "Referee injury",
                    Text: "crossed",
                    Category: "Stopages"
                },
                226: {
                    Name: "Suspended",
                    Text: "crossed",
                    Category: "Stopages"
                },
                227: {
                    Name: "Resume",
                    Text: "crossed",
                    Category: "Stopages"
                },
                246: {
                    Name: "Drinks Break",
                    Text: "crossed",
                    Category: "Stopages"
                },
                130: {
                    Name: "Formation Name",
                    Text: "formation",
                    Category: "Formations",
                    UseValue: !0
                }
            },
            s = function(e) {
                if (!e.type)
                    return "";
                var t = e.type.value,
                    n = e.period ? e.period.value : null,
                    r = e.outcomeType ? e.outcomeType.value : !0;
                switch (t) {
                    case 1:
                        return "{PlayerName} passes {RelatedPlayer}. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 2:
                        return "{PlayerName} cleared the ball. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 3:
                        return "{PlayerName} dribble. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 6:
                        return r == 1 ? "{PlayerName} won corner. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})" : null;
                    case 10:
                        if (l(e, 94))
                            return "{PlayerName} blocks the shot. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                        return "{PlayerName} save. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 13:
                        return "{PlayerName} attempt missed. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay}){RelatedPlayer}";
                    case 14:
                        return "{PlayerName} hits the post. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay}) {RelatedPlayer}";
                    case 15:
                        return "{PlayerName} attempt saved. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay}) {RelatedPlayer}";
                    case 16:
                        return "GOAL! {PlayerName} scores. {RelatedPlayer} ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 18:
                        return "{PlayerName} subbed out. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 19:
                        return "{PlayerName} subbed in. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 30:
                        if (1 == n)
                            return "First half ended.";
                        if (2 == n)
                            return "Fulltime.";
                        if (3 == n)
                            return "First half of extratime ended.";
                        if (4 == n)
                            return "Second half of extratime ended.";
                        if (5 == n)
                            return "Penalty shootouts ended.";
                    case 32:
                        if (1 == n)
                            return "First half begins!";
                        if (2 == n)
                            return "Second half begins!";
                        if (3 == n)
                            return "First half of extratime begins!";
                        if (4 == n)
                            return "Second half of extratime begins!";
                        if (5 == n)
                            return "Penalty shootouts begins!";
                    case 34:
                        return "Formation Set {Formations}";
                    case 40:
                        return "Formation Changed {Formations}";
                    case 44:
                        if (r == 1)
                            return "{PlayerName} aerial duel won. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                        if (r == 0)
                            return "{PlayerName} aerial duel lost. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 61:
                        if (r == 0)
                            return "{PlayerName} unsuccessful touch. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    case 1e4:
                        return "{PlayerName} offside given. ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})";
                    default:
                        if (e.type.displayName != undefined)
                            return "{PlayerName} " + e.type.displayName + ". ({Stopages}{ContRefDec}{DuelEvents}{DefensiveEvents}{GKEvents}{BallTouchEvents}{FoulReason}{GoalLocation}{PitchLocation}{ShotDescriptors}{PassEvents}{BodyPart}{PatternOfPlay})"
                }
                return null
            },
            o = function(e, t, n) {
                if (e != null) {
                    var r, i = u(t, n),
                        s = dust.compile(e, "test");
                    return dust.loadSource(s), dust.render("test", i, function(e, t) {
                        r = t
                    }), r = r.replace("()", ""), r = r.replace(", )", ")"), r
                }
                return ""
            },
            u = function(e, t) {
                var n = {},
                    r = e.qualifiers;
                for (var s = 0; s < r.length; s++) {
                    var o = r[s];
                    if (o.type) {
                        var u = i[o.type.value];
                        if (u != undefined) {
                            var l = u.Category,
                                h = n[l] || "";
                            if (!u.UseValue)
                                n[l] = h.concat(u.Name + ", ");
                            else {
                                var p = a(o, l);
                                n[l] = h.concat(("" != h ? ", " : " ") + p + "")
                            }
                        }
                    }
                }
                n.PlayerName = c(e.playerId);
                var d = f(e, t);
                return d != null && (n.RelatedPlayer = " Assisted by " + d), n
            },
            a = function(e, t) {
                return "Formations" == t ? h(e.value) : e.value
            },
            f = function(e, t) {
                var n = _.filter(e.qualifiers, function(e) {
                    return e.type && e.type.value == 55
                });
                if (n.length > 0) {
                    var r = n[0].value,
                        i;
                    if (r != undefined) {
                        i = _.filter(t, function(t) {
                            return t.eventId == r && t.teamId == e.teamId
                        });
                        if (i.length > 0)
                            return i = i[0], c(i.playerId)
                    }
                }
                return null
            },
            l = function(e, t) {
                var n = e.qualifiers;
                for (var r = 0; r < n.length; r++) {
                    var i = n[r];
                    if (i["type"].value == t)
                        return !0
                }
                return !1
            },
            c = function(e) {
                return n[e]
            },
            h = function(e) {
                return r[e]
            },
            p = function(e, t) {
                var n = s(e);
                return o(n, e, t)
            },
            d = function(e) {
                n = e
            };
        return {
            getSentence: p,
            setPlayers: d
        }
    };
    return e
}), define("models/MatchCentreModel", ["models/BaseModel", "models/MatchCentreTeamModel", "commentaryCreator", "lib/helpers/MatchCentreHelper"], function(e, t, n, r) {
    var i = e.extend({
        url: function() {
            return "/MatchesFeed/" + this.id + "/MatchCentre2"
        },
        idAttribute: "matchId",
        initialize: function() {
            this.forward("home", new t), this.forward("away", new t)
        },
        triggerChange: function() {},
        onModelChange: function() {},
        defaults: {},
        getPlayerSubbedInMinute: function(e, t) {
            for (var n = 0; n < e.length; n++) {
                var r = e[n];
                if (t == r.subOnPlayerId)
                    return r.startMinute
            }
        },
        setCommentaryTexts: function() {
            var e = this.get("incidentEvents");
            this.setCommentaryForEvents(e), this.setCommentaryForEvents(this.home.get("incidentEvents")), this.setCommentaryForEvents(this.away.get("incidentEvents"))
        },
        setCommentaryForEvents: function(e) {
            _.each(e, _.bind(function(t) {
                t.text = this.commentaryCreator.getSentence(t, e)
            }, this)), e = _.sortBy(e, function(e) {
                return -parseInt(e.minute, 10)
            })
        },
        validate: function(e, t) {
            if (!e)
                return "No match data at all"
        }
    });
    return i
}), define("views/MatchCentreStadiumView", ["backbone", "views/BaseView", "lib/helpers/MatchCentreHelper", "dust"], function(e, t, n) {
    var r = t.extend({
        el: "#stadium",
        template: "match-centre-stadium",
        formationIndex: 0,
        defaults: {
            minStatValue: 9999,
            maxStatValue: 0,
            minMinute: 0,
            minMinuteExpanded: 0,
            currentPlayerStatValues: {},
            selectedPlayers: {}
        },
        events: {},
        initialize: function(e) {
            this.eventTypeMappings = e.eventTypeMappings, this.model.on("change", _.bind(function() {
                this.onModelChange()
            }, this))
        },
        onModelChange: function() {
            console.log(this.templateContext()), this.expandedMinutes = this.model.get("expandedMinutes"), this.maxMinuteExpanded = this.maxMinuteExpanded ? this.maxMinuteExpanded : this.model.get("expandedMaxMinute"), this.maxExpandedLimit = this.model.get("minuteExpanded"), this.minuteInfos = n.getMinuteInfosFromExpandedMinutes(this.expandedMinutes), this.reRenderStadium()
        },
        reRenderStadium: function() {
            setTimeout(_.bind(function() {
                this.setTeamInfo(this.model.home), this.setTeamInfo(this.model.away), this.setPlayerInfo(this.selectedPlayers.home), this.setPlayerInfo(this.selectedPlayers.away), this.renderMatchInfo()
            }, this), 0), this.renderFormations(), this.$el.trigger("rendered")
        },
        renderFormations: function() {
            this.renderFormation(this.model.home), this.renderFormation(this.model.away)
        },
        getTeamPlayersCount: function(e) {
            var t = e.get("players");
            return t ? t.length : 0
        },
        weatherDisplayNames: {
            1: "Windy",
            2: "Rain",
            3: "Fog",
            4: "Snow/Hail",
            5: "Clear",
            6: "Sunny",
            7: "Cloudy",
            8: "Partly Cloudy",
            9: "Heavy Rain",
            10: "Heavy Snow"
        },
        getWeatherDisplayNameFromWeatherCode: function() {
            var e = this.model.get("weatherCode");
            if (!e)
                return;
            return this.weatherDisplayNames[e]
        },
        renderMatchInfo: function() {
            this.renderMatchInfoItem("venueName"), this.renderMatchInfoItem("weatherCode", this.getWeatherDisplayNameFromWeatherCode()), this.renderMatchInfoItem("attendance", null, this.numberWithCommas), this.renderMatchInfoItem("refereeName"), this.renderMatchStatus()
        },
        renderMatchStatus: function() {
            this.renderMatchInfoItem("score"), this.renderMatchInfoItem("elapsed")
        },
        numberWithCommas: function(e) {
            return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
        },
        renderMatchInfoItem: function(e, t, n) {
            var r = t ? t : this.model.get(e),
                i = this.model.get(e);
            n && (r = n(r));
            var s = this.$el.find('[data-for="{0}"]'.format(e));
            r ? s.removeClass("is-empty").attr("data-value", r).attr("data-core-value", i).find(".value").html(r) : s.addClass("is-empty")
        },
        updatePlayerStats: function(e) {
            var t = e.values,
                n = e.name;
            this.playerStatsUpdated(t, n), this.currentPlayerStatValues[n] = t
        },
        bindCustomEvents: function() {
            this.customEventsBound || (this.$el.on("player-stats-updated", _.bind(function(e, t) {
                setTimeout(_.bind(function() {
                    this.updatePlayerStats(t)
                }, this), 0)
            }, this)), this.$el.on("player-event-highlighted", _.bind(function(e, t) {
                this.hightlightPlayerOn(t)
            }, this)), this.$el.on("player-event-highlight-removed", _.bind(function(e, t) {
                this.hightlightPlayerOff(t)
            }, this)), this.$el.on("player-mode-on", _.bind(function(e, t) {
                this.setPlayerInfo(t)
            }, this)), this.$el.on("minutes-range-changed-for-stadium", _.bind(function(e, t) {
                var n = t[0],
                    r = t[1];
                this.minMinuteExpanded = Math.min(n.expandedMinute, r.expandedMinute), this.maxMinuteExpanded = Math.max(n.expandedMinute, r.expandedMinute), this.reRenderStadium()
            }, this)), this.customEventsBound = !0)
        },
        onRender: function() {
            this.bindCustomEvents()
        },
        hightlightPlayerOn: function(e) {
            this.$el.addClass("highlight-on").find('.player[data-player-id="{0}"]'.format(e)).addClass("highlighted")
        },
        hightlightPlayerOff: function(e) {
            this.$el.removeClass("highlight-on").find('.player[data-player-id="{0}"]'.format(e)).removeClass("highlighted")
        },
        validate: function() {
            return !0
        },
        playerStatsUpdated: function(e, t) {
            if (!this.$players)
                return;
            this.resetPlayerStatValues(), this.setStatIncreaseDecreaseStates(e, t), this.sizePlayerStatsRelatively()
        },
        setStatIncreaseDecreaseStates: function(e, t) {
            for (var n in e) {
                var r = this.$getPlayerWithId(n),
                    i = e[n],
                    s;
                this.currentPlayerStatValues[t] && this.currentPlayerStatValues[t][n] && (s = this.currentPlayerStatValues[t][n]), this.minStatValue = Math.min(this.minStatValue, i), this.maxStatValue = Math.max(this.maxStatValue, i), r.find(".player-stat-value").html(i), r.attr("data-has-stat", !0).removeAttr("data-stat-increased"), s && s != i && r.attr("data-stat-increased", s < i)
            }
        },
        sizePlayerStatsRelatively: function() {
            var e = 14,
                t = 10,
                n = this.minStatValue,
                r = this.maxStatValue;
            $(".player-stat-value", this.$el).each(function() {
                var i = $(this),
                    s = parseFloat(i.text()),
                    o = (s - n) * (e - t) / (r - n) + t;
                i.fontSize = i.css("font-size", o)
            })
        },
        resetPlayerStatValues: function() {
            this.$players.removeAttr("data-has-stat").find(".player-stat-value").html("")
        },
        renderFormation: function(e) {
            if (!e)
                return;
            var t = e.getFormation(this.minMinuteExpanded, this.maxMinuteExpanded, this.maxExpandedLimit, this.model.get("statusCode"));
            if (!t)
                return;
            this.$players = this.$el.find(".player[data-player-id]"), _.each(e.get("players"), _.bind(function(n) {
                this.positionPlayer(e, n, t), this.setPlayerKeyIncidents(e, n), this.setPlayerSubbedStatus(e, n)
            }, this))
        },
        $getPlayerWithId: function(e) {
            return this.$players.filter('[data-player-id="{0}"]'.format(e))
        },
        positionPlayer: function(e, t, n) {
            var r = _.indexOf(n.playerIds, t.playerId);
            if (0 <= r && r < 11 && r < n.formationPositions.length) {
                var i = n.formationPositions[r];
                this.positionPitchPlayer(e, t, i)
            } else
                this.positionBenchPlayer(t)
        },
        positionPitchPlayer: function(e, t, n) {
            var r = this.$getPlayerWithId(t.playerId);
            if (0 != r.length) {
                var i = this.getFormationCoordinates(n, e.get("field"));
                if (!r.data("is-first-eleven")) {
                    var s = this.$el.find('.pitch-field[data-field="{0}"]'.format(e.get("field")));
                    r.data("is-first-eleven", !0).detach().appendTo(s)
                }
                for (var o in i)
                    r.css(o, i[o] + "%")
            }
        },
        getFormationCoordinates: function(e, t) {
            var n = 100 * (e.vertical / 11),
                r = 100 * (e.horizontal / 11);
            return "home" == t ? {
                left: n,
                bottom: r,
                right: "auto",
                top: "auto"
            } : {
                left: "auto",
                bottom: "auto",
                right: n,
                top: r
            }
        },
        positionBenchPlayer: function(e) {
            var t = this.$getPlayerWithId(e.playerId);
            if (e.stats.ratings) {
                var n = this.$el.find('.substitutes[data-field="{0}"]'.format(e.field));
                t.data("is-first-eleven", !1).detach(), n.prepend(t)
            }
        },
        getPlayerSubOnMinuteInfo: function(e, t) {
            var r, i = this;
            return _.each(e.get("formations"), function(e) {
                if (t.playerId == e.subOnPlayerId) {
                    var s = n.getExpandedMinute(e.period, e.startMinuteExpanded);
                    r = i.minuteInfos[s]
                }
            }), r
        },
        getPlayerSubOffMinuteInfo: function(e, t) {
            var r, i = this;
            return _.each(e.get("formations"), function(e) {
                if (t.playerId == e.subOffPlayerId) {
                    var s = n.getExpandedMinute(e.period, e.startMinuteExpanded);
                    r = i.minuteInfos[s]
                }
            }), r
        },
        getPlayerKeyIncidents: function(e, t) {
            var r = [],
                i = this;
            return _.each(e.get("incidentEvents"), function(e) {
                if (t.playerId == e.playerId && i.minMinuteExpanded <= e.expandedMinute && e.expandedMinute <= i.maxMinuteExpanded) {
                    var s = _.extend({}, e, {
                        satisfiers: n.getKeyIncidentEventSatisfiers(e, i.eventTypeMappings)
                    });
                    r.push(s)
                }
            }), r
        },
        setPlayerSubbedStatus: function(e, t) {
            var n = this.$el.find('[data-player-id="{0}"]'.format(t.playerId));
            if (0 == n.length)
                return;
            n.removeAttr("data-is-subbed-off").removeAttr("data-is-subbed-on").removeAttr("data-has-key-incidents");
            var r = this.getPlayerSubOnMinuteInfo(e, t),
                i = this.getPlayerSubOffMinuteInfo(e, t);
            r && n.attr("data-is-subbed-on", !0).find('.timeline-event[data-type="19"]').attr("title", r.minuteString), i && n.attr("data-is-subbed-off", !0).find('.timeline-event[data-type="18"]').attr(i.minuteString)
        },
        setPlayerKeyIncidents: function(e, t, n) {
            var r = this.getPlayerKeyIncidents(e, t),
                i = n ? n : this.$el.find('[data-player-id="{0}"]'.format(t.playerId));
            if (0 == i.length)
                return;
            NG.renderDustTemplate("match-centre-stadium-events", {
                events: r,
                isManOfTheMatch: t.isManOfTheMatch
            }, _.bind(function(e) {
                i.find(".player-key-incidents").html(e)
            }, this))
        },
        createPlayer: function(e, t, n) {
            return;
            var r
        },
        setTeamInfo: function(e) {
            var t = e.get("field"),
                n = this.$el.find(".compared").filter('[data-mode="team"][data-field="{0}"]'.format(t));
            n.find(".team-emblem img").attr("src", gImageUrl + "teams/" + e.get("teamId") + ".png"), n.find(".manager-name").html(e.get("managerName")), n.find(".average-age").html(e.get("averageAge"));
            var r = e.getFormation(this.minMinuteExpanded, this.maxMinuteExpanded, this.maxExpandedLimit, this.model.get("statusCode"));
            r && n.find(".formation").html(r.formationName)
        },
        getPlayerShortName: function(e) {
            var t = [],
                n = e.split(" ");
            for (var r = 0; r < n.length; r++)
                if (r != n.length - 1) {
                    var i = n[r].split("");
                    t.push(i[0] + ".")
                } else
                    t.push(n[r]);
            return t.join(" ")
        },
        setPlayerInfo: function(e) {
            if (!e)
                return;
            var t = this.$el.find(".compared").filter('[data-mode="player"][data-field="{0}"]'.format(e.field));
            t.find(".player-avatar img").attr("src", gImageUrl + "players/" + e.playerId + ".jpg"), e.shirtNo && t.find(".player-shirt-no").html("{0}.".format(e.shirtNo)), t.find(".player-name").html(this.getPlayerShortName(e.name)).attr("href", "/Players/{0}".format(e.playerId)), t.find(".player-height").html(e.height), t.find(".player-weight").html(e.weight), t.find(".player-age").html(e.age), t.find(".player-position").html(e.position);
            var n = this.model[e.field];
            this.setPlayerKeyIncidents(n, e, t), this.selectedPlayers[e.field] = e
        },
        ensureBothTeamsHaveSelectedPlayers: function() {
            this.ensureSelectedPlayerIsMarked("home"), this.ensureSelectedPlayerIsMarked("away")
        },
        ensureSelectedPlayerIsMarked: function(e) {
            var t = this.$el.find('[data-field="{0}"] .player.selected'.format(e));
            if (0 == t.length) {
                var n = this.model[e].getDefaultPlayer(),
                    r = this.$el.find('[data-player-id="{0}"]'.format(n.playerId));
                r.click()
            }
        }
    });
    return r
}), define("views/MatchCentreStatsView", ["backbone", "views/BaseView"], function(e, t) {
    var n = t.extend({
        el: "#match-centre-stats",
        template: "match-centre-stats",
        defaults: {
            selectedStat: "ratings",
            mode: "team",
            teamRatings: []
        },
        events: {
            "click .match-centre-stat:not(.selected)": "statSelected",
            "click .match-centre-stat.selected": "showStatDetails",
            "click .close-stat-details": "closeStatDetails",
            'click .match-centre-stat[data-showing-details="true"]': "closeStatDetails",
            "click .match-centre-sub-stat": "subStatSelected"
        },
        initialize: function() {
            this.model.set("teamStatGroups", this.statGroups, {
                silent: !0
            }), this.model.set("playerStatGroups", _.union(this.statGroups, this.gkStatGroups), {
                silent: !0
            }), this.$el.bind("refresh", _.bind(function() {
                this.refresh()
            }, this))
        },
        refresh: function() {
            this.setMinuteRange(), this.refreshStats()
        },
        setMinuteRange: function() {
            this.maxMinute || (this.minMinute = 0, this.maxMinute = this.getMaxExpandedMinute())
        },
        getMaxExpandedMinute: function() {
            return Math.max(this.model.get("minuteExpanded"), this.model.get("expandedMaxMinute"))
        },
        onRender: function() {
            this.$setStats(), this.bindCustomEvents()
        },
        bindCustomEvents: function() {
            if (this.customEventsBound)
                return;
            this.$el.on("player-selected", _.bind(function(e, t, n) {
                n || (this.mode = "player"), this.playerSelected(t)
            }, this)), this.$el.on("match-centre-stat-changed", _.bind(function(e, t) {
                this.selectedStat = t, this.calculateStats()
            }, this)), this.$el.on("minutes-range-changed-for-stats", _.bind(function(e, t) {
                var n = t[0],
                    r = t[1];
                this.minMinute = Math.min(n.expandedMinute, r.expandedMinute), this.maxMinute = Math.max(n.expandedMinute, r.expandedMinute), this.model.get("expandedMaxMinute") == this.maxMinute && (this.maxMinute = this.getMaxExpandedMinute())
            }, this)), this.$el.on("team-mode-on", _.bind(function() {
                this.mode = "team", this.ensureModeStatIsSelected()
            }, this)), this.customEventsBound = !0
        },
        statSelected: function(e) {
            var t = $(e.currentTarget);
            if (t.is(".match-centre-sub-stat")) {
                this.$el.find(".match-centre-sub-stat").removeClass("selected"), t.addClass("selected");
                return
            }
            this.closeStatDetails();
            var n = t.attr("data-for");
            if (t.attr("data-showing-details"))
                return;
            this.$el.find(".match-centre-stat").removeClass("selected"), this.$el.find('[data-for="{0}"]'.format(n)).addClass("selected"), $("#match-centre").attr("data-selected-stat", n)
        },
        subStatSelected: function(e) {
            var t = $(e.currentTarget),
                n = t.attr("data-for");
            this.updateTopPlayersForStat(n, !0)
        },
        showStatDetails: function(e) {
            var t = $(e.currentTarget),
                n = $(e.target),
                r = t.attr("data-for");
            if (n.is(".close-stat-details"))
                return;
            if (t.is(".match-centre-sub-stat"))
                return;
            this.$el.addClass("showing-stat-details"), t.attr("data-showing-details", !0), this.$el.find('[data-detail-for="{0}"]'.format(r)).addClass("visible"), this.$el.find(".show-stat-details label").html("Less"), this.$el.find(".show-stat-details .ui-icon").attr("class", "ui-icon ui-icon-circle-arrow-n"), this.detailsAreShown = !0, this.updateTopPlayers()
        },
        closeStatDetails: function(e) {
            this.detailsAreShown = !1, this.$el.removeClass("showing-stat-details"), this.$el.find("[data-showing-details]").removeAttr("data-showing-details"), this.$el.find(".match-centre-stat-details.visible").removeClass("visible"), this.$el.find(".show-stat-details label").html("More"), this.$el.find(".show-stat-details .ui-icon").attr("class", "ui-icon ui-icon-circle-arrow-s")
        },
        checkTeamPossessions: function() {
            var e = this.model.home.get("stats"),
                t = this.model.away.get("stats"),
                n = e.possession,
                r = t.possession,
                i = _.first(_.keys(n)),
                s = _.first(_.keys(r)),
                o = _.last(_.keys(n)),
                u = _.last(_.keys(r)),
                a = Math.max(i, s),
                f = Math.max(o, u),
                l = [];
            for (var c = a; c <= f; c++) {
                var h = n[c],
                    p = r[c];
                h + p != 100 && l.push({
                    minute: c,
                    home: h,
                    away: p,
                    total: h + p
                })
            }
            for (c = 0; c < l.length; c++) {
                var d = l[c];
                console.log("{0}: {1} + {2} = {3}".format(c, d.home, d.away, d.total))
            }
        },
        checkPossessions: function() {
            this.checkTeamPossessions()
        },
        refreshStats: function() {
            this.calculateStats(), this.updateTeamStats(), this.ensureSelectedPlayersExists(), this.updatePlayerStats(this.selectedPlayers.home), this.updatePlayerStats(this.selectedPlayers.away), setTimeout(_.bind(function() {
                this.calculateTopPlayers(), this.updateTopPlayers()
            }, this), 0)
        },
        ensureSelectedPlayersExists: function() {
            this.selectedPlayers || (this.selectedPlayers = {
                home: this.model.home.getDefaultPlayer(),
                away: this.model.away.getDefaultPlayer()
            })
        },
        calculateStats: function() {
            var e = {};
            e = _.extend({}, e, this.calculatePlayerStatsForTeam(this.model.home)), e = _.extend({}, e, this.calculatePlayerStatsForTeam(this.model.away)), setTimeout(_.bind(function() {
                this.$el.trigger("player-stats-updated-from-stats", [{
                    name: this.selectedStat,
                    values: e
                }])
            }, this), 0)
        },
        updateTopPlayers: function() {
            setTimeout(_.bind(function() {
                if (!this.topPlayers)
                    return;
                for (var e in this.topPlayers)
                    this.updateTopPlayersForStat(e)
            }, this), 0)
        },
        updateTopPlayersForStat: function(e, t) {
            NG.renderDustTemplate("match-centre-top-players", {
                players: this.topPlayers[e]
            }, _.bind(function(n) {
                var r = e;
                if (t) {
                    var i = this.$el.find('.match-centre-stat[data-for="{0}"]'.format(e));
                    r = i.parents("[data-detail-for]").attr("data-detail-for")
                }
                var s = this.$el.find('[data-detail-for="{0}"] .top-players-for-stat'.format(r));
                s.each(function() {
                    $(this).html(n)
                })
            }, this))
        },
        calculateTopPlayers: function() {
            var e = {},
                t = _.union(this.model.home.get("players"), this.model.away.get("players"));
            return _.each(this.statGroups, _.bind(function(n) {
                e[n.key] = this.calculateTopPlayersForStat(n.key, t), _.each(n.stats, _.bind(function(n) {
                    e[n.key] = this.calculateTopPlayersForStat(n.key, t)
                }, this))
            }, this)), this.topPlayers = e, e
        },
        calculateTopPlayersForStat: function(e, t) {
            var n = {};
            return _.each(t, _.bind(function(t) {
                var r = t.stats[e];
                r && (n[t.playerId] = {
                    playerId: t.playerId,
                    field: t.field,
                    name: t.name,
                    position: t.position,
                    teamName: "home" == t.field ? this.model.home.get("name") : this.model.away.get("name"),
                    teamId: "home" == t.field ? this.model.home.get("teamId") : this.model.away.get("teamId"),
                    value: this.getRangeValueForStat(t.stats, e)
                })
            }, this)), _.take(_.sortBy(n, function(t) {
                return -t.value + ("ratings" == e ? t.isManOfTheMatch ? -1 : 0 : 0)
            }), 5)
        },
        setMinutesWithStats: function() {
            this.minutesWithStats = _.extend({}, _.invert(this.model.home.get("stats").minutesWithStats)), this.minutesWithStats = _.extend(this.minutesWithStats, _.invert(this.model.away.get("stats").minutesWithStats)), this.minutesWithStatsByKey = {}, this.setMinutesWithStatsByKeyForTeams(), this.setMinutesWithStatsByKeyForPlayers()
        },
        setMinutesWithStatsByKeyForPlayers: function() {
            this.setMinutesWithStatsByKeyForPlayersOfTeam(this.model.home), this.setMinutesWithStatsByKeyForPlayersOfTeam(this.model.away)
        },
        setMinutesWithStatsByKeyForPlayersOfTeam: function(e) {
            var t = e.get("players"),
                n = this;
            _.each(t, function(e) {
                var t = e.stats;
                t && n.setMinutesWithStatsByKeyForStatCollection([t])
            })
        },
        setMinutesWithStatsByKeyForTeams: function() {
            var e = [this.model.home.get("stats"), this.model.away.get("stats")];
            this.setMinutesWithStatsByKeyForStatCollection(e)
        },
        setMinutesWithStatsByKeyForStatCollection: function(e) {
            var t = {};
            for (var n = 0; n < e.length; n++)
                t = _.extend(t, _.keys(e[n]));
            for (var r = 0; r < Object.keys(t).length; r++) {
                var i = t[r];
                if ("minutesWithStats" == i)
                    continue;
                this.minutesWithStatsByKey[i] = {};
                for (var s = 0; s < e.length; s++) {
                    var o = e[s][i];
                    if (o) {
                        var u = _.keys(o);
                        for (var a = 0; a < Object.keys(u).length; a++)
                            this.minutesWithStatsByKey[i][u[a]] = 1
                    }
                }
            }
        },
        calculatePlayerStatsForTeam: function(e) {
            var t = {};
            return _.each(e.get("players"), _.bind(function(e) {
                if (e.stats) {
                    var n = this.getRangeValueForStat(e.stats, this.selectedStat);
                    n && (t[e.playerId] = n)
                }
            }, this)), t
        },
        playerSelected: function(e) {
            this.ensureModeStatIsSelected(), this.selectedPlayers[e.field] = e, this.updatePlayerStats(e), this.updateTopPlayers()
        },
        ensureModeStatIsSelected: function() {
            var e = this.$el.find('[data-mode="{0}"] .match-centre-stat [data-for="{1}"]', this.mode, this.selectedStat);
            0 == e.length && (e = this.$el.find('[data-mode="{0}"] .match-centre-stat', this.mode, this.selectedStat).first()), e.click(), this.detailsAreShown && e.click()
        },
        markGreaterStats: function(e) {
            var t = this.$el.find('.match-centre-stats[data-mode="{0}"] .match-centre-stat'.format(e)),
                n = this;
            t.each(function() {
                var e = $(this),
                    t = e.find('.match-centre-stat-value[data-field="home"]'),
                    r = e.find('.match-centre-stat-value[data-field="away"]'),
                    i = n.getStatValueFromElement(t),
                    s = n.getStatValueFromElement(r);
                t.removeClass("greater"), r.removeClass("greater"), s < i && t.addClass("greater"), i < s && r.addClass("greater")
            })
        },
        getStatValueFromElement: function(e) {
            var t = e.html();
            return isNaN(t) ? 0 : parseFloat(t)
        },
        updateTeamStats: function() {
            this.$el.find("[data-sum]").attr("data-sum", 0), this.updateTeamStatsForTeam(this.model.home), this.updateTeamStatsForTeam(this.model.away), this.markGreaterStats("team"), this.broadCastTeamRatings()
        },
        broadCastTeamRatings: function() {
            this.$el.trigger("team-rating-changed-from-stats", [this.teamRatings])
        },
        updateTeamStatsForTeam: function(e) {
            var t = e.get("stats"),
                n = e.get("field");
            this.updateComparisionStats(t, n, "team")
        },
        updatePlayerStats: function(e) {
            this.updateComparisionStats(e.stats, e.field, "player"), this.markGreaterStats("player")
        },
        $setStats: function() {
            this.$stats || (this.$stats = {
                team: this.$el.find('.match-centre-stats[data-mode="team"] .match-centre-stat'),
                player: this.$el.find('.match-centre-stats[data-mode="player"] .match-centre-stat')
            })
        },
        updateComparisionStats: function(e, t, n) {
            if (!e)
                return;
            this.resetStats(n, t);
            var r = this.$stats[n],
                i = this;
            r.each(function() {
                var r = $(this),
                    s = parseInt(r.attr("data-sum"), 10);
                s = isNaN(s) ? 0 : s;
                var o = r.attr("data-for"),
                    u = r.find("[data-field={0}]".format(t)),
                    a = i.getRangeValueForStat(e, o, 2);
                "ratings" == o && "team" == n && (i.teamRatings[t] = a), r.attr("data-sum", s + a), u.html(a).attr("data-value", a)
            })
        },
        resetStats: function(e, t) {
            $('[data-mode="{0}"] [data-field="{1}"]'.format(e, t)).html("")
        },
        getRangeValueForRatings: function(e, t) {
            if (!e)
                return null;
            var n = this.getClosestValueForMinuteForRating(e, this.minMinute),
                r = this.getClosestValueForMinuteForRating(e, this.maxMinute);
            if (n && r) {
                var i = 0 == this.minMinute ? 6 : n,
                    s = r,
                    o = s - i,
                    u = _.find(_.values(e), function(e) {
                        return 0 != e
                    });
                if (u) {
                    u = 6, t = t || 1;
                    var a = Math.min(10, u + o),
                        f = NG.roundNumberAsString(a, t);
                    return 10 != f ? f : 10
                }
            }
            return null
        },
        getClosestValueForMinuteForRating: function(e, t) {
            for (var n = t; 0 <= n; n--)
                if (e[n])
                    return e[n];
            for (var r = t; r <= this.maxMinute; r++)
                if (e[r])
                    return e[r];
            return null
        },
        getRangeValueForStat: function(e, t, n) {
            this.minutesWithStats || (this.setMinutesWithStats(), this.setMinuteRange());
            if (this.customStatCalculations[t])
                return _.bind(this.customStatCalculations[t], this)(e, n);
            var r = e[t];
            if (!r)
                return 0;
            var i = [],
                s = _.contains(this.averageStats, t);
            for (var o = this.minMinute; o <= this.maxMinute; o++)
                if (s && this.minutesWithStatsByKey[t][o] || !s) {
                    var u = r[o];
                    u ? i.push(u) : i.push(0)
                }
            var a = _.reduce(i, function(e, t) {
                    return e + t
                }, 0),
                f = 0;
            if (s) {
                var l = Object.keys(i).length;
                0 != l ? a /= parseFloat(l) : a = 0, f = NG.roundNumberAsString(a, 1)
            } else
                f = NG.roundNumber(a, 1);
            return f
        },
        averageStats: ["ratings", "possession", "passSuccess", "aerialSuccess", "cornerAccuracy", "throwInAccuracy", "tackleSuccess"],
        customStatCalculations: {
            ratings: function(e, t) {
                return this.getRangeValueForRatings(e.ratings, t)
            },
            dribbleSuccess: function(e) {
                var t = this.getRangeValueForStat(e, "dribblesAttempted"),
                    n = this.getRangeValueForStat(e, "dribblesWon");
                return NG.getPercentage(n, t)
            },
            passSuccess: function(e) {
                var t = this.getRangeValueForStat(e, "passesTotal"),
                    n = this.getRangeValueForStat(e, "passesAccurate");
                return NG.getPercentage(n, t)
            },
            aerialSuccess: function(e) {
                var t = this.getRangeValueForStat(e, "aerialsTotal"),
                    n = this.getRangeValueForStat(e, "aerialsWon");
                return NG.getPercentage(n, t)
            },
            cornerAccuracy: function(e) {
                var t = this.getRangeValueForStat(e, "cornersTotal"),
                    n = this.getRangeValueForStat(e, "cornersAccurate");
                return NG.getPercentage(n, t)
            },
            throwInAccuracy: function(e) {
                var t = this.getRangeValueForStat(e, "throwInsTotal"),
                    n = this.getRangeValueForStat(e, "throwInsAccurate");
                return NG.getPercentage(n, t)
            },
            tackleSuccess: function(e) {
                var t = this.getRangeValueForStat(e, "tacklesTotal"),
                    n = this.getRangeValueForStat(e, "tackleSuccessful");
                return NG.getPercentage(n, t)
            }
        },
        statGroups: [{
            displayName: "Ratings",
            key: "ratings"
        }, {
            displayName: "Total Shots",
            key: "shotsTotal",
            stats: [{
                displayName: "Total Shots",
                key: "shotsTotal"
            }, {
                displayName: "Woodwork",
                key: "shotsOnPost"
            }, {
                displayName: "Shots on target",
                key: "shotsOnTarget"
            }, {
                displayName: "Shots off target",
                key: "shotsOffTarget"
            }, {
                displayName: "Shots blocked",
                key: "shotsBlocked"
            }]
        }, {
            displayName: "Possession%",
            footNote: "Total Passes do not include crosses and keeper throws.",
            key: "possession",
            stats: [{
                displayName: "Possession%",
                key: "possession"
            }, {
                displayName: "Total passes",
                key: "passesTotal"
            }, {
                displayName: "Accurate passes",
                key: "passesAccurate"
            }, {
                displayName: "Pass Success%",
                key: "passSuccess",
                isPercentage: !0
            }]
        }, {
            displayName: "Dribbles",
            key: "dribblesWon",
            stats: [{
                displayName: "Dribbles Won",
                key: "dribblesWon"
            }, {
                displayName: "Dribbles attempted",
                key: "dribblesAttempted"
            }, {
                displayName: "Dribbled past",
                key: "dribbledPast"
            }, {
                displayName: "Dribble Success %",
                key: "dribbleSuccess",
                isPercentage: !0
            }]
        }, {
            displayName: "Aerials Won",
            key: "aerialsWon",
            stats: [{
                displayName: "Aerials Won",
                key: "aerialsWon"
            }, {
                displayName: "Aerials Won%",
                key: "aerialSuccess",
                isPercentage: !0
            }, {
                displayName: "Offensive Aerials",
                key: "offensiveAerials"
            }, {
                displayName: "Defensive Aerials",
                key: "defensiveAerials"
            }]
        }, {
            displayName: "Tackles",
            key: "tackleSuccessful",
            stats: [{
                displayName: "Successful Tackles",
                key: "tackleSuccessful"
            }, {
                displayName: "Tackles Attempted",
                key: "tacklesTotal"
            }, {
                displayName: "Was Dribbled",
                key: "tackleUnsuccesful"
            }, {
                displayName: "Tackle Success %",
                key: "tackleSuccess",
                isPercentage: !0
            }]
        }, {
            displayName: "Corners",
            key: "cornersAccurate",
            stats: [{
                displayName: "Corners",
                key: "cornersAccurate"
            }, {
                displayName: "Corner Accuracy%",
                key: "cornerAccuracy",
                isPercentage: !0
            }]
        }, {
            displayName: "Throw-ins",
            key: "throwInsTotal",
            stats: [{
                displayName: "Throw-ins",
                key: "throwInsTotal"
            }, {
                displayName: "Accurate Throw-ins",
                key: "throwInsAccurate"
            }, {
                displayName: "Throw-in Accuracy%",
                key: "throwInAccuracy",
                isPercentage: !0
            }]
        }, {
            displayName: "Offsides",
            key: "offsidesCaught"
        }, {
            displayName: "Fouls",
            key: "foulsCommited"
        }],
        gkStatGroups: [{
            displayName: "Saves",
            key: "totalSaves",
            stats: [{
                displayName: "Total saves",
                key: "totalSaves"
            }, {
                displayName: "Collected",
                key: "collected"
            }, {
                displayName: "Parried save",
                key: "parriedSafe"
            }, {
                displayName: "Parried danger",
                key: "parriedDanger"
            }, {
                displayName: "Goals Conceded",
                key: "goalsConceded"
            }]
        }, {
            displayName: "Claims",
            key: "claimsHigh"
        }]
    });
    return n
}),
    function() {
        function e(e, t) {
            var n;
            e || (e = {});
            for (n in t)
                e[n] = t[n];
            return e
        }

        function t() {
            var e, t = arguments,
                n, r = {},
                i = function(e, t) {
                    var n, r;
                    typeof e != "object" && (e = {});
                    for (r in t)
                        t.hasOwnProperty(r) && (n = t[r], e[r] = n && typeof n == "object" && Object.prototype.toString.call(n) !== "[object Array]" && typeof n.nodeType != "number" ? i(e[r] || {}, n) : t[r]);
                    return e
                };
            t[0] === !0 && (r = t[1], t = Array.prototype.slice.call(t, 2)), n = t.length;
            for (e = 0; e < n; e++)
                r = i(r, t[e]);
            return r
        }

        function n(e, t) {
            return parseInt(e, t || 10)
        }

        function r(e) {
            return typeof e == "string"
        }

        function i(e) {
            return typeof e == "object"
        }

        function s(e) {
            return Object.prototype.toString.call(e) === "[object Array]"
        }

        function o(e) {
            return typeof e == "number"
        }

        function u(e) {
            return U.log(e) / U.LN10
        }

        function a(e) {
            return U.pow(10, e)
        }

        function f(e, t) {
            for (var n = e.length; n--;)
                if (e[n] === t) {
                    e.splice(n, 1);
                    break
                }
        }

        function l(e) {
            return e !== I && e !== null
        }

        function c(e, t, n) {
            var s, o;
            if (r(t))
                l(n) ? e.setAttribute(t, n) : e && e.getAttribute && (o = e.getAttribute(t));
            else if (l(t) && i(t))
                for (s in t)
                    e.setAttribute(s, t[s]);
            return o
        }

        function h(e) {
            return s(e) ? e : [e]
        }

        function p() {
            var e = arguments,
                t, n, r = e.length;
            for (t = 0; t < r; t++)
                if (n = e[t], typeof n != "undefined" && n !== null)
                    return n
        }

        function d(t, n) {
            tt && n && n.opacity !== I && (n.filter = "alpha(opacity=" + n.opacity * 100 + ")"), e(t.style, n)
        }

        function v(t, n, r, i, s) {
            return t = q.createElement(t), n && e(t, n), s && d(t, {
                padding: 0,
                border: xt,
                margin: 0
            }), r && d(t, r), i && i.appendChild(t), t
        }

        function m(t, n) {
            var r = function() {};
            return r.prototype = new t, e(r.prototype, n), r
        }

        function g(e, t, r, i) {
            var s = vt.lang,
                e = +e || 0,
                o = t === -1 ? (e.toString().split(".")[1] || "").length : isNaN(t = J(t)) ? 2 : t,
                t = r === void 0 ? s.decimalPoint : r,
                i = i === void 0 ? s.thousandsSep : i,
                s = e < 0 ? "-" : "",
                r = String(n(e = J(e).toFixed(o))),
                u = r.length > 3 ? r.length % 3 : 0;
            return s + (u ? r.substr(0, u) + i : "") + r.substr(u).replace(/(\d{3})(?=\d)/g, "$1" + i) + (o ? t + J(e - r).toFixed(o).slice(2) : "")
        }

        function y(e, t) {
            return Array((t || 2) + 1 - String(e).length).join(0) + e
        }

        function b(e, t, n) {
            var r = e[t];
            e[t] = function() {
                var e = Array.prototype.slice.call(arguments);
                return e.unshift(r), n.apply(this, e)
            }
        }

        function w(e, t) {
            for (var n = "{", r = !1, i, s, o, u, a, f = [];
                 (n = e.indexOf(n)) !== -1;) {
                i = e.slice(0, n);
                if (r) {
                    s = i.split(":"), o = s.shift().split("."), a = o.length, i = t;
                    for (u = 0; u < a; u++)
                        i = i[o[u]];
                    s.length && (s = s.join(":"), o = /\.([0-9])/, u = vt.lang, a = void 0, /f$/.test(s) ? (a = (a = s.match(o)) ? a[1] : -1, i = g(i, a, u.decimalPoint, s.indexOf(",") > -1 ? u.thousandsSep : "")) : i = mt(s, i))
                }
                f.push(i), e = e.slice(n + 1), n = (r = !r) ? "}" : "{"
            }
            return f.push(e), f.join("")
        }

        function E(e) {
            return U.pow(10, W(U.log(e) / U.LN10))
        }

        function S(e, t, n, r) {
            var i, n = p(n, 1);
            i = e / n, t || (t = [1, 2, 2.5, 5, 10], r && r.allowDecimals === !1 && (n === 1 ? t = [1, 2, 5, 10] : n <= .1 && (t = [1 / n])));
            for (r = 0; r < t.length; r++)
                if (e = t[r], i <= (t[r] + (t[r + 1] || t[r])) / 2)
                    break;
            return e *= n, e
        }

        function x() {
            this.symbol = this.color = 0
        }

        function T(e, t) {
            var n = e.length,
                r, i;
            for (i = 0; i < n; i++)
                e[i].ss_i = i;
            e.sort(function(e, n) {
                return r = t(e, n), r === 0 ? e.ss_i - n.ss_i : r
            });
            for (i = 0; i < n; i++)
                delete e[i].ss_i
        }

        function N(e) {
            for (var t = e.length, n = e[0]; t--;)
                e[t] < n && (n = e[t]);
            return n
        }

        function C(e) {
            for (var t = e.length, n = e[0]; t--;)
                e[t] > n && (n = e[t]);
            return n
        }

        function k(e, t) {
            for (var n in e)
                e[n] && e[n] !== t && e[n].destroy && e[n].destroy(), delete e[n]
        }

        function L(e) {
            dt || (dt = v(St)), e && dt.appendChild(e), dt.innerHTML = ""
        }

        function A(e, t) {
            var n = "Highcharts error #" + e + ": www.highcharts.com/errors/" + e;
            if (t)
                throw n;
            R.console && console.log(n)
        }

        function O(e) {
            return parseFloat(e.toPrecision(14))
        }

        function M(e, t) {
            gt = p(e, t.animation)
        }

        function _() {
            var e = vt.global.useUTC,
                t = e ? "getUTC" : "get",
                n = e ? "setUTC" : "set";
            Lt = (e && vt.global.timezoneOffset || 0) * 6e4, kt = e ? Date.UTC : function(e, t, n, r, i, s) {
                return (new Date(e, t, p(n, 1), p(r, 0), p(i, 0), p(s, 0))).getTime()
            }, At = t + "Minutes", Ot = t + "Hours", Mt = t + "Day", _t = t + "Date", Dt = t + "Month", Pt = t + "FullYear", Ht = n + "Minutes", Bt = n + "Hours", jt = n + "Date", Ft = n + "Month", It = n + "FullYear"
        }

        function D() {}

        function P(e, t, n, r) {
            this.axis = e, this.pos = t, this.type = n || "", this.isNew = !0, !n && !r && this.addLabel()
        }

        function H() {
            this.init.apply(this, arguments)
        }

        function B(e, t, n, r, i, s) {
            var o = e.chart.inverted;
            this.axis = e, this.isNegative = n, this.options = t, this.x = r, this.total = null, this.points = {}, this.stack = i, this.percent = s === "percent", this.alignOptions = {
                align: t.align || (o ? n ? "left" : "right" : "center"),
                verticalAlign: t.verticalAlign || (o ? "middle" : n ? "bottom" : "top"),
                y: p(t.y, o ? 4 : n ? 14 : -6),
                x: p(t.x, o ? n ? -6 : 6 : 0)
            }, this.textAlign = t.textAlign || (o ? n ? "right" : "left" : "center")
        }

        function j() {
            this.init.apply(this, arguments)
        }

        function F() {
            this.init.apply(this, arguments)
        }

        var I, q = document,
            R = window,
            U = Math,
            z = U.round,
            W = U.floor,
            X = U.ceil,
            V = U.max,
            $ = U.min,
            J = U.abs,
            K = U.cos,
            Q = U.sin,
            G = U.PI,
            Y = G * 2 / 360,
            Z = navigator.userAgent,
            et = R.opera,
            tt = /msie/i.test(Z) && !et,
            nt = q.documentMode === 8,
            rt = /AppleWebKit/.test(Z),
            it = /Firefox/.test(Z),
            st = /(Mobile|Android|Windows Phone)/.test(Z),
            ot = "http://www.w3.org/2000/svg",
            ut = !!q.createElementNS && !!q.createElementNS(ot, "svg").createSVGRect,
            at = it && parseInt(Z.split("Firefox/")[1], 10) < 4,
            ft = !ut && !tt && !!q.createElement("canvas").getContext,
            lt, ct = q.documentElement.ontouchstart !== I,
            ht = {},
            pt = 0,
            dt, vt, mt, gt, yt, bt, wt = function() {},
            Et = [],
            St = "div",
            xt = "none",
            Tt = /^[0-9]+$/,
            Nt = "rgba(192,192,192," + (ut ? 1e-4 : .002) + ")",
            Ct = "stroke-width",
            kt, Lt, At, Ot, Mt, _t, Dt, Pt, Ht, Bt, jt, Ft, It, qt = {};
        R.Highcharts = R.Highcharts ? A(16, !0) : {}, mt = function(t, n, r) {
            if (!l(n) || isNaN(n))
                return "Invalid date";
            var t = p(t, "%Y-%m-%d %H:%M:%S"),
                i = new Date(n - Lt),
                s, o = i[Ot](),
                u = i[Mt](),
                a = i[_t](),
                f = i[Dt](),
                c = i[Pt](),
                h = vt.lang,
                d = h.weekdays,
                i = e({
                    a: d[u].substr(0, 3),
                    A: d[u],
                    d: y(a),
                    e: a,
                    b: h.shortMonths[f],
                    B: h.months[f],
                    m: y(f + 1),
                    y: c.toString().substr(2, 2),
                    Y: c,
                    H: y(o),
                    I: y(o % 12 || 12),
                    l: o % 12 || 12,
                    M: y(i[At]()),
                    p: o < 12 ? "AM" : "PM",
                    P: o < 12 ? "am" : "pm",
                    S: y(i.getSeconds()),
                    L: y(z(n % 1e3), 3)
                }, Highcharts.dateFormats);
            for (s in i)
                for (; t.indexOf("%" + s) !== -1;)
                    t = t.replace("%" + s, typeof i[s] == "function" ? i[s](n) : i[s]);
            return r ? t.substr(0, 1).toUpperCase() + t.substr(1) : t
        }, x.prototype = {
            wrapColor: function(e) {
                this.color >= e && (this.color = 0)
            },
            wrapSymbol: function(e) {
                this.symbol >= e && (this.symbol = 0)
            }
        }, bt = function() {
            for (var e = 0, t = arguments, n = t.length, r = {}; e < n; e++)
                r[t[e++]] = t[e];
            return r
        }("millisecond", 1, "second", 1e3, "minute", 6e4, "hour", 36e5, "day", 864e5, "week", 6048e5, "month", 26784e5, "year", 31556952e3), yt = {
            init: function(e, t, n) {
                var t = t || "",
                    r = e.shift,
                    i = t.indexOf("C") > -1,
                    s = i ? 7 : 3,
                    o, t = t.split(" "),
                    n = [].concat(n),
                    u, a, f = function(e) {
                        for (o = e.length; o--;)
                            e[o] === "M" && e.splice(o + 1, 0, e[o + 1], e[o + 2], e[o + 1], e[o + 2])
                    };
                i && (f(t), f(n)), e.isArea && (u = t.splice(t.length - 6, 6), a = n.splice(n.length - 6, 6));
                if (r <= n.length / s && t.length === n.length)
                    for (; r--;)
                        n = [].concat(n).splice(0, s).concat(n);
                e.shift = 0;
                if (t.length)
                    for (e = n.length; t.length < e;)
                        r = [].concat(t).splice(t.length - s, s), i && (r[s - 6] = r[s - 2], r[s - 5] = r[s - 1]), t = t.concat(r);
                return u && (t = t.concat(u), n = n.concat(a)), [t, n]
            },
            step: function(e, t, n, r) {
                var i = [],
                    s = e.length;
                if (n === 1)
                    i = r;
                else if (s === t.length && n < 1)
                    for (; s--;)
                        r = parseFloat(e[s]), i[s] = isNaN(r) ? e[s] : n * parseFloat(t[s] - r) + r;
                else
                    i = t;
                return i
            }
        },
            function(t) {
                R.HighchartsAdapter = R.HighchartsAdapter || t && {
                    init: function(e) {
                        var n = t.fx,
                            i = n.step,
                            s, o = t.Tween,
                            u = o && o.propHooks;
                        s = t.cssHooks.opacity, t.extend(t.easing, {
                            easeOutQuad: function(e, t, n, r, i) {
                                return -r * (t /= i) * (t - 2) + n
                            }
                        }), t.each(["cur", "_default", "width", "height", "opacity"], function(e, t) {
                            var r = i,
                                s;
                            t === "cur" ? r = n.prototype : t === "_default" && o && (r = u[t], t = "set"), (s = r[t]) && (r[t] = function(n) {
                                var r, n = e ? n : this;
                                if (n.prop !== "align")
                                    return r = n.elem, r.attr ? r.attr(n.prop, t === "cur" ? I : n.now) : s.apply(this, arguments)
                            })
                        }), b(s, "get", function(e, t, n) {
                            return t.attr ? t.opacity || 0 : e.call(this, t, n)
                        }), s = function(t) {
                            var n = t.elem,
                                r;
                            t.started || (r = e.init(n, n.d, n.toD), t.start = r[0], t.end = r[1], t.started = !0), n.attr("d", e.step(t.start, t.end, t.pos, n.toD))
                        }, o ? u.d = {
                            set: s
                        } : i.d = s, this.each = Array.prototype.forEach ? function(e, t) {
                            return Array.prototype.forEach.call(e, t)
                        } : function(e, t) {
                            for (var n = 0, r = e.length; n < r; n++)
                                if (t.call(e[n], e[n], n, e) === !1)
                                    return n
                        }, t.fn.highcharts = function() {
                            var e = "Chart",
                                t = arguments,
                                n, i;
                            return r(t[0]) && (e = t[0], t = Array.prototype.slice.call(t, 1)), n = t[0], n !== I && (n.chart = n.chart || {}, n.chart.renderTo = this[0], new Highcharts[e](n, t[1]), i = this), n === I && (i = Et[c(this[0], "data-highcharts-chart")]), i
                        }
                    },
                    getScript: t.getScript,
                    inArray: t.inArray,
                    adapterRun: function(e, n) {
                        return t(e)[n]()
                    },
                    grep: t.grep,
                    map: function(e, t) {
                        for (var n = [], r = 0, i = e.length; r < i; r++)
                            n[r] = t.call(e[r], e[r], r, e);
                        return n
                    },
                    offset: function(e) {
                        return t(e).offset()
                    },
                    addEvent: function(e, n, r) {
                        t(e).bind(n, r)
                    },
                    removeEvent: function(e, n, r) {
                        var i = q.removeEventListener ? "removeEventListener" : "detachEvent";
                        q[i] && e && !e[i] && (e[i] = function() {}), t(e).unbind(n, r)
                    },
                    fireEvent: function(n, r, i, s) {
                        var o = t.Event(r),
                            u = "detached" + r,
                            a;
                        !tt && i && (delete i.layerX, delete i.layerY), e(o, i), n[r] && (n[u] = n[r], n[r] = null), t.each(["preventDefault", "stopPropagation"], function(e, t) {
                            var n = o[t];
                            o[t] = function() {
                                try {
                                    n.call(o)
                                } catch (e) {
                                    t === "preventDefault" && (a = !0)
                                }
                            }
                        }), t(n).trigger(o), n[u] && (n[r] = n[u], n[u] = null), s && !o.isDefaultPrevented() && !a && s(o)
                    },
                    washMouseEvent: function(e) {
                        var t = e.originalEvent || e;
                        return t.pageX === I && (t.pageX = e.pageX, t.pageY = e.pageY), t
                    },
                    animate: function(e, n, r) {
                        var i = t(e);
                        e.style || (e.style = {}), n.d && (e.toD = n.d, n.d = 1), i.stop(), n.opacity !== I && e.attr && (n.opacity += "px"), i.animate(n, r)
                    },
                    stop: function(e) {
                        t(e).stop()
                    }
                }
            }(R.jQuery);
        var Rt = R.HighchartsAdapter,
            Ut = Rt || {};
        Rt && Rt.init.call(Rt, yt);
        var zt = Ut.adapterRun,
            Wt = Ut.getScript,
            Xt = Ut.inArray,
            Vt = Ut.each,
            $t = Ut.grep,
            Jt = Ut.offset,
            Kt = Ut.map,
            Qt = Ut.addEvent,
            Gt = Ut.removeEvent,
            Yt = Ut.fireEvent,
            Zt = Ut.washMouseEvent,
            en = Ut.animate,
            tn = Ut.stop,
            Ut = {
                enabled: !0,
                x: 0,
                y: 15,
                style: {
                    color: "#666",
                    cursor: "default",
                    fontSize: "11px"
                }
            };
        vt = {
            colors: "#2f7ed8,#0d233a,#8bbc21,#910000,#1aadce,#492970,#f28f43,#77a1e5,#c42525,#a6c96a".split(","),
            symbols: ["circle", "diamond", "square", "triangle", "triangle-down"],
            lang: {
                loading: "Loading...",
                months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
                shortMonths: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
                weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
                decimalPoint: ".",
                numericSymbols: "k,M,G,T,P,E".split(","),
                resetZoom: "Reset zoom",
                resetZoomTitle: "Reset zoom level 1:1",
                thousandsSep: ","
            },
            global: {
                useUTC: !0,
                canvasToolsURL: "http://code.highcharts.com/3.0.9/modules/canvas-tools.js",
                VMLRadialGradientURL: "http://code.highcharts.com/3.0.9/gfx/vml-radial-gradient.png"
            },
            chart: {
                borderColor: "#4572A7",
                borderRadius: 5,
                defaultSeriesType: "line",
                ignoreHiddenSeries: !0,
                spacing: [10, 10, 15, 10],
                style: {
                    fontFamily: '"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif',
                    fontSize: "12px"
                },
                backgroundColor: "#FFFFFF",
                plotBorderColor: "#C0C0C0",
                resetZoomButton: {
                    theme: {
                        zIndex: 20
                    },
                    position: {
                        align: "right",
                        x: -10,
                        y: 10
                    }
                }
            },
            title: {
                text: "Chart title",
                align: "center",
                margin: 15,
                style: {
                    color: "#274b6d",
                    fontSize: "16px"
                }
            },
            subtitle: {
                text: "",
                align: "center",
                style: {
                    color: "#4d759e"
                }
            },
            plotOptions: {
                line: {
                    allowPointSelect: !1,
                    showCheckbox: !1,
                    animation: {
                        duration: 1e3
                    },
                    events: {},
                    lineWidth: 2,
                    marker: {
                        enabled: !0,
                        lineWidth: 0,
                        radius: 4,
                        lineColor: "#FFFFFF",
                        states: {
                            hover: {
                                enabled: !0
                            },
                            select: {
                                fillColor: "#FFFFFF",
                                lineColor: "#000000",
                                lineWidth: 2
                            }
                        }
                    },
                    point: {
                        events: {}
                    },
                    dataLabels: t(Ut, {
                        align: "center",
                        enabled: !1,
                        formatter: function() {
                            return this.y === null ? "" : g(this.y, -1)
                        },
                        verticalAlign: "bottom",
                        y: 0
                    }),
                    cropThreshold: 300,
                    pointRange: 0,
                    states: {
                        hover: {
                            marker: {}
                        },
                        select: {
                            marker: {}
                        }
                    },
                    stickyTracking: !0,
                    turboThreshold: 1e3
                }
            },
            labels: {
                style: {
                    position: "absolute",
                    color: "#3E576F"
                }
            },
            legend: {
                enabled: !0,
                align: "center",
                layout: "horizontal",
                labelFormatter: function() {
                    return this.name
                },
                borderWidth: 1,
                borderColor: "#909090",
                borderRadius: 5,
                navigation: {
                    activeColor: "#274b6d",
                    inactiveColor: "#CCC"
                },
                shadow: !1,
                itemStyle: {
                    cursor: "pointer",
                    color: "#274b6d",
                    fontSize: "12px"
                },
                itemHoverStyle: {
                    color: "#000"
                },
                itemHiddenStyle: {
                    color: "#CCC"
                },
                itemCheckboxStyle: {
                    position: "absolute",
                    width: "13px",
                    height: "13px"
                },
                symbolPadding: 5,
                verticalAlign: "bottom",
                x: 0,
                y: 0,
                title: {
                    style: {
                        fontWeight: "bold"
                    }
                }
            },
            loading: {
                labelStyle: {
                    fontWeight: "bold",
                    position: "relative",
                    top: "1em"
                },
                style: {
                    position: "absolute",
                    backgroundColor: "white",
                    opacity: .5,
                    textAlign: "center"
                }
            },
            tooltip: {
                enabled: !0,
                animation: ut,
                backgroundColor: "rgba(255, 255, 255, .85)",
                borderWidth: 1,
                borderRadius: 3,
                dateTimeLabelFormats: {
                    millisecond: "%A, %b %e, %H:%M:%S.%L",
                    second: "%A, %b %e, %H:%M:%S",
                    minute: "%A, %b %e, %H:%M",
                    hour: "%A, %b %e, %H:%M",
                    day: "%A, %b %e, %Y",
                    week: "Week from %A, %b %e, %Y",
                    month: "%B %Y",
                    year: "%Y"
                },
                headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
                pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b><br/>',
                shadow: !0,
                snap: st ? 25 : 10,
                style: {
                    color: "#333333",
                    cursor: "default",
                    fontSize: "12px",
                    padding: "8px",
                    whiteSpace: "nowrap"
                }
            },
            credits: {
                enabled: !0,
                text: "Highcharts.com",
                href: "http://www.highcharts.com",
                position: {
                    align: "right",
                    x: -10,
                    verticalAlign: "bottom",
                    y: -5
                },
                style: {
                    cursor: "pointer",
                    color: "#909090",
                    fontSize: "9px"
                }
            }
        };
        var nn = vt.plotOptions,
            Rt = nn.line;
        _();
        var rn = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/,
            sn = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/,
            on = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/,
            un = function(e) {
                var r = [],
                    i, s;
                return function(e) {
                    e && e.stops ? s = Kt(e.stops, function(e) {
                        return un(e[1])
                    }) : (i = rn.exec(e)) ? r = [n(i[1]), n(i[2]), n(i[3]), parseFloat(i[4], 10)] : (i = sn.exec(e)) ? r = [n(i[1], 16), n(i[2], 16), n(i[3], 16), 1] : (i = on.exec(e)) && (r = [n(i[1]), n(i[2]), n(i[3]), 1])
                }(e), {
                    get: function(n) {
                        var i;
                        return s ? (i = t(e), i.stops = [].concat(i.stops), Vt(s, function(e, t) {
                            i.stops[t] = [i.stops[t][0], e.get(n)]
                        })) : i = r && !isNaN(r[0]) ? n === "rgb" ? "rgb(" + r[0] + "," + r[1] + "," + r[2] + ")" : n === "a" ? r[3] : "rgba(" + r.join(",") + ")" : e, i
                    },
                    brighten: function(e) {
                        if (s)
                            Vt(s, function(t) {
                                t.brighten(e)
                            });
                        else if (o(e) && e !== 0) {
                            var t;
                            for (t = 0; t < 3; t++)
                                r[t] += n(e * 255), r[t] < 0 && (r[t] = 0), r[t] > 255 && (r[t] = 255)
                        }
                        return this
                    },
                    rgba: r,
                    setOpacity: function(e) {
                        return r[3] = e, this
                    }
                }
            };
        D.prototype = {
            init: function(e, t) {
                this.element = t === "span" ? v(t) : q.createElementNS(ot, t), this.renderer = e, this.attrSetters = {}
            },
            opacity: 1,
            animate: function(e, n, r) {
                n = p(n, gt, !0), tn(this), n ? (n = t(n), r && (n.complete = r), en(this, e, n)) : (this.attr(e), r && r())
            },
            attr: function(e, t) {
                var i, s, o, u, a = this.element,
                    f = a.nodeName.toLowerCase(),
                    h = this.renderer,
                    d, v = this.attrSetters,
                    m = this.shadows,
                    g, y, b = this;
                r(e) && l(t) && (i = e, e = {}, e[i] = t);
                if (r(e))
                    i = e, f === "circle" ? i = {
                        x: "cx",
                        y: "cy"
                    }[i] || i : i === "strokeWidth" && (i = "stroke-width"), b = c(a, i) || this[i] || 0, i !== "d" && i !== "visibility" && i !== "fill" && (b = parseFloat(b));
                else {
                    for (i in e)
                        if (d = !1, s = e[i], o = v[i] && v[i].call(this, s, i), o !== !1) {
                            o !== I && (s = o);
                            if (i === "d")
                                s && s.join && (s = s.join(" ")), /(NaN| {2}|^$)/.test(s) && (s = "M 0 0");
                            else if (i === "x" && f === "text")
                                for (o = 0; o < a.childNodes.length; o++)
                                    u = a.childNodes[o], c(u, "x") === c(a, "x") && c(u, "x", s);
                            else if (!this.rotation || i !== "x" && i !== "y")
                                if (i === "fill")
                                    s = h.color(s, a, i);
                                else if (f !== "circle" || i !== "x" && i !== "y")
                                    if (f === "rect" && i === "r")
                                        c(a, {
                                            rx: s,
                                            ry: s
                                        }), d = !0;
                                    else if (i === "translateX" || i === "translateY" || i === "rotation" || i === "verticalAlign" || i === "scaleX" || i === "scaleY")
                                        d = y = !0;
                                    else if (i === "stroke")
                                        s = h.color(s, a, i);
                                    else if (i === "dashstyle") {
                                        if (i = "stroke-dasharray", s = s && s.toLowerCase(), s === "solid")
                                            s = xt;
                                        else if (s) {
                                            s = s.replace("shortdashdotdot", "3,1,1,1,1,1,").replace("shortdashdot", "3,1,1,1").replace("shortdot", "1,1,").replace("shortdash", "3,1,").replace("longdash", "8,3,").replace(/dot/g, "1,3,").replace("dash", "4,3,").replace(/,$/, "").split(",");
                                            for (o = s.length; o--;)
                                                s[o] = n(s[o]) * p(e["stroke-width"], this["stroke-width"]);
                                            s = s.join(",")
                                        }
                                    } else
                                        i === "width" ? s = n(s) : i === "align" ? (i = "text-anchor", s = {
                                            left: "start",
                                            center: "middle",
                                            right: "end"
                                        }[s]) : i === "title" && (o = a.getElementsByTagName("title")[0], o || (o = q.createElementNS(ot, "title"), a.appendChild(o)), o.textContent = s);
                                else
                                    i = {
                                        x: "cx",
                                        y: "cy"
                                    }[i] || i;
                            else
                                y = !0;
                            i === "strokeWidth" && (i = "stroke-width");
                            if (i === "stroke-width" || i === "stroke")
                                this[i] = s, this.stroke && this["stroke-width"] ? (c(a, "stroke", this.stroke), c(a, "stroke-width", this["stroke-width"]), this.hasStroke = !0) : i === "stroke-width" && s === 0 && this.hasStroke && (a.removeAttribute("stroke"), this.hasStroke = !1), d = !0;
                            this.symbolName && /^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(i) && (g || (this.symbolAttr(e), g = !0), d = !0);
                            if (m && /^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(i))
                                for (o = m.length; o--;)
                                    c(m[o], i, i === "height" ? V(s - (m[o].cutHeight || 0), 0) : s);
                            (i === "width" || i === "height") && f === "rect" && s < 0 && (s = 0), this[i] = s, i === "text" ? (s !== this.textStr && delete this.bBox, this.textStr = s, this.added && h.buildText(this)) : d || c(a, i, s)
                        }
                    y && this.updateTransform()
                }
                return b
            },
            addClass: function(e) {
                var t = this.element,
                    n = c(t, "class") || "";
                return n.indexOf(e) === -1 && c(t, "class", n + " " + e), this
            },
            symbolAttr: function(e) {
                var t = this;
                Vt("x,y,r,start,end,width,height,innerR,anchorX,anchorY".split(","), function(n) {
                    t[n] = p(e[n], t[n])
                }), t.attr({
                    d: t.renderer.symbols[t.symbolName](t.x, t.y, t.width, t.height, t)
                })
            },
            clip: function(e) {
                return this.attr("clip-path", e ? "url(" + this.renderer.url + "#" + e.id + ")" : xt)
            },
            crisp: function(e, t, n, r, i) {
                var s, o = {},
                    u = {},
                    a, e = e || this.strokeWidth || this.attr && this.attr("stroke-width") || 0;
                a = z(e) % 2 / 2, u.x = W(t || this.x || 0) + a, u.y = W(n || this.y || 0) + a, u.width = W((r || this.width || 0) - 2 * a), u.height = W((i || this.height || 0) - 2 * a), u.strokeWidth = e;
                for (s in u)
                    this[s] !== u[s] && (this[s] = o[s] = u[s]);
                return o
            },
            css: function(t) {
                var r = this.element,
                    i = this.textWidth = t && t.width && r.nodeName.toLowerCase() === "text" && n(t.width),
                    s, o = "",
                    u = function(e, t) {
                        return "-" + t.toLowerCase()
                    };
                t && t.color && (t.fill = t.color), this.styles = t = e(this.styles, t), i && delete t.width;
                if (tt && !ut)
                    d(this.element, t);
                else {
                    for (s in t)
                        o += s.replace(/([A-Z])/g, u) + ":" + t[s] + ";";
                    c(r, "style", o)
                }
                return i && this.added && this.renderer.buildText(this), this
            },
            on: function(e, t) {
                var n = this,
                    r = n.element;
                return ct && e === "click" ? (r.ontouchstart = function(e) {
                    n.touchEventFired = Date.now(), e.preventDefault(), t.call(r, e)
                }, r.onclick = function(e) {
                    (Z.indexOf("Android") === -1 || Date.now() - (n.touchEventFired || 0) > 1100) && t.call(r, e)
                }) : r["on" + e] = t, this
            },
            setRadialReference: function(e) {
                return this.element.radialReference = e, this
            },
            translate: function(e, t) {
                return this.attr({
                    translateX: e,
                    translateY: t
                })
            },
            invert: function() {
                return this.inverted = !0, this.updateTransform(), this
            },
            updateTransform: function() {
                var e = this.translateX || 0,
                    t = this.translateY || 0,
                    n = this.scaleX,
                    r = this.scaleY,
                    i = this.inverted,
                    s = this.rotation;
                i && (e += this.attr("width"), t += this.attr("height")), e = ["translate(" + e + "," + t + ")"], i ? e.push("rotate(90) scale(-1,1)") : s && e.push("rotate(" + s + " " + (this.x || 0) + " " + (this.y || 0) + ")"), (l(n) || l(r)) && e.push("scale(" + p(n, 1) + " " + p(r, 1) + ")"), e.length && c(this.element, "transform", e.join(" "))
            },
            toFront: function() {
                var e = this.element;
                return e.parentNode.appendChild(e), this
            },
            align: function(e, t, n) {
                var i, s, o, u, a = {};
                s = this.renderer, o = s.alignedObjects;
                if (e) {
                    if (this.alignOptions = e, this.alignByTranslate = t, !n || r(n))
                        this.alignTo = i = n || "renderer", f(o, this), o.push(this), n = null
                } else
                    e = this.alignOptions, t = this.alignByTranslate, i = this.alignTo;
                n = p(n, s[i], s), i = e.align, s = e.verticalAlign, o = (n.x || 0) + (e.x || 0), u = (n.y || 0) + (e.y || 0);
                if (i === "right" || i === "center")
                    o += (n.width - (e.width || 0)) / {
                        right: 1,
                        center: 2
                    }[i];
                a[t ? "translateX" : "x"] = z(o);
                if (s === "bottom" || s === "middle")
                    u += (n.height - (e.height || 0)) / ({
                        bottom: 1,
                        middle: 2
                    }[s] || 1);
                return a[t ? "translateY" : "y"] = z(u), this[this.placed ? "animate" : "attr"](a), this.placed = !0, this.alignAttr = a, this
            },
            getBBox: function() {
                var t = this.bBox,
                    n = this.renderer,
                    r, i, s = this.rotation;
                r = this.element;
                var o = this.styles,
                    u = s * Y;
                i = this.textStr;
                var a;
                if (i === "" || Tt.test(i))
                    a = i.length + "|" + o.fontSize + "|" + o.fontFamily, t = n.cache[a];
                if (!t) {
                    if (r.namespaceURI === ot || n.forExport) {
                        try {
                            t = r.getBBox ? e({}, r.getBBox()) : {
                                width: r.offsetWidth,
                                height: r.offsetHeight
                            }
                        } catch (f) {}
                        if (!t || t.width < 0)
                            t = {
                                width: 0,
                                height: 0
                            }
                    } else
                        t = this.htmlGetBBox();
                    n.isSVG && (r = t.width, i = t.height, tt && o && o.fontSize === "11px" && i.toPrecision(3) === "16.9" && (t.height = i = 14), s && (t.width = J(i * Q(u)) + J(r * K(u)), t.height = J(i * K(u)) + J(r * Q(u)))), this.bBox = t, a && (n.cache[a] = t)
                }
                return t
            },
            show: function() {
                return this.attr({
                    visibility: "visible"
                })
            },
            hide: function() {
                return this.attr({
                    visibility: "hidden"
                })
            },
            fadeOut: function(e) {
                var t = this;
                t.animate({
                    opacity: 0
                }, {
                    duration: e || 150,
                    complete: function() {
                        t.hide()
                    }
                })
            },
            add: function(e) {
                var t = this.renderer,
                    r = e || t,
                    i = r.element || t.box,
                    s = i.childNodes,
                    o = this.element,
                    u = c(o, "zIndex"),
                    a;
                e && (this.parentGroup = e), this.parentInverted = e && e.inverted, this.textStr !== void 0 && t.buildText(this), u && (r.handleZ = !0, u = n(u));
                if (r.handleZ)
                    for (r = 0; r < s.length; r++)
                        if (e = s[r], t = c(e, "zIndex"), e !== o && (n(t) > u || !l(u) && l(t))) {
                            i.insertBefore(o, e), a = !0;
                            break
                        }
                return a || i.appendChild(o), this.added = !0, Yt(this, "add"), this
            },
            safeRemoveChild: function(e) {
                var t = e.parentNode;
                t && t.removeChild(e)
            },
            destroy: function() {
                var e = this,
                    t = e.element || {},
                    n = e.shadows,
                    r = e.renderer.isSVG && t.nodeName === "SPAN" && e.parentGroup,
                    i, s;
                t.onclick = t.onmouseout = t.onmouseover = t.onmousemove = t.point = null, tn(e), e.clipPath && (e.clipPath = e.clipPath.destroy());
                if (e.stops) {
                    for (s = 0; s < e.stops.length; s++)
                        e.stops[s] = e.stops[s].destroy();
                    e.stops = null
                }
                e.safeRemoveChild(t);
                for (n && Vt(n, function(t) {
                    e.safeRemoveChild(t)
                }); r && r.div.childNodes.length === 0;)
                    t = r.parentGroup, e.safeRemoveChild(r.div), delete r.div, r = t;
                e.alignTo && f(e.renderer.alignedObjects, e);
                for (i in e)
                    delete e[i];
                return null
            },
            shadow: function(e, t, n) {
                var r = [],
                    i, s, o = this.element,
                    u, a, f, l;
                if (e) {
                    a = p(e.width, 3), f = (e.opacity || .15) / a, l = this.parentInverted ? "(-1,-1)" : "(" + p(e.offsetX, 1) + ", " + p(e.offsetY, 1) + ")";
                    for (i = 1; i <= a; i++)
                        s = o.cloneNode(0), u = a * 2 + 1 - 2 * i, c(s, {
                            isShadow: "true",
                            stroke: e.color || "black",
                            "stroke-opacity": f * i,
                            "stroke-width": u,
                            transform: "translate" + l,
                            fill: xt
                        }), n && (c(s, "height", V(c(s, "height") - u, 0)), s.cutHeight = u), t ? t.element.appendChild(s) : o.parentNode.insertBefore(s, o), r.push(s);
                    this.shadows = r
                }
                return this
            }
        };
        var an = function() {
            this.init.apply(this, arguments)
        };
        an.prototype = {
            Element: D,
            init: function(e, t, n, r) {
                var i = location,
                    s, o;
                s = this.createElement("svg").attr({
                    version: "1.1"
                }), o = s.element, e.appendChild(o), e.innerHTML.indexOf("xmlns") === -1 && c(o, "xmlns", ot), this.isSVG = !0, this.box = o, this.boxWrapper = s, this.alignedObjects = [], this.url = (it || rt) && q.getElementsByTagName("base").length ? i.href.replace(/#.*?$/, "").replace(/([\('\)])/g, "\\$1").replace(/ /g, "%20") : "", this.createElement("desc").add().element.appendChild(q.createTextNode("Created with Highcharts 3.0.9")), this.defs = this.createElement("defs").add(), this.forExport = r, this.gradients = {}, this.cache = {}, this.setSize(t, n, !1);
                var u;
                it && e.getBoundingClientRect && (this.subPixelFix = t = function() {
                    d(e, {
                        left: 0,
                        top: 0
                    }), u = e.getBoundingClientRect(), d(e, {
                        left: X(u.left) - u.left + "px",
                        top: X(u.top) - u.top + "px"
                    })
                }, t(), Qt(R, "resize", t))
            },
            isHidden: function() {
                return !this.boxWrapper.getBBox().width
            },
            destroy: function() {
                var e = this.defs;
                return this.box = null, this.boxWrapper = this.boxWrapper.destroy(), k(this.gradients || {}), this.gradients = null, e && (this.defs = e.destroy()), this.subPixelFix && Gt(R, "resize", this.subPixelFix), this.alignedObjects = null
            },
            createElement: function(e) {
                var t = new this.Element;
                return t.init(this, e), t
            },
            draw: function() {},
            buildText: function(e) {
                for (var t = e.element, r = this, i = r.forExport, s = p(e.textStr, "").toString().replace(/<(b|strong)>/g, '<span style="font-weight:bold">').replace(/<(i|em)>/g, '<span style="font-style:italic">').replace(/<a/g, "<span").replace(/<\/(b|strong|i|em|a)>/g, "</span>").split(/<br.*?>/g), o = t.childNodes, u = /style="([^"]+)"/, a = /href="(http[^"]+)"/, f = c(t, "x"), l = e.styles, h = e.textWidth, v = l && l.lineHeight, m = o.length, g = function(e) {
                    return v ? n(v) : r.fontMetrics(/px$/.test(e && e.style.fontSize) ? e.style.fontSize : l.fontSize || 11).h
                }; m--;)
                    t.removeChild(o[m]);
                h && !e.added && this.box.appendChild(t), s[s.length - 1] === "" && s.pop(), Vt(s, function(n, s) {
                    var o, p = 0,
                        n = n.replace(/<span/g, "|||<span").replace(/<\/span>/g, "</span>|||");
                    o = n.split("|||"), Vt(o, function(n) {
                        if (n !== "" || o.length === 1) {
                            var v = {},
                                m = q.createElementNS(ot, "tspan"),
                                y;
                            u.test(n) && (y = n.match(u)[1].replace(/(;| |^)color([ :])/, "$1fill$2"), c(m, "style", y)), a.test(n) && !i && (c(m, "onclick", 'location.href="' + n.match(a)[1] + '"'), d(m, {
                                cursor: "pointer"
                            })), n = (n.replace(/<(.|\n)*?>/g, "") || " ").replace(/&lt;/g, "<").replace(/&gt;/g, ">");
                            if (n !== " " && (m.appendChild(q.createTextNode(n)), p ? v.dx = 0 : v.x = f, c(m, v), !p && s && (!ut && i && d(m, {
                                    display: "block"
                                }), c(m, "dy", g(m), rt && m.offsetHeight)), t.appendChild(m), p++, h))
                                for (var n = n.replace(/([^\^])-/g, "$1- ").split(" "), v = n.length > 1 && l.whiteSpace !== "nowrap", b, w, E = e._clipHeight, S = [], x = g(), T = 1; v && (n.length || S.length);)
                                    delete e.bBox, b = e.getBBox(), w = b.width, !ut && r.forExport && (w = r.measureSpanWidth(m.firstChild.data, e.styles)), b = w > h, !b || n.length === 1 ? (n = S, S = [], n.length && (T++, E && T * x > E ? (n = ["..."], e.attr("title", e.textStr)) : (m = q.createElementNS(ot, "tspan"), c(m, {
                                        dy: x,
                                        x: f
                                    }), y && c(m, "style", y), t.appendChild(m), w > h && (h = w)))) : (m.removeChild(m.firstChild), S.unshift(n.pop())), n.length && m.appendChild(q.createTextNode(n.join(" ").replace(/- /g, "-")))
                        }
                    })
                })
            },
            button: function(n, r, i, s, o, u, a, f, l) {
                var c = this.label(n, r, i, l, null, null, null, null, "button"),
                    h = 0,
                    p, d, v, m, g, y, n = {
                        x1: 0,
                        y1: 0,
                        x2: 0,
                        y2: 1
                    },
                    o = t({
                        "stroke-width": 1,
                        stroke: "#CCCCCC",
                        fill: {
                            linearGradient: n,
                            stops: [
                                [0, "#FEFEFE"],
                                [1, "#F6F6F6"]
                            ]
                        },
                        r: 2,
                        padding: 5,
                        style: {
                            color: "black"
                        }
                    }, o);
                return v = o.style, delete o.style, u = t(o, {
                    stroke: "#68A",
                    fill: {
                        linearGradient: n,
                        stops: [
                            [0, "#FFF"],
                            [1, "#ACF"]
                        ]
                    }
                }, u), m = u.style, delete u.style, a = t(o, {
                    stroke: "#68A",
                    fill: {
                        linearGradient: n,
                        stops: [
                            [0, "#9BD"],
                            [1, "#CDF"]
                        ]
                    }
                }, a), g = a.style, delete a.style, f = t(o, {
                    style: {
                        color: "#CCC"
                    }
                }, f), y = f.style, delete f.style, Qt(c.element, tt ? "mouseover" : "mouseenter", function() {
                    h !== 3 && c.attr(u).css(m)
                }), Qt(c.element, tt ? "mouseout" : "mouseleave", function() {
                    h !== 3 && (p = [o, u, a][h], d = [v, m, g][h], c.attr(p).css(d))
                }), c.setState = function(e) {
                    (c.state = h = e) ? e === 2 ? c.attr(a).css(g) : e === 3 && c.attr(f).css(y): c.attr(o).css(v)
                }, c.on("click", function() {
                    h !== 3 && s.call(c)
                }).attr(o).css(e({
                    cursor: "default"
                }, v))
            },
            crispLine: function(e, t) {
                return e[1] === e[4] && (e[1] = e[4] = z(e[1]) - t % 2 / 2), e[2] === e[5] && (e[2] = e[5] = z(e[2]) + t % 2 / 2), e
            },
            path: function(t) {
                var n = {
                    fill: xt
                };
                return s(t) ? n.d = t : i(t) && e(n, t), this.createElement("path").attr(n)
            },
            circle: function(e, t, n) {
                return e = i(e) ? e : {
                    x: e,
                    y: t,
                    r: n
                }, this.createElement("circle").attr(e)
            },
            arc: function(e, t, n, r, s, o) {
                return i(e) && (t = e.y, n = e.r, r = e.innerR, s = e.start, o = e.end, e = e.x), e = this.symbol("arc", e || 0, t || 0, n || 0, n || 0, {
                    innerR: r || 0,
                    start: s || 0,
                    end: o || 0
                }), e.r = n, e
            },
            rect: function(e, t, n, r, s, o) {
                return s = i(e) ? e.r : s, s = this.createElement("rect").attr({
                    rx: s,
                    ry: s,
                    fill: xt
                }), s.attr(i(e) ? e : s.crisp(o, e, t, V(n, 0), V(r, 0)))
            },
            setSize: function(e, t, n) {
                var r = this.alignedObjects,
                    i = r.length;
                this.width = e, this.height = t;
                for (this.boxWrapper[p(n, !0) ? "animate" : "attr"]({
                    width: e,
                    height: t
                }); i--;)
                    r[i].align()
            },
            g: function(e) {
                var t = this.createElement("g");
                return l(e) ? t.attr({
                    "class": "highcharts-" + e
                }) : t
            },
            image: function(t, n, r, i, s) {
                var o = {
                    preserveAspectRatio: xt
                };
                return arguments.length > 1 && e(o, {
                    x: n,
                    y: r,
                    width: i,
                    height: s
                }), o = this.createElement("image").attr(o), o.element.setAttributeNS ? o.element.setAttributeNS("http://www.w3.org/1999/xlink", "href", t) : o.element.setAttribute("hc-svg-href", t), o
            },
            symbol: function(t, n, r, i, s, o) {
                var u, a = this.symbols[t],
                    a = a && a(z(n), z(r), i, s, o),
                    f = /^url\((.*?)\)$/,
                    l, c;
                return a ? (u = this.path(a), e(u, {
                    symbolName: t,
                    x: n,
                    y: r,
                    width: i,
                    height: s
                }), o && e(u, o)) : f.test(t) && (c = function(e, t) {
                    e.element && (e.attr({
                        width: t[0],
                        height: t[1]
                    }), e.alignByTranslate || e.translate(z((i - t[0]) / 2), z((s - t[1]) / 2)))
                }, l = t.match(f)[1], t = ht[l], u = this.image(l).attr({
                    x: n,
                    y: r
                }), u.isImg = !0, t ? c(u, t) : (u.attr({
                    width: 0,
                    height: 0
                }), v("img", {
                    onload: function() {
                        c(u, ht[l] = [this.width, this.height])
                    },
                    src: l
                }))), u
            },
            symbols: {
                circle: function(e, t, n, r) {
                    var i = .166 * n;
                    return ["M", e + n / 2, t, "C", e + n + i, t, e + n + i, t + r, e + n / 2, t + r, "C", e - i, t + r, e - i, t, e + n / 2, t, "Z"]
                },
                square: function(e, t, n, r) {
                    return ["M", e, t, "L", e + n, t, e + n, t + r, e, t + r, "Z"]
                },
                triangle: function(e, t, n, r) {
                    return ["M", e + n / 2, t, "L", e + n, t + r, e, t + r, "Z"]
                },
                "triangle-down": function(e, t, n, r) {
                    return ["M", e, t, "L", e + n, t, e + n / 2, t + r, "Z"]
                },
                diamond: function(e, t, n, r) {
                    return ["M", e + n / 2, t, "L", e + n, t + r / 2, e + n / 2, t + r, e, t + r / 2, "Z"]
                },
                arc: function(e, t, n, r, i) {
                    var s = i.start,
                        n = i.r || n || r,
                        o = i.end - .001,
                        r = i.innerR,
                        u = i.open,
                        a = K(s),
                        f = Q(s),
                        l = K(o),
                        o = Q(o),
                        i = i.end - s < G ? 0 : 1;
                    return ["M", e + n * a, t + n * f, "A", n, n, 0, i, 1, e + n * l, t + n * o, u ? "M" : "L", e + r * l, t + r * o, "A", r, r, 0, i, 0, e + r * a, t + r * f, u ? "" : "Z"]
                }
            },
            clipRect: function(e, t, n, r) {
                var i = "highcharts-" + pt++,
                    s = this.createElement("clipPath").attr({
                        id: i
                    }).add(this.defs),
                    e = this.rect(e, t, n, r, 0).add(s);
                return e.id = i, e.clipPath = s, e
            },
            color: function(e, n, r) {
                var i = this,
                    o, u = /^rgba/,
                    a, f, h, p, d, v, m, g = [];
                e && e.linearGradient ? a = "linearGradient" : e && e.radialGradient && (a = "radialGradient");
                if (a) {
                    r = e[a], f = i.gradients, p = e.stops, n = n.radialReference, s(r) && (e[a] = r = {
                        x1: r[0],
                        y1: r[1],
                        x2: r[2],
                        y2: r[3],
                        gradientUnits: "userSpaceOnUse"
                    }), a === "radialGradient" && n && !l(r.gradientUnits) && (r = t(r, {
                        cx: n[0] - n[2] / 2 + r.cx * n[2],
                        cy: n[1] - n[2] / 2 + r.cy * n[2],
                        r: r.r * n[2],
                        gradientUnits: "userSpaceOnUse"
                    }));
                    for (m in r)
                        m !== "id" && g.push(m, r[m]);
                    for (m in p)
                        g.push(p[m]);
                    return g = g.join(","), f[g] ? e = f[g].id : (r.id = e = "highcharts-" + pt++, f[g] = h = i.createElement(a).attr(r).add(i.defs), h.stops = [], Vt(p, function(e) {
                        u.test(e[1]) ? (o = un(e[1]), d = o.get("rgb"), v = o.get("a")) : (d = e[1], v = 1), e = i.createElement("stop").attr({
                            offset: e[0],
                            "stop-color": d,
                            "stop-opacity": v
                        }).add(h), h.stops.push(e)
                    })), "url(" + i.url + "#" + e + ")"
                }
                return u.test(e) ? (o = un(e), c(n, r + "-opacity", o.get("a")), o.get("rgb")) : (n.removeAttribute(r + "-opacity"), e)
            },
            text: function(e, t, n, r) {
                var i = vt.chart.style,
                    s = ft || !ut && this.forExport;
                return r && !this.forExport ? this.html(e, t, n) : (t = z(p(t, 0)), n = z(p(n, 0)), e = this.createElement("text").attr({
                    x: t,
                    y: n,
                    text: e
                }).css({
                    fontFamily: i.fontFamily,
                    fontSize: i.fontSize
                }), s && e.css({
                    position: "absolute"
                }), e.x = t, e.y = n, e)
            },
            fontMetrics: function(e) {
                var e = n(e || 11),
                    e = e < 24 ? e + 4 : z(e * 1.2),
                    t = z(e * .8);
                return {
                    h: e,
                    b: t
                }
            },
            label: function(n, r, i, s, o, u, a, f, c) {
                function h() {
                    var e, n;
                    e = y.element.style, w = (T === void 0 || N === void 0 || g.styles.textAlign) && y.getBBox(), g.width = (T || w.width || 0) + 2 * S + x, g.height = (N || w.height || 0) + 2 * S, O = S + m.fontMetrics(e && e.fontSize).b, M && (b || (e = z(-E * S), n = f ? -O : 0, g.box = b = s ? m.symbol(s, e, n, g.width, g.height, A) : m.rect(e, n, g.width, g.height, 0, A[Ct]), b.add(g)), b.isImg || b.attr(t({
                        width: g.width,
                        height: g.height
                    }, A)), A = null)
                }

                function p() {
                    var e = g.styles,
                        e = e && e.textAlign,
                        t = x + S * (1 - E),
                        n;
                    n = f ? 0 : O, l(T) && (e === "center" || e === "right") && (t += {
                        center: .5,
                        right: 1
                    }[e] * (T - w.width)), (t !== y.x || n !== y.y) && y.attr({
                        x: t,
                        y: n
                    }), y.x = t, y.y = n
                }

                function d(e, t) {
                    b ? b.attr(e, t) : A[e] = t
                }

                function v() {
                    y.add(g), g.attr({
                        text: n,
                        x: r,
                        y: i
                    }), b && l(o) && g.attr({
                        anchorX: o,
                        anchorY: u
                    })
                }

                var m = this,
                    g = m.g(c),
                    y = m.text("", 0, 0, a).attr({
                        zIndex: 1
                    }),
                    b, w, E = 0,
                    S = 3,
                    x = 0,
                    T, N, C, k, L = 0,
                    A = {},
                    O, a = g.attrSetters,
                    M;
                Qt(g, "add", v), a.width = function(e) {
                    return T = e, !1
                }, a.height = function(e) {
                    return N = e, !1
                }, a.padding = function(e) {
                    return l(e) && e !== S && (S = e, p()), !1
                }, a.paddingLeft = function(e) {
                    return l(e) && e !== x && (x = e, p()), !1
                }, a.align = function(e) {
                    return E = {
                        left: 0,
                        center: .5,
                        right: 1
                    }[e], !1
                }, a.text = function(e, t) {
                    return y.attr(t, e), h(), p(), !1
                }, a[Ct] = function(e, t) {
                    return M = !0, L = e % 2 / 2, d(t, e), !1
                }, a.stroke = a.fill = a.r = function(e, t) {
                    return t === "fill" && (M = !0), d(t, e), !1
                }, a.anchorX = function(e, t) {
                    return o = e, d(t, e + L - C), !1
                }, a.anchorY = function(e, t) {
                    return u = e, d(t, e - k), !1
                }, a.x = function(e) {
                    return g.x = e, e -= E * ((T || w.width) + S), C = z(e), g.attr("translateX", C), !1
                }, a.y = function(e) {
                    return k = g.y = z(e), g.attr("translateY", k), !1
                };
                var _ = g.css;
                return e(g, {
                    css: function(e) {
                        if (e) {
                            var n = {},
                                e = t(e);
                            Vt("fontSize,fontWeight,fontFamily,color,lineHeight,width,textDecoration,textShadow".split(","), function(t) {
                                e[t] !== I && (n[t] = e[t], delete e[t])
                            }), y.css(n)
                        }
                        return _.call(g, e)
                    },
                    getBBox: function() {
                        return {
                            width: w.width + 2 * S,
                            height: w.height + 2 * S,
                            x: w.x - S,
                            y: w.y - S
                        }
                    },
                    shadow: function(e) {
                        return b && b.shadow(e), g
                    },
                    destroy: function() {
                        Gt(g, "add", v), Gt(g.element, "mouseenter"), Gt(g.element, "mouseleave"), y && (y = y.destroy()), b && (b = b.destroy()), D.prototype.destroy.call(g), g = m = h = p = d = v = null
                    }
                })
            }
        }, lt = an, e(D.prototype, {
            htmlCss: function(t) {
                var n = this.element;
                if (n = t && n.tagName === "SPAN" && t.width)
                    delete t.width, this.textWidth = n, this.updateTransform();
                return this.styles = e(this.styles, t), d(this.element, t), this
            },
            htmlGetBBox: function() {
                var e = this.element,
                    t = this.bBox;
                return t || (e.nodeName === "text" && (e.style.position = "absolute"), t = this.bBox = {
                    x: e.offsetLeft,
                    y: e.offsetTop,
                    width: e.offsetWidth,
                    height: e.offsetHeight
                }), t
            },
            htmlUpdateTransform: function() {
                if (this.added) {
                    var e = this.renderer,
                        t = this.element,
                        r = this.translateX || 0,
                        i = this.translateY || 0,
                        s = this.x || 0,
                        o = this.y || 0,
                        u = this.textAlign || "left",
                        a = {
                            left: 0,
                            center: .5,
                            right: 1
                        }[u],
                        f = this.shadows;
                    d(t, {
                        marginLeft: r,
                        marginTop: i
                    }), f && Vt(f, function(e) {
                        d(e, {
                            marginLeft: r + 1,
                            marginTop: i + 1
                        })
                    }), this.inverted && Vt(t.childNodes, function(n) {
                        e.invertChild(n, t)
                    });
                    if (t.tagName === "SPAN") {
                        var c = this.rotation,
                            h, v = n(this.textWidth),
                            m = [c, u, t.innerHTML, this.textWidth].join(",");
                        m !== this.cTT && (h = e.fontMetrics(t.style.fontSize).b, l(c) && this.setSpanRotation(c, a, h), f = p(this.elemWidth, t.offsetWidth), f > v && /[ \-]/.test(t.textContent || t.innerText) && (d(t, {
                            width: v + "px",
                            display: "block",
                            whiteSpace: "normal"
                        }), f = v), this.getSpanCorrection(f, h, a, c, u)), d(t, {
                            left: s + (this.xCorr || 0) + "px",
                            top: o + (this.yCorr || 0) + "px"
                        }), rt && (h = t.offsetHeight), this.cTT = m
                    }
                } else
                    this.alignOnAdd = !0
            },
            setSpanRotation: function(e, t, n) {
                var r = {},
                    i = tt ? "-ms-transform" : rt ? "-webkit-transform" : it ? "MozTransform" : et ? "-o-transform" : "";
                r[i] = r.transform = "rotate(" + e + "deg)", r[i + (it ? "Origin" : "-origin")] = t * 100 + "% " + n + "px", d(this.element, r)
            },
            getSpanCorrection: function(e, t, n) {
                this.xCorr = -e * n, this.yCorr = -t
            }
        }), e(an.prototype, {
            html: function(t, n, r) {
                var i = vt.chart.style,
                    s = this.createElement("span"),
                    o = s.attrSetters,
                    u = s.element,
                    a = s.renderer;
                return o.text = function(e) {
                    return e !== u.innerHTML && delete this.bBox, u.innerHTML = e, !1
                }, o.x = o.y = o.align = o.rotation = function(e, t) {
                    return t === "align" && (t = "textAlign"), s[t] = e, s.htmlUpdateTransform(), !1
                }, s.attr({
                    text: t,
                    x: z(n),
                    y: z(r)
                }).css({
                    position: "absolute",
                    whiteSpace: "nowrap",
                    fontFamily: i.fontFamily,
                    fontSize: i.fontSize
                }), s.css = s.htmlCss, a.isSVG && (s.add = function(t) {
                    var n, r = a.box.parentNode,
                        i = [];
                    if (this.parentGroup = t) {
                        if (n = t.div, !n) {
                            for (; t;)
                                i.push(t), t = t.parentGroup;
                            Vt(i.reverse(), function(t) {
                                var i;
                                n = t.div = t.div || v(St, {
                                    className: c(t.element, "class")
                                }, {
                                    position: "absolute",
                                    left: (t.translateX || 0) + "px",
                                    top: (t.translateY || 0) + "px"
                                }, n || r), i = n.style, e(t.attrSetters, {
                                    translateX: function(e) {
                                        i.left = e + "px"
                                    },
                                    translateY: function(e) {
                                        i.top = e + "px"
                                    },
                                    visibility: function(e, t) {
                                        i[t] = e
                                    }
                                })
                            })
                        }
                    } else
                        n = r;
                    return n.appendChild(u), s.added = !0, s.alignOnAdd && s.htmlUpdateTransform(), s
                }), s
            }
        });
        var fn;
        if (!ut && !ft) {
            Highcharts.VMLElement = fn = {
                init: function(e, t) {
                    var n = ["<", t, ' filled="f" stroked="f"'],
                        r = ["position: ", "absolute", ";"],
                        i = t === St;
                    (t === "shape" || i) && r.push("left:0;top:0;width:1px;height:1px;"), r.push("visibility: ", i ? "hidden" : "visible"), n.push(' style="', r.join(""), '"/>'), t && (n = i || t === "span" || t === "img" ? n.join("") : e.prepVML(n), this.element = v(n)), this.renderer = e, this.attrSetters = {}
                },
                add: function(e) {
                    var t = this.renderer,
                        n = this.element,
                        r = t.box,
                        r = e ? e.element || e : r;
                    return e && e.inverted && t.invertChild(n, r), r.appendChild(n), this.added = !0, this.alignOnAdd && !this.deferUpdateTransform && this.updateTransform(), Yt(this, "add"), this
                },
                updateTransform: D.prototype.htmlUpdateTransform,
                setSpanRotation: function() {
                    var e = this.rotation,
                        t = K(e * Y),
                        n = Q(e * Y);
                    d(this.element, {
                        filter: e ? ["progid:DXImageTransform.Microsoft.Matrix(M11=", t, ", M12=", -n, ", M21=", n, ", M22=", t, ", sizingMethod='auto expand')"].join("") : xt
                    })
                },
                getSpanCorrection: function(e, t, n, r, i) {
                    var s = r ? K(r * Y) : 1,
                        o = r ? Q(r * Y) : 0,
                        u = p(this.elemHeight, this.element.offsetHeight),
                        a;
                    this.xCorr = s < 0 && -e, this.yCorr = o < 0 && -u, a = s * o < 0, this.xCorr += o * t * (a ? 1 - n : n), this.yCorr -= s * t * (r ? a ? n : 1 - n : 1), i && i !== "left" && (this.xCorr -= e * n * (s < 0 ? -1 : 1), r && (this.yCorr -= u * n * (o < 0 ? -1 : 1)), d(this.element, {
                        textAlign: i
                    }))
                },
                pathToVML: function(e) {
                    for (var t = e.length, n = []; t--;)
                        if (o(e[t]))
                            n[t] = z(e[t] * 10) - 5;
                        else if (e[t] === "Z")
                            n[t] = "x";
                        else if (n[t] = e[t], e.isArc && (e[t] === "wa" || e[t] === "at"))
                            n[t + 5] === n[t + 7] && (n[t + 7] += e[t + 7] > e[t + 5] ? 1 : -1), n[t + 6] === n[t + 8] && (n[t + 8] += e[t + 8] > e[t + 6] ? 1 : -1);
                    return n.join(" ") || "x"
                },
                attr: function(e, t) {
                    var n, i, s, u = this.element || {},
                        a = u.style,
                        f = u.nodeName,
                        h = this.renderer,
                        p = this.symbolName,
                        d, m = this.shadows,
                        g, y = this.attrSetters,
                        b = this;
                    r(e) && l(t) && (n = e, e = {}, e[n] = t);
                    if (r(e))
                        n = e, b = n === "strokeWidth" || n === "stroke-width" ? this.strokeweight : this[n];
                    else
                        for (n in e)
                            if (i = e[n], g = !1, s = y[n] && y[n].call(this, i, n), s !== !1 && i !== null) {
                                s !== I && (i = s);
                                if (p && /^(x|y|r|start|end|width|height|innerR|anchorX|anchorY)/.test(n))
                                    d || (this.symbolAttr(e), d = !0), g = !0;
                                else if (n === "d") {
                                    i = i || [], this.d = i.join(" "), u.path = i = this.pathToVML(i);
                                    if (m)
                                        for (s = m.length; s--;)
                                            m[s].path = m[s].cutOff ? this.cutOffPath(i, m[s].cutOff) : i;
                                    g = !0
                                } else if (n === "visibility") {
                                    if (m)
                                        for (s = m.length; s--;)
                                            m[s].style[n] = i;
                                    f === "DIV" && (i = i === "hidden" ? "-999em" : 0, nt || (a[n] = i ? "visible" : "hidden"), n = "top"), a[n] = i, g = !0
                                } else if (n === "zIndex")
                                    i && (a[n] = i), g = !0;
                                else if (Xt(n, ["x", "y", "width", "height"]) !== -1)
                                    this[n] = i, n === "x" || n === "y" ? n = {
                                        x: "left",
                                        y: "top"
                                    }[n] : i = V(0, i), this.updateClipping ? (this[n] = i, this.updateClipping()) : a[n] = i, g = !0;
                                else if (n === "class" && f === "DIV")
                                    u.className = i;
                                else if (n === "stroke")
                                    i = h.color(i, u, n), n = "strokecolor";
                                else if (n === "stroke-width" || n === "strokeWidth")
                                    u.stroked = i ? !0 : !1, n = "strokeweight", this[n] = i, o(i) && (i += "px");
                                else if (n === "dashstyle")
                                    (u.getElementsByTagName("stroke")[0] || v(h.prepVML(["<stroke/>"]), null, null, u))[n] = i || "solid", this.dashstyle = i, g = !0;
                                else if (n === "fill")
                                    f === "SPAN" ? a.color = i : f !== "IMG" && (u.filled = i !== xt ? !0 : !1, i = h.color(i, u, n, this), n = "fillcolor");
                                else if (n === "opacity")
                                    g = !0;
                                else if (f === "shape" && n === "rotation")
                                    this[n] = u.style[n] = i, u.style.left = -z(Q(i * Y) + 1) + "px", u.style.top = z(K(i * Y)) + "px";
                                else if (n === "translateX" || n === "translateY" || n === "rotation")
                                    this[n] = i, this.updateTransform(), g = !0;
                                g || (nt ? u[n] = i : c(u, n, i))
                            }
                    return b
                },
                clip: function(e) {
                    var t = this,
                        n;
                    return e ? (n = e.members, f(n, t), n.push(t), t.destroyClip = function() {
                        f(n, t)
                    }, e = e.getCSS(t)) : (t.destroyClip && t.destroyClip(), e = {
                        clip: nt ? "inherit" : "rect(auto)"
                    }), t.css(e)
                },
                css: D.prototype.htmlCss,
                safeRemoveChild: function(e) {
                    e.parentNode && L(e)
                },
                destroy: function() {
                    return this.destroyClip && this.destroyClip(), D.prototype.destroy.apply(this)
                },
                on: function(e, t) {
                    return this.element["on" + e] = function() {
                        var e = R.event;
                        e.target = e.srcElement, t(e)
                    }, this
                },
                cutOffPath: function(e, t) {
                    var r, e = e.split(/[ ,]/);
                    r = e.length;
                    if (r === 9 || r === 11)
                        e[r - 4] = e[r - 2] = n(e[r - 2]) - 10 * t;
                    return e.join(" ")
                },
                shadow: function(e, t, r) {
                    var i = [],
                        s, o = this.element,
                        u = this.renderer,
                        a, f = o.style,
                        l, c = o.path,
                        h, d, m, g;
                    c && typeof c.value != "string" && (c = "x"), d = c;
                    if (e) {
                        m = p(e.width, 3), g = (e.opacity || .15) / m;
                        for (s = 1; s <= 3; s++)
                            h = m * 2 + 1 - 2 * s, r && (d = this.cutOffPath(c.value, h + .5)), l = ['<shape isShadow="true" strokeweight="', h, '" filled="false" path="', d, '" coordsize="10 10" style="', o.style.cssText, '" />'], a = v(u.prepVML(l), null, {
                                left: n(f.left) + p(e.offsetX, 1),
                                top: n(f.top) + p(e.offsetY, 1)
                            }), r && (a.cutOff = h + 1), l = ['<stroke color="', e.color || "black", '" opacity="', g * s, '"/>'], v(u.prepVML(l), null, null, a), t ? t.element.appendChild(a) : o.parentNode.insertBefore(a, o), i.push(a);
                        this.shadows = i
                    }
                    return this
                }
            }, fn = m(D, fn);
            var ln = {
                Element: fn,
                isIE8: Z.indexOf("MSIE 8.0") > -1,
                init: function(e, t, n) {
                    var r, i;
                    this.alignedObjects = [], r = this.createElement(St), i = r.element, i.style.position = "relative", e.appendChild(r.element), this.isVML = !0, this.box = i, this.boxWrapper = r, this.cache = {}, this.setSize(t, n, !1);
                    if (!q.namespaces.hcv) {
                        q.namespaces.add("hcv", "urn:schemas-microsoft-com:vml");
                        try {
                            q.createStyleSheet().cssText = "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "
                        } catch (s) {
                            q.styleSheets[0].cssText += "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "
                        }
                    }
                },
                isHidden: function() {
                    return !this.box.offsetWidth
                },
                clipRect: function(t, n, r, s) {
                    var o = this.createElement(),
                        u = i(t);
                    return e(o, {
                        members: [],
                        left: (u ? t.x : t) + 1,
                        top: (u ? t.y : n) + 1,
                        width: (u ? t.width : r) - 1,
                        height: (u ? t.height : s) - 1,
                        getCSS: function(t) {
                            var n = t.element,
                                r = n.nodeName,
                                t = t.inverted,
                                i = this.top - (r === "shape" ? n.offsetTop : 0),
                                s = this.left,
                                n = s + this.width,
                                o = i + this.height,
                                i = {
                                    clip: "rect(" + z(t ? s : i) + "px," + z(t ? o : n) + "px," + z(t ? n : o) + "px," + z(t ? i : s) + "px)"
                                };
                            return !t && nt && r === "DIV" && e(i, {
                                width: n + "px",
                                height: o + "px"
                            }), i
                        },
                        updateClipping: function() {
                            Vt(o.members, function(e) {
                                e.css(o.getCSS(e))
                            })
                        }
                    })
                },
                color: function(e, t, n, r) {
                    var i = this,
                        s, o = /^rgba/,
                        u, a, f = xt;
                    e && e.linearGradient ? a = "gradient" : e && e.radialGradient && (a = "pattern");
                    if (a) {
                        var l, c, h = e.linearGradient || e.radialGradient,
                            p, d, m, g, y, b = "",
                            e = e.stops,
                            w, E = [],
                            S = function() {
                                u = ['<fill colors="' + E.join(",") + '" opacity="', m, '" o:opacity2="', d, '" type="', a, '" ', b, 'focus="100%" method="any" />'], v(i.prepVML(u), null, null, t)
                            };
                        p = e[0], w = e[e.length - 1], p[0] > 0 && e.unshift([0, p[1]]), w[0] < 1 && e.push([1, w[1]]), Vt(e, function(e, t) {
                            o.test(e[1]) ? (s = un(e[1]), l = s.get("rgb"), c = s.get("a")) : (l = e[1], c = 1), E.push(e[0] * 100 + "% " + l), t ? (m = c, g = l) : (d = c, y = l)
                        });
                        if (n === "fill")
                            if (a === "gradient")
                                n = h.x1 || h[0] || 0, e = h.y1 || h[1] || 0, p = h.x2 || h[2] || 0, h = h.y2 || h[3] || 0, b = 'angle="' + (90 - U.atan((h - e) / (p - n)) * 180 / G) + '"', S();
                            else {
                                var f = h.r,
                                    x = f * 2,
                                    T = f * 2,
                                    N = h.cx,
                                    C = h.cy,
                                    k = t.radialReference,
                                    L, f = function() {
                                        k && (L = r.getBBox(), N += (k[0] - L.x) / L.width - .5, C += (k[1] - L.y) / L.height - .5, x *= k[2] / L.width, T *= k[2] / L.height), b = 'src="' + vt.global.VMLRadialGradientURL + '" size="' + x + "," + T + '" origin="0.5,0.5" position="' + N + "," + C + '" color2="' + y + '" ', S()
                                    };
                                r.added ? f() : Qt(r, "add", f), f = g
                            } else
                            f = l
                    } else
                        o.test(e) && t.tagName !== "IMG" ? (s = un(e), u = ["<", n, ' opacity="', s.get("a"), '"/>'], v(this.prepVML(u), null, null, t), f = s.get("rgb")) : (f = t.getElementsByTagName(n), f.length && (f[0].opacity = 1, f[0].type = "solid"), f = e);
                    return f
                },
                prepVML: function(e) {
                    var t = this.isIE8,
                        e = e.join("");
                    return t ? (e = e.replace("/>", ' xmlns="urn:schemas-microsoft-com:vml" />'), e = e.indexOf('style="') === -1 ? e.replace("/>", ' style="display:inline-block;behavior:url(#default#VML);" />') : e.replace('style="', 'style="display:inline-block;behavior:url(#default#VML);')) : e = e.replace("<", "<hcv:"), e
                },
                text: an.prototype.html,
                path: function(t) {
                    var n = {
                        coordsize: "10 10"
                    };
                    return s(t) ? n.d = t : i(t) && e(n, t), this.createElement("shape").attr(n)
                },
                circle: function(e, t, n) {
                    var r = this.symbol("circle");
                    return i(e) && (n = e.r, t = e.y, e = e.x), r.isCircle = !0, r.r = n, r.attr({
                        x: e,
                        y: t
                    })
                },
                g: function(e) {
                    var t;
                    return e && (t = {
                        className: "highcharts-" + e,
                        "class": "highcharts-" + e
                    }), this.createElement(St).attr(t)
                },
                image: function(e, t, n, r, i) {
                    var s = this.createElement("img").attr({
                        src: e
                    });
                    return arguments.length > 1 && s.attr({
                        x: t,
                        y: n,
                        width: r,
                        height: i
                    }), s
                },
                rect: function(e, t, n, r, s, o) {
                    var u = this.symbol("rect");
                    return u.r = i(e) ? e.r : s, u.attr(i(e) ? e : u.crisp(o, e, t, V(n, 0), V(r, 0)))
                },
                invertChild: function(e, t) {
                    var r = t.style;
                    d(e, {
                        flip: "x",
                        left: n(r.width) - 1,
                        top: n(r.height) - 1,
                        rotation: -90
                    })
                },
                symbols: {
                    arc: function(e, t, n, r, i) {
                        var s = i.start,
                            o = i.end,
                            u = i.r || n || r,
                            n = i.innerR,
                            r = K(s),
                            a = Q(s),
                            f = K(o),
                            l = Q(o);
                        return o - s === 0 ? ["x"] : (s = ["wa", e - u, t - u, e + u, t + u, e + u * r, t + u * a, e + u * f, t + u * l], i.open && !n && s.push("e", "M", e, t), s.push("at", e - n, t - n, e + n, t + n, e + n * f, t + n * l, e + n * r, t + n * a, "x", "e"), s.isArc = !0, s)
                    },
                    circle: function(e, t, n, r, i) {
                        return i && (n = r = 2 * i.r), i && i.isCircle && (e -= n / 2, t -= r / 2), ["wa", e, t, e + n, t + r, e + n, t + r / 2, e + n, t + r / 2, "e"]
                    },
                    rect: function(e, t, n, r, i) {
                        var s = e + n,
                            o = t + r,
                            u;
                        return !l(i) || !i.r ? s = an.prototype.symbols.square.apply(0, arguments) : (u = $(i.r, n, r), s = ["M", e + u, t, "L", s - u, t, "wa", s - 2 * u, t, s, t + 2 * u, s - u, t, s, t + u, "L", s, o - u, "wa", s - 2 * u, o - 2 * u, s, o, s, o - u, s - u, o, "L", e + u, o, "wa", e, o - 2 * u, e + 2 * u, o, e + u, o, e, o - u, "L", e, t + u, "wa", e, t, e + 2 * u, t + 2 * u, e, t + u, e + u, t, "x", "e"]), s
                    }
                }
            };
            Highcharts.VMLRenderer = fn = function() {
                this.init.apply(this, arguments)
            }, fn.prototype = t(an.prototype, ln), lt = fn
        }
        an.prototype.measureSpanWidth = function(e, t) {
            var n = q.createElement("span"),
                r;
            return r = q.createTextNode(e), n.appendChild(r), d(n, t), this.box.appendChild(n), r = n.offsetWidth, L(n), r
        };
        var cn;
        ft && (Highcharts.CanVGRenderer = fn = function() {
            ot = "http://www.w3.org/1999/xhtml"
        }, fn.prototype.symbols = {}, cn = function() {
            function e() {
                var e = t.length,
                    n;
                for (n = 0; n < e; n++)
                    t[n]();
                t = []
            }

            var t = [];
            return {
                push: function(n, r) {
                    t.length === 0 && Wt(r, e), t.push(n)
                }
            }
        }(), lt = fn), P.prototype = {
            addLabel: function() {
                var t = this.axis,
                    n = t.options,
                    r = t.chart,
                    i = t.horiz,
                    s = t.categories,
                    u = t.names,
                    f = this.pos,
                    c = n.labels,
                    h = t.tickPositions,
                    i = i && s && !c.step && !c.staggerLines && !c.rotation && r.plotWidth / h.length || !i && (r.margin[3] || r.chartWidth * .33),
                    d = f === h[0],
                    v = f === h[h.length - 1],
                    m, u = s ? p(s[f], u[f], f) : f,
                    s = this.label,
                    g = h.info;
                t.isDatetimeAxis && g && (m = n.dateTimeLabelFormats[g.higherRanks[f] || g.unitName]), this.isFirst = d, this.isLast = v, n = t.labelFormatter.call({
                    axis: t,
                    chart: r,
                    isFirst: d,
                    isLast: v,
                    dateTimeLabelFormat: m,
                    value: t.isLog ? O(a(u)) : u
                }), f = i && {
                    width: V(1, z(i - 2 * (c.padding || 10))) + "px"
                }, f = e(f, c.style), l(s) ? s && s.attr({
                    text: n
                }).css(f) : (m = {
                    align: t.labelAlign
                }, o(c.rotation) && (m.rotation = c.rotation), i && c.ellipsis && (m._clipHeight = t.len / h.length), this.label = l(n) && c.enabled ? r.renderer.text(n, 0, 0, c.useHTML).attr(m).css(f).add(t.labelGroup) : null)
            },
            getLabelSize: function() {
                var e = this.label,
                    t = this.axis;
                return e ? e.getBBox()[t.horiz ? "height" : "width"] : 0
            },
            getLabelSides: function() {
                var e = this.label.getBBox(),
                    t = this.axis,
                    n = t.horiz,
                    r = t.options.labels,
                    e = n ? e.width : e.height,
                    t = n ? e * {
                        left: 0,
                        center: .5,
                        right: 1
                    }[t.labelAlign] - r.x : e;
                return [-t, e - t]
            },
            handleOverflow: function(e, t) {
                var n, r = !0,
                    i = this.axis,
                    s = this.isFirst,
                    o = this.isLast,
                    u = i.horiz ? t.x : t.y,
                    a = i.reversed,
                    f = i.tickPositions,
                    l = this.getLabelSides(),
                    c = l[0],
                    l = l[1],
                    h = i.pos,
                    p = h + i.len,
                    d = this.label.line || 0,
                    v = i.labelEdge,
                    m = i.justifyLabels && (s || o);
                return v[d] === I || u + c > v[d] ? v[d] = u + l : m || (r = !1), m && (n = (i = i.ticks[f[e + (s ? 1 : -1)]]) && i.label.xy && i.label.xy.x + i.getLabelSides()[s ? 0 : 1], f = n, s && !a || o && a ? u + c < h && (u = h - c, i && u + l > f && (r = !1)) : u + l > p && (u = p - l, i && u + c < f && (r = !1)), t.x = u), r
            },
            getPosition: function(e, t, n, r) {
                var i = this.axis,
                    s = i.chart,
                    o = r && s.oldChartHeight || s.chartHeight;
                return {
                    x: e ? i.translate(t + n, null, null, r) + i.transB : i.left + i.offset + (i.opposite ? (r && s.oldChartWidth || s.chartWidth) - i.right - i.left : 0),
                    y: e ? o - i.bottom + i.offset - (i.opposite ? i.height : 0) : o - i.translate(t + n, null, null, r) - i.transB
                }
            },
            getLabelPosition: function(e, t, n, r, i, s, o, u) {
                var a = this.axis,
                    f = a.transA,
                    c = a.reversed,
                    h = a.staggerLines,
                    p = a.chart.renderer.fontMetrics(i.style.fontSize).b,
                    d = i.rotation,
                    e = e + i.x - (s && r ? s * f * (c ? -1 : 1) : 0),
                    t = t + i.y - (s && !r ? s * f * (c ? 1 : -1) : 0);
                return d && a.side === 2 && (t -= p - p * K(d * Y)), !l(i.y) && !d && (t += p - n.getBBox().height / 2), h && (n.line = o / (u || 1) % h, t += n.line * (a.labelOffset / h)), {
                    x: e,
                    y: t
                }
            },
            getMarkPath: function(e, t, n, r, i, s) {
                return s.crispLine(["M", e, t, "L", e + (i ? 0 : -n), t + (i ? n : 0)], r)
            },
            render: function(e, t, n) {
                var r = this.axis,
                    i = r.options,
                    s = r.chart.renderer,
                    o = r.horiz,
                    u = this.type,
                    a = this.label,
                    f = this.pos,
                    l = i.labels,
                    c = this.gridLine,
                    h = u ? u + "Grid" : "grid",
                    d = u ? u + "Tick" : "tick",
                    v = i[h + "LineWidth"],
                    m = i[h + "LineColor"],
                    g = i[h + "LineDashStyle"],
                    y = i[d + "Length"],
                    h = i[d + "Width"] || 0,
                    b = i[d + "Color"],
                    w = i[d + "Position"],
                    d = this.mark,
                    E = l.step,
                    S = !0,
                    x = r.tickmarkOffset,
                    T = this.getPosition(o, f, x, t),
                    N = T.x,
                    T = T.y,
                    C = o && N === r.pos + r.len || !o && T === r.pos ? -1 : 1;
                this.isActive = !0, v && (f = r.getPlotLinePath(f + x, v * C, t, !0), c === I && (c = {
                    stroke: m,
                    "stroke-width": v
                }, g && (c.dashstyle = g), u || (c.zIndex = 1), t && (c.opacity = 0), this.gridLine = c = v ? s.path(f).attr(c).add(r.gridGroup) : null), !t && c && f && c[this.isNew ? "attr" : "animate"]({
                    d: f,
                    opacity: n
                })), h && y && (w === "inside" && (y = -y), r.opposite && (y = -y), u = this.getMarkPath(N, T, y, h * C, o, s), d ? d.animate({
                    d: u,
                    opacity: n
                }) : this.mark = s.path(u).attr({
                    stroke: b,
                    "stroke-width": h,
                    opacity: n
                }).add(r.axisGroup)), a && !isNaN(N) && (a.xy = T = this.getLabelPosition(N, T, a, o, l, x, e, E), this.isFirst && !this.isLast && !p(i.showFirstLabel, 1) || this.isLast && !this.isFirst && !p(i.showLastLabel, 1) ? S = !1 : !r.isRadial && !l.step && !l.rotation && !t && n !== 0 && (S = this.handleOverflow(e, T)), E && e % E && (S = !1), S && !isNaN(T.y) ? (T.opacity = n, a[this.isNew ? "attr" : "animate"](T), this.isNew = !1) : a.attr("y", -9999))
            },
            destroy: function() {
                k(this, this.axis)
            }
        };
        var hn = function(e, t) {
            this.axis = e, t && (this.options = t, this.id = t.id)
        };
        hn.prototype = {
            render: function() {
                var e = this,
                    n = e.axis,
                    r = n.horiz,
                    i = (n.pointRange || 0) / 2,
                    s = e.options,
                    o = s.label,
                    a = e.label,
                    f = s.width,
                    c = s.to,
                    h = s.from,
                    d = l(h) && l(c),
                    v = s.value,
                    m = s.dashStyle,
                    g = e.svgElem,
                    y = [],
                    b, w = s.color,
                    E = s.zIndex,
                    S = s.events,
                    x = n.chart.renderer;
                n.isLog && (h = u(h), c = u(c), v = u(v));
                if (f) {
                    if (y = n.getPlotLinePath(v, f), i = {
                            stroke: w,
                            "stroke-width": f
                        }, m)
                        i.dashstyle = m
                } else {
                    if (!d)
                        return;
                    if (h = V(h, n.min - i), c = $(c, n.max + i), y = n.getPlotBandPath(h, c, s), i = {
                            fill: w
                        }, s.borderWidth)
                        i.stroke = s.borderColor, i["stroke-width"] = s.borderWidth
                }
                l(E) && (i.zIndex = E);
                if (g) {
                    if (y)
                        g.animate({
                            d: y
                        }, null, g.onGetPath);
                    else if (g.hide(), g.onGetPath = function() {
                            g.show()
                        }, a)
                        e.label = a = a.destroy()
                } else if (y && y.length && (e.svgElem = g = x.path(y).attr(i).add(), S))
                    for (b in s = function(t) {
                        g.on(t, function(n) {
                            S[t].apply(e, [n])
                        })
                    }, S)
                        s(b);
                return o && l(o.text) && y && y.length && n.width > 0 && n.height > 0 ? (o = t({
                    align: r && d && "center",
                    x: r ? !d && 4 : 10,
                    verticalAlign: !r && d && "middle",
                    y: r ? d ? 16 : 10 : d ? 6 : -4,
                    rotation: r && !d && 90
                }, o), a || (e.label = a = x.text(o.text, 0, 0, o.useHTML).attr({
                    align: o.textAlign || o.align,
                    rotation: o.rotation,
                    zIndex: E
                }).css(o.style).add()), n = [y[1], y[4], p(y[6], y[1])], y = [y[2], y[5], p(y[7], y[2])], r = N(n), d = N(y), a.align(o, !1, {
                    x: r,
                    y: d,
                    width: C(n) - r,
                    height: C(y) - d
                }), a.show()) : a && a.hide(), e
            },
            destroy: function() {
                f(this.axis.plotLinesAndBands, this), delete this.axis, k(this)
            }
        }, H.prototype = {
            defaultOptions: {
                dateTimeLabelFormats: {
                    millisecond: "%H:%M:%S.%L",
                    second: "%H:%M:%S",
                    minute: "%H:%M",
                    hour: "%H:%M",
                    day: "%e. %b",
                    week: "%e. %b",
                    month: "%b '%y",
                    year: "%Y"
                },
                endOnTick: !1,
                gridLineColor: "#C0C0C0",
                labels: Ut,
                lineColor: "#C0D0E0",
                lineWidth: 1,
                minPadding: .01,
                maxPadding: .01,
                minorGridLineColor: "#E0E0E0",
                minorGridLineWidth: 1,
                minorTickColor: "#A0A0A0",
                minorTickLength: 2,
                minorTickPosition: "outside",
                startOfWeek: 1,
                startOnTick: !1,
                tickColor: "#C0D0E0",
                tickLength: 5,
                tickmarkPlacement: "between",
                tickPixelInterval: 100,
                tickPosition: "outside",
                tickWidth: 1,
                title: {
                    align: "middle",
                    style: {
                        color: "#4d759e",
                        fontWeight: "bold"
                    }
                },
                type: "linear"
            },
            defaultYAxisOptions: {
                endOnTick: !0,
                gridLineWidth: 1,
                tickPixelInterval: 72,
                showLastLabel: !0,
                labels: {
                    x: -8,
                    y: 3
                },
                lineWidth: 0,
                maxPadding: .05,
                minPadding: .05,
                startOnTick: !0,
                tickWidth: 0,
                title: {
                    rotation: 270,
                    text: "Values"
                },
                stackLabels: {
                    enabled: !1,
                    formatter: function() {
                        return g(this.total, -1)
                    },
                    style: Ut.style
                }
            },
            defaultLeftAxisOptions: {
                labels: {
                    x: -8,
                    y: null
                },
                title: {
                    rotation: 270
                }
            },
            defaultRightAxisOptions: {
                labels: {
                    x: 8,
                    y: null
                },
                title: {
                    rotation: 90
                }
            },
            defaultBottomAxisOptions: {
                labels: {
                    x: 0,
                    y: 14
                },
                title: {
                    rotation: 0
                }
            },
            defaultTopAxisOptions: {
                labels: {
                    x: 0,
                    y: -5
                },
                title: {
                    rotation: 0
                }
            },
            init: function(e, t) {
                var n = t.isX;
                this.horiz = e.inverted ? !n : n, this.coll = (this.isXAxis = n) ? "xAxis" : "yAxis", this.opposite = t.opposite, this.side = t.side || (this.horiz ? this.opposite ? 0 : 2 : this.opposite ? 1 : 3), this.setOptions(t);
                var r = this.options,
                    i = r.type;
                this.labelFormatter = r.labels.formatter || this.defaultLabelFormatter, this.userOptions = t, this.minPixelPadding = 0, this.chart = e, this.reversed = r.reversed, this.zoomEnabled = r.zoomEnabled !== !1, this.categories = r.categories || i === "category", this.names = [], this.isLog = i === "logarithmic", this.isDatetimeAxis = i === "datetime", this.isLinked = l(r.linkedTo), this.tickmarkOffset = this.categories && r.tickmarkPlacement === "between" ? .5 : 0, this.ticks = {}, this.labelEdge = [], this.minorTicks = {}, this.plotLinesAndBands = [], this.alternateBands = {}, this.len = 0, this.minRange = this.userMinRange = r.minRange || r.maxZoom, this.range = r.range, this.offset = r.offset || 0, this.stacks = {}, this.oldStacks = {}, this.stackExtremes = {}, this.min = this.max = null, this.crosshair = p(r.crosshair, h(e.options.tooltip.crosshairs)[n ? 0 : 1], !1);
                var s, r = this.options.events;
                Xt(this, e.axes) === -1 && (e.axes.push(this), e[this.coll].push(this)), this.series = this.series || [], e.inverted && n && this.reversed === I && (this.reversed = !0), this.removePlotLine = this.removePlotBand = this.removePlotBandOrLine;
                for (s in r)
                    Qt(this, s, r[s]);
                this.isLog && (this.val2lin = u, this.lin2val = a)
            },
            setOptions: function(e) {
                this.options = t(this.defaultOptions, this.isXAxis ? {} : this.defaultYAxisOptions, [this.defaultTopAxisOptions, this.defaultRightAxisOptions, this.defaultBottomAxisOptions, this.defaultLeftAxisOptions][this.side], t(vt[this.coll], e))
            },
            defaultLabelFormatter: function() {
                var e = this.axis,
                    t = this.value,
                    n = e.categories,
                    r = this.dateTimeLabelFormat,
                    i = vt.lang.numericSymbols,
                    s = i && i.length,
                    o, u = e.options.labels.format,
                    e = e.isLog ? t : e.tickInterval;
                if (u)
                    o = w(u, this);
                else if (n)
                    o = t;
                else if (r)
                    o = mt(r, t);
                else if (s && e >= 1e3)
                    for (; s-- && o === I;)
                        n = Math.pow(1e3, s + 1), e >= n && i[s] !== null && (o = g(t / n, -1) + i[s]);
                return o === I && (o = t >= 1e4 ? g(t, 0) : g(t, -1, I, "")), o
            },
            getSeriesExtremes: function() {
                var e = this,
                    t = e.chart;
                e.hasVisibleSeries = !1, e.dataMin = e.dataMax = null, e.stackExtremes = {}, e.buildStacks(), Vt(e.series, function(n) {
                    if (n.visible || !t.options.chart.ignoreHiddenSeries) {
                        var r;
                        r = n.options.threshold;
                        var i;
                        e.hasVisibleSeries = !0, e.isLog && r <= 0 && (r = null);
                        if (e.isXAxis) {
                            if (r = n.xData, r.length)
                                e.dataMin = $(p(e.dataMin, r[0]), N(r)), e.dataMax = V(p(e.dataMax, r[0]), C(r))
                        } else
                            n.getExtremes(), i = n.dataMax, n = n.dataMin, l(n) && l(i) && (e.dataMin = $(p(e.dataMin, n), n), e.dataMax = V(p(e.dataMax, i), i)), l(r) && (e.dataMin >= r ? (e.dataMin = r, e.ignoreMinPadding = !0) : e.dataMax < r && (e.dataMax = r, e.ignoreMaxPadding = !0))
                    }
                })
            },
            translate: function(e, t, n, r, i, s) {
                var u = this.len,
                    a = 1,
                    f = 0,
                    l = r ? this.oldTransA : this.transA,
                    r = r ? this.oldMin : this.min,
                    c = this.minPixelPadding,
                    i = (this.options.ordinal || this.isLog && i) && this.lin2val;
                return l || (l = this.transA), n && (a *= -1, f = u), this.reversed && (a *= -1, f -= a * u), t ? (e = e * a + f, e -= c, e = e / l + r, i && (e = this.lin2val(e))) : (i && (e = this.val2lin(e)), s === "between" && (s = .5), e = a * (e - r) * l + f + a * c + (o(s) ? l * s * this.pointRange : 0)), e
            },
            toPixels: function(e, t) {
                return this.translate(e, !1, !this.horiz, null, !0) + (t ? 0 : this.pos)
            },
            toValue: function(e, t) {
                return this.translate(e - (t ? 0 : this.pos), !0, !this.horiz, null, !0)
            },
            getPlotLinePath: function(e, t, n, r, i) {
                var s = this.chart,
                    o = this.left,
                    u = this.top,
                    a, f, l = n && s.oldChartHeight || s.chartHeight,
                    c = n && s.oldChartWidth || s.chartWidth,
                    h;
                a = this.transB, i = p(i, this.translate(e, null, null, n)), e = n = z(i + a), a = f = z(l - i - a);
                if (isNaN(i))
                    h = !0;
                else if (this.horiz) {
                    if (a = u, f = l - this.bottom, e < o || e > o + this.width)
                        h = !0
                } else if (e = o, n = c - this.right, a < u || a > u + this.height)
                    h = !0;
                return h && !r ? null : s.renderer.crispLine(["M", e, a, "L", n, f], t || 1)
            },
            getLinearTickPositions: function(e, t, n) {
                for (var r, t = O(W(t / e) * e), n = O(X(n / e) * e), i = []; t <= n;) {
                    i.push(t), t = O(t + e);
                    if (t === r)
                        break;
                    r = t
                }
                return i
            },
            getMinorTickPositions: function() {
                var e = this.options,
                    t = this.tickPositions,
                    n = this.minorTickInterval,
                    r = [],
                    i;
                if (this.isLog) {
                    i = t.length;
                    for (e = 1; e < i; e++)
                        r = r.concat(this.getLogTickPositions(n, t[e - 1], t[e], !0))
                } else if (this.isDatetimeAxis && e.minorTickInterval === "auto")
                    r = r.concat(this.getTimeTicks(this.normalizeTimeTickInterval(n), this.min, this.max, e.startOfWeek)), r[0] < this.min && r.shift();
                else
                    for (t = this.min + (t[0] - this.min) % n; t <= this.max; t += n)
                        r.push(t);
                return r
            },
            adjustForMinRange: function() {
                var e = this.options,
                    t = this.min,
                    n = this.max,
                    r, i = this.dataMax - this.dataMin >= this.minRange,
                    s, o, u, a, f;
                this.isXAxis && this.minRange === I && !this.isLog && (l(e.min) || l(e.max) ? this.minRange = null : (Vt(this.series, function(e) {
                    a = e.xData;
                    for (o = f = e.xIncrement ? 1 : a.length - 1; o > 0; o--)
                        if (u = a[o] - a[o - 1], s === I || u < s)
                            s = u
                }), this.minRange = $(s * 5, this.dataMax - this.dataMin)));
                if (n - t < this.minRange) {
                    var c = this.minRange;
                    r = (c - n + t) / 2, r = [t - r, p(e.min, t - r)], i && (r[2] = this.dataMin), t = C(r), n = [t + c, p(e.max, t + c)], i && (n[2] = this.dataMax), n = N(n), n - t < c && (r[0] = n - c, r[1] = p(e.min, n - c), t = C(r))
                }
                this.min = t, this.max = n
            },
            setAxisTranslation: function(e) {
                var t = this.max - this.min,
                    n = 0,
                    i, s = 0,
                    o = 0,
                    u = this.linkedParent,
                    a = !!this.categories,
                    f = this.transA;
                if (this.isXAxis || a)
                    u ? (s = u.minPointOffset, o = u.pointRangePadding) : Vt(this.series, function(e) {
                        var u = V(e.pointRange, +a),
                            f = e.options.pointPlacement,
                            c = e.closestPointRange;
                        u > t && (u = 0), n = V(n, u), s = V(s, r(f) ? 0 : u / 2), o = V(o, f === "on" ? 0 : u), !e.noSharedTooltip && l(c) && (i = l(i) ? $(i, c) : c)
                    }), u = this.ordinalSlope && i ? this.ordinalSlope / i : 1, this.minPointOffset = s *= u, this.pointRangePadding = o *= u, this.pointRange = $(n, t), this.closestPointRange = i;
                e && (this.oldTransA = f), this.translationSlope = this.transA = f = this.len / (t + o || 1), this.transB = this.horiz ? this.left : this.bottom, this.minPixelPadding = f * s
            },
            setTickPositions: function(e) {
                var t = this,
                    n = t.chart,
                    r = t.options,
                    i = t.isLog,
                    s = t.isDatetimeAxis,
                    o = t.isXAxis,
                    a = t.isLinked,
                    f = t.options.tickPositioner,
                    c = r.maxPadding,
                    h = r.minPadding,
                    d = r.tickInterval,
                    v = r.minTickInterval,
                    m = r.tickPixelInterval,
                    g, y = t.categories;
                a ? (t.linkedParent = n[t.coll][r.linkedTo], n = t.linkedParent.getExtremes(), t.min = p(n.min, n.dataMin), t.max = p(n.max, n.dataMax), r.type !== t.linkedParent.options.type && A(11, 1)) : (t.min = p(t.userMin, r.min, t.dataMin), t.max = p(t.userMax, r.max, t.dataMax)), i && (!e && $(t.min, p(t.dataMin, t.min)) <= 0 && A(10, 1), t.min = O(u(t.min)), t.max = O(u(t.max))), t.range && l(t.max) && (t.userMin = t.min = V(t.min, t.max - t.range), t.userMax = t.max, t.range = null), t.beforePadding && t.beforePadding(), t.adjustForMinRange(), !y && !t.usePercentage && !a && l(t.min) && l(t.max) && (n = t.max - t.min) && (!l(r.min) && !l(t.userMin) && h && (t.dataMin < 0 || !t.ignoreMinPadding) && (t.min -= n * h), !l(r.max) && !l(t.userMax) && c && (t.dataMax > 0 || !t.ignoreMaxPadding) && (t.max += n * c)), t.min === t.max || t.min === void 0 || t.max === void 0 ? t.tickInterval = 1 : a && !d && m === t.linkedParent.options.tickPixelInterval ? t.tickInterval = t.linkedParent.tickInterval : (t.tickInterval = p(d, y ? 1 : (t.max - t.min) * m / V(t.len, m)), !l(d) && t.len < m && !this.isRadial && !y && r.startOnTick && r.endOnTick && (g = !0, t.tickInterval /= 4)), o && !e && Vt(t.series, function(e) {
                    e.processData(t.min !== t.oldMin || t.max !== t.oldMax)
                }), t.setAxisTranslation(!0), t.beforeSetTickPositions && t.beforeSetTickPositions(), t.postProcessTickInterval && (t.tickInterval = t.postProcessTickInterval(t.tickInterval)), t.pointRange && (t.tickInterval = V(t.pointRange, t.tickInterval)), !d && t.tickInterval < v && (t.tickInterval = v), !s && !i && !d && (t.tickInterval = S(t.tickInterval, null, E(t.tickInterval), r)), t.minorTickInterval = r.minorTickInterval === "auto" && t.tickInterval ? t.tickInterval / 5 : r.minorTickInterval, t.tickPositions = e = r.tickPositions ? [].concat(r.tickPositions) : f && f.apply(t, [t.min, t.max]), e || (!t.ordinalPositions && (t.max - t.min) / t.tickInterval > V(2 * t.len, 200) && A(19, !0), e = s ? t.getTimeTicks(t.normalizeTimeTickInterval(t.tickInterval, r.units), t.min, t.max, r.startOfWeek, t.ordinalPositions, t.closestPointRange, !0) : i ? t.getLogTickPositions(t.tickInterval, t.min, t.max) : t.getLinearTickPositions(t.tickInterval, t.min, t.max), g && e.splice(1, e.length - 2), t.tickPositions = e), a || (i = e[0], s = e[e.length - 1], a = t.minPointOffset || 0, r.startOnTick ? t.min = i : t.min - a > i && e.shift(), r.endOnTick ? t.max = s : t.max + a < s && e.pop(), e.length === 1 && (t.min -= .001, t.max += .001))
            },
            setMaxTicks: function() {
                var e = this.chart,
                    t = e.maxTicks || {},
                    n = this.tickPositions,
                    r = this._maxTicksKey = [this.coll, this.pos, this.len].join("-");
                !this.isLinked && !this.isDatetimeAxis && n && n.length > (t[r] || 0) && this.options.alignTicks !== !1 && (t[r] = n.length), e.maxTicks = t
            },
            adjustTickAmount: function() {
                var e = this._maxTicksKey,
                    t = this.tickPositions,
                    n = this.chart.maxTicks;
                if (n && n[e] && !this.isDatetimeAxis && !this.categories && !this.isLinked && this.options.alignTicks !== !1 && this.min !== I) {
                    var r = this.tickAmount,
                        i = t.length;
                    this.tickAmount = e = n[e];
                    if (i < e) {
                        for (; t.length < e;)
                            t.push(O(t[t.length - 1] + this.tickInterval));
                        this.transA *= (i - 1) / (e - 1), this.max = t[t.length - 1]
                    }
                    l(r) && e !== r && (this.isDirty = !0)
                }
            },
            setScale: function() {
                var e = this.stacks,
                    t, n, r, i;
                this.oldMin = this.min, this.oldMax = this.max, this.oldAxisLength = this.len, this.setAxisSize(), i = this.len !== this.oldAxisLength, Vt(this.series, function(e) {
                    if (e.isDirtyData || e.isDirty || e.xAxis.isDirty)
                        r = !0
                });
                if (i || r || this.isLinked || this.forceRedraw || this.userMin !== this.oldUserMin || this.userMax !== this.oldUserMax) {
                    if (!this.isXAxis)
                        for (t in e)
                            for (n in e[t])
                                e[t][n].total = null, e[t][n].cum = 0;
                    this.forceRedraw = !1, this.getSeriesExtremes(), this.setTickPositions(), this.oldUserMin = this.userMin, this.oldUserMax = this.userMax, this.isDirty || (this.isDirty = i || this.min !== this.oldMin || this.max !== this.oldMax)
                } else if (!this.isXAxis) {
                    this.oldStacks && (e = this.stacks = this.oldStacks);
                    for (t in e)
                        for (n in e[t])
                            e[t][n].cum = e[t][n].total
                }
                this.setMaxTicks()
            },
            setExtremes: function(t, n, r, i, s) {
                var o = this,
                    u = o.chart,
                    r = p(r, !0),
                    s = e(s, {
                        min: t,
                        max: n
                    });
                Yt(o, "setExtremes", s, function() {
                    o.userMin = t, o.userMax = n, o.eventArgs = s, o.isDirtyExtremes = !0, r && u.redraw(i)
                })
            },
            zoom: function(e, t) {
                return this.allowZoomOutside || (l(this.dataMin) && e <= this.dataMin && (e = I), l(this.dataMax) && t >= this.dataMax && (t = I)), this.displayBtn = e !== I || t !== I, this.setExtremes(e, t, !1, I, {
                    trigger: "zoom"
                }), !0
            },
            setAxisSize: function() {
                var e = this.chart,
                    t = this.options,
                    n = t.offsetLeft || 0,
                    r = t.offsetRight || 0,
                    i = this.horiz,
                    s, o;
                this.left = o = p(t.left, e.plotLeft + n), this.top = s = p(t.top, e.plotTop), this.width = n = p(t.width, e.plotWidth - n + r), this.height = t = p(t.height, e.plotHeight), this.bottom = e.chartHeight - t - s, this.right = e.chartWidth - n - o, this.len = V(i ? n : t, 0), this.pos = i ? o : s
            },
            getExtremes: function() {
                var e = this.isLog;
                return {
                    min: e ? O(a(this.min)) : this.min,
                    max: e ? O(a(this.max)) : this.max,
                    dataMin: this.dataMin,
                    dataMax: this.dataMax,
                    userMin: this.userMin,
                    userMax: this.userMax
                }
            },
            getThreshold: function(e) {
                var t = this.isLog,
                    n = t ? a(this.min) : this.min,
                    t = t ? a(this.max) : this.max;
                return n > e || e === null ? e = n : t < e && (e = t), this.translate(e, 0, 1, 0, 1)
            },
            autoLabelAlign: function(e) {
                return e = (p(e, 0) - this.side * 90 + 720) % 360, e > 15 && e < 165 ? "right" : e > 195 && e < 345 ? "left" : "center"
            },
            getOffset: function() {
                var e = this,
                    t = e.chart,
                    n = t.renderer,
                    r = e.options,
                    i = e.tickPositions,
                    s = e.ticks,
                    o = e.horiz,
                    u = e.side,
                    a = t.inverted ? [1, 0, 3, 2][u] : u,
                    f, c = 0,
                    h, d = 0,
                    v = r.title,
                    m = r.labels,
                    g = 0,
                    y = t.axisOffset,
                    b = t.clipOffset,
                    w = [-1, 1, 1, -1][u],
                    E, S = 1,
                    x = p(m.maxStaggerLines, 5),
                    T, N, C, k;
                e.hasData = f = e.hasVisibleSeries || l(e.min) && l(e.max) && !!i, e.showAxis = t = f || p(r.showEmpty, !0), e.staggerLines = e.horiz && m.staggerLines, e.axisGroup || (e.gridGroup = n.g("grid").attr({
                    zIndex: r.gridZIndex || 1
                }).add(), e.axisGroup = n.g("axis").attr({
                    zIndex: r.zIndex || 2
                }).add(), e.labelGroup = n.g("axis-labels").attr({
                    zIndex: m.zIndex || 7
                }).add());
                if (f || e.isLinked) {
                    e.labelAlign = p(m.align || e.autoLabelAlign(m.rotation)), Vt(i, function(t) {
                        s[t] ? s[t].addLabel() : s[t] = new P(e, t)
                    });
                    if (e.horiz && !e.staggerLines && x && !m.rotation) {
                        for (E = e.reversed ? [].concat(i).reverse() : i; S < x;) {
                            f = [], T = !1;
                            for (m = 0; m < E.length; m++)
                                N = E[m], C = (C = s[N].label && s[N].label.getBBox()) ? C.width : 0, k = m % S, C && (N = e.translate(N), f[k] !== I && N < f[k] && (T = !0), f[k] = N + C);
                            if (!T)
                                break;
                            S++
                        }
                        S > 1 && (e.staggerLines = S)
                    }
                    Vt(i, function(t) {
                        if (u === 0 || u === 2 || {
                                1: "left",
                                3: "right"
                            }[u] === e.labelAlign)
                            g = V(s[t].getLabelSize(), g)
                    }), e.staggerLines && (g *= e.staggerLines, e.labelOffset = g)
                } else
                    for (E in s)
                        s[E].destroy(), delete s[E];
                v && v.text && v.enabled !== !1 && (e.axisTitle || (e.axisTitle = n.text(v.text, 0, 0, v.useHTML).attr({
                    zIndex: 7,
                    rotation: v.rotation || 0,
                    align: v.textAlign || {
                        low: "left",
                        middle: "center",
                        high: "right"
                    }[v.align]
                }).css(v.style).add(e.axisGroup), e.axisTitle.isNew = !0), t && (c = e.axisTitle.getBBox()[o ? "height" : "width"], d = p(v.margin, o ? 5 : 10), h = v.offset), e.axisTitle[t ? "show" : "hide"]()), e.offset = w * p(r.offset, y[u]), e.axisTitleMargin = p(h, g + d + (u !== 2 && g && w * r.labels[o ? "y" : "x"])), y[u] = V(y[u], e.axisTitleMargin + c + w * e.offset), b[a] = V(b[a], W(r.lineWidth / 2) * 2)
            },
            getLinePath: function(e) {
                var t = this.chart,
                    n = this.opposite,
                    r = this.offset,
                    i = this.horiz,
                    s = this.left + (n ? this.width : 0) + r,
                    r = t.chartHeight - this.bottom - (n ? this.height : 0) + r;
                return n && (e *= -1), t.renderer.crispLine(["M", i ? this.left : s, i ? r : this.top, "L", i ? t.chartWidth - this.right : s, i ? r : t.chartHeight - this.bottom], e)
            },
            getTitlePosition: function() {
                var e = this.horiz,
                    t = this.left,
                    r = this.top,
                    i = this.len,
                    s = this.options.title,
                    o = e ? t : r,
                    u = this.opposite,
                    a = this.offset,
                    f = n(s.style.fontSize || 12),
                    i = {
                        low: o + (e ? 0 : i),
                        middle: o + i / 2,
                        high: o + (e ? i : 0)
                    }[s.align],
                    t = (e ? r + this.height : t) + (e ? 1 : -1) * (u ? -1 : 1) * this.axisTitleMargin + (this.side === 2 ? f : 0);
                return {
                    x: e ? i : t + (u ? this.width : 0) + a + (s.x || 0),
                    y: e ? t - (u ? this.height : 0) + a : i + (s.y || 0)
                }
            },
            render: function() {
                var e = this,
                    t = e.horiz,
                    n = e.reversed,
                    r = e.chart,
                    i = r.renderer,
                    s = e.options,
                    o = e.isLog,
                    u = e.isLinked,
                    f = e.tickPositions,
                    c, h = e.axisTitle,
                    p = e.stacks,
                    d = e.ticks,
                    v = e.minorTicks,
                    m = e.alternateBands,
                    g = s.stackLabels,
                    y = s.alternateGridColor,
                    b = e.tickmarkOffset,
                    w = s.lineWidth,
                    E = r.hasRendered && l(e.oldMin) && !isNaN(e.oldMin),
                    S = e.hasData,
                    x = e.showAxis,
                    T, N = e.justifyLabels = !e.staggerLines && t && s.labels.overflow === "justify",
                    C;
                e.labelEdge.length = 0, Vt([d, v, m], function(e) {
                    for (var t in e)
                        e[t].isActive = !1
                });
                if (S || u)
                    if (e.minorTickInterval && !e.categories && Vt(e.getMinorTickPositions(), function(t) {
                            v[t] || (v[t] = new P(e, t, "minor")), E && v[t].isNew && v[t].render(null, !0), v[t].render(null, !1, 1)
                        }), f.length && (c = f.slice(), (t && n || !t && !n) && c.reverse(), N && (c = c.slice(1).concat([c[0]])), Vt(c, function(t, n) {
                            N && (n = n === c.length - 1 ? 0 : n + 1);
                            if (!u || t >= e.min && t <= e.max)
                                d[t] || (d[t] = new P(e, t)), E && d[t].isNew && d[t].render(n, !0, .1), d[t].render(n, !1, 1)
                        }), b && e.min === 0 && (d[-1] || (d[-1] = new P(e, -1, null, !0)), d[-1].render(-1))), y && Vt(f, function(t, n) {
                            n % 2 === 0 && t < e.max && (m[t] || (m[t] = new hn(e)), T = t + b, C = f[n + 1] !== I ? f[n + 1] + b : e.max, m[t].options = {
                                from: o ? a(T) : T,
                                to: o ? a(C) : C,
                                color: y
                            }, m[t].render(), m[t].isActive = !0)
                        }), !e._addedPlotLB)
                        Vt((s.plotLines || []).concat(s.plotBands || []), function(t) {
                            e.addPlotBandOrLine(t)
                        }), e._addedPlotLB = !0;
                Vt([d, v, m], function(e) {
                    var t, n, i = [],
                        s = gt ? gt.duration || 500 : 0,
                        o = function() {
                            for (n = i.length; n--;)
                                e[i[n]] && !e[i[n]].isActive && (e[i[n]].destroy(), delete e[i[n]])
                        };
                    for (t in e)
                        e[t].isActive || (e[t].render(t, !1, 0), e[t].isActive = !1, i.push(t));
                    e === m || !r.hasRendered || !s ? o() : s && setTimeout(o, s)
                }), w && (t = e.getLinePath(w), e.axisLine ? e.axisLine.animate({
                    d: t
                }) : e.axisLine = i.path(t).attr({
                    stroke: s.lineColor,
                    "stroke-width": w,
                    zIndex: 7
                }).add(e.axisGroup), e.axisLine[x ? "show" : "hide"]()), h && x && (h[h.isNew ? "attr" : "animate"](e.getTitlePosition()), h.isNew = !1);
                if (g && g.enabled) {
                    var k, L, s = e.stackTotalGroup;
                    s || (e.stackTotalGroup = s = i.g("stack-labels").attr({
                        visibility: "visible",
                        zIndex: 6
                    }).add()), s.translate(r.plotLeft, r.plotTop);
                    for (k in p)
                        for (L in i = p[k], i)
                            i[L].render(s)
                }
                e.isDirty = !1
            },
            redraw: function() {
                var e = this.chart.pointer;
                e.reset && e.reset(!0), this.render(), Vt(this.plotLinesAndBands, function(e) {
                    e.render()
                }), Vt(this.series, function(e) {
                    e.isDirty = !0
                })
            },
            buildStacks: function() {
                var e = this.series,
                    t = e.length;
                if (!this.isXAxis) {
                    for (; t--;)
                        e[t].setStackedPoints();
                    if (this.usePercentage)
                        for (t = 0; t < e.length; t++)
                            e[t].setPercentStacks()
                }
            },
            destroy: function(e) {
                var t = this,
                    n = t.stacks,
                    r, i = t.plotLinesAndBands;
                e || Gt(t);
                for (r in n)
                    k(n[r]), n[r] = null;
                Vt([t.ticks, t.minorTicks, t.alternateBands], function(e) {
                    k(e)
                });
                for (e = i.length; e--;)
                    i[e].destroy();
                Vt("stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup".split(","), function(e) {
                    t[e] && (t[e] = t[e].destroy())
                }), this.cross && this.cross.destroy()
            },
            drawCrosshair: function(e, t) {
                if (this.crosshair)
                    if ((l(t) || !p(this.crosshair.snap, !0)) === !1)
                        this.hideCrosshair();
                    else {
                        var n, r = this.crosshair,
                            i = r.animation;
                        p(r.snap, !0) ? l(t) && (n = this.chart.inverted != this.horiz ? t.plotX : this.len - t.plotY) : n = this.horiz ? e.chartX - this.pos : this.len - e.chartY + this.pos, n = this.isRadial ? this.getPlotLinePath(this.isXAxis ? t.x : p(t.stackY, t.y)) : this.getPlotLinePath(null, null, null, null, n), n === null ? this.hideCrosshair() : this.cross ? this.cross.attr({
                            visibility: "visible"
                        })[i ? "animate" : "attr"]({
                            d: n
                        }, i) : (i = {
                            "stroke-width": r.width || 1,
                            stroke: r.color || "#C0C0C0",
                            zIndex: r.zIndex || 2
                        }, r.dashStyle && (i.dashstyle = r.dashStyle), this.cross = this.chart.renderer.path(n).attr(i).add())
                    }
            },
            hideCrosshair: function() {
                this.cross && this.cross.hide()
            }
        }, e(H.prototype, {
            getPlotBandPath: function(e, t) {
                var n = this.getPlotLinePath(t),
                    r = this.getPlotLinePath(e);
                return r && n ? r.push(n[4], n[5], n[1], n[2]) : r = null, r
            },
            addPlotBand: function(e) {
                this.addPlotBandOrLine(e, "plotBands")
            },
            addPlotLine: function(e) {
                this.addPlotBandOrLine(e, "plotLines")
            },
            addPlotBandOrLine: function(e, t) {
                var n = (new hn(this, e)).render(),
                    r = this.userOptions;
                return n && (t && (r[t] = r[t] || [], r[t].push(e)), this.plotLinesAndBands.push(n)), n
            },
            removePlotBandOrLine: function(e) {
                for (var t = this.plotLinesAndBands, n = this.options, r = this.userOptions, i = t.length; i--;)
                    t[i].id === e && t[i].destroy();
                Vt([n.plotLines || [], r.plotLines || [], n.plotBands || [], r.plotBands || []], function(t) {
                    for (i = t.length; i--;)
                        t[i].id === e && f(t, t[i])
                })
            }
        }), H.prototype.getLogTickPositions = function(e, t, n, r) {
            var i = this.options,
                s = this.len,
                o = [];
            r || (this._minorAutoInterval = null);
            if (e >= .5)
                e = z(e), o = this.getLinearTickPositions(e, t, n);
            else if (e >= .08)
                for (var s = W(t), f, l, c, h, d, i = e > .3 ? [1, 2, 4] : e > .15 ? [1, 2, 4, 6, 8] : [1, 2, 3, 4, 5, 6, 7, 8, 9]; s < n + 1 && !d; s++) {
                    l = i.length;
                    for (f = 0; f < l && !d; f++)
                        c = u(a(s) * i[f]), c > t && (!r || h <= n) && o.push(h), h > n && (d = !0), h = c
                } else if (t = a(t), n = a(n), e = i[r ? "minorTickInterval" : "tickInterval"], e = p(e === "auto" ? null : e, this._minorAutoInterval, (n - t) * (i.tickPixelInterval / (r ? 5 : 1)) / ((r ? s / this.tickPositions.length : s) || 1)), e = S(e, null, E(e)), o = Kt(this.getLinearTickPositions(e, t, n), u), !r)
                this._minorAutoInterval = e / 5;
            return r || (this.tickInterval = e), o
        }, H.prototype.getTimeTicks = function(t, n, r, i) {
            var s = [],
                o = {},
                u = vt.global.useUTC,
                a, f = new Date(n - Lt),
                c = t.unitRange,
                h = t.count;
            if (l(n)) {
                c >= bt.second && (f.setMilliseconds(0), f.setSeconds(c >= bt.minute ? 0 : h * W(f.getSeconds() / h))), c >= bt.minute && f[Ht](c >= bt.hour ? 0 : h * W(f[At]() / h)), c >= bt.hour && f[Bt](c >= bt.day ? 0 : h * W(f[Ot]() / h)), c >= bt.day && f[jt](c >= bt.month ? 1 : h * W(f[_t]() / h)), c >= bt.month && (f[Ft](c >= bt.year ? 0 : h * W(f[Dt]() / h)), a = f[Pt]()), c >= bt.year && (a -= a % h, f[It](a)), c === bt.week && f[jt](f[_t]() - f[Mt]() + p(i, 1)), n = 1, Lt && (f = new Date(f.getTime() + Lt)), a = f[Pt]();
                for (var i = f.getTime(), d = f[Dt](), v = f[_t](), m = u ? Lt : (864e5 + f.getTimezoneOffset() * 6e4) % 864e5; i < r;)
                    s.push(i), c === bt.year ? i = kt(a + n * h, 0) : c === bt.month ? i = kt(a, d + n * h) : !!u || c !== bt.day && c !== bt.week ? i += c * h : i = kt(a, d, v + n * h * (c === bt.day ? 1 : 7)), n++;
                s.push(i), Vt($t(s, function(e) {
                    return c <= bt.hour && e % bt.day === m
                }), function(e) {
                    o[e] = "day"
                })
            }
            return s.info = e(t, {
                higherRanks: o,
                totalRange: c * h
            }), s
        }, H.prototype.normalizeTimeTickInterval = function(e, t) {
            var n = t || [
                        ["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]],
                        ["second", [1, 2, 5, 10, 15, 30]],
                        ["minute", [1, 2, 5, 10, 15, 30]],
                        ["hour", [1, 2, 3, 4, 6, 8, 12]],
                        ["day", [1, 2]],
                        ["week", [1, 2]],
                        ["month", [1, 2, 3, 4, 6]],
                        ["year", null]
                    ],
                r = n[n.length - 1],
                i = bt[r[0]],
                s = r[1],
                o;
            for (o = 0; o < n.length; o++)
                if (r = n[o], i = bt[r[0]], s = r[1], n[o + 1] && e <= (i * s[s.length - 1] + bt[n[o + 1][0]]) / 2)
                    break;
            return i === bt.year && e < 5 * i && (s = [1, 2, 5]), n = S(e / i, s, r[0] === "year" ? V(E(e / i), 1) : 1), {
                unitRange: i,
                count: n,
                unitName: r[0]
            }
        }, B.prototype = {
            destroy: function() {
                k(this, this.axis)
            },
            render: function(e) {
                var t = this.options,
                    n = t.format,
                    n = n ? w(n, this) : t.formatter.call(this);
                this.label ? this.label.attr({
                    text: n,
                    visibility: "hidden"
                }) : this.label = this.axis.chart.renderer.text(n, 0, 0, t.useHTML).css(t.style).attr({
                    align: this.textAlign,
                    rotation: t.rotation,
                    visibility: "hidden"
                }).add(e)
            },
            setOffset: function(e, t) {
                var n = this.axis,
                    r = n.chart,
                    i = r.inverted,
                    s = this.isNegative,
                    o = n.translate(this.percent ? 100 : this.total, 0, 0, 0, 1),
                    n = n.translate(0),
                    n = J(o - n),
                    u = r.xAxis[0].translate(this.x) + e,
                    a = r.plotHeight,
                    s = {
                        x: i ? s ? o : o - n : u,
                        y: i ? a - u - t : s ? a - o - n : a - o,
                        width: i ? n : t,
                        height: i ? t : n
                    };
                if (i = this.label)
                    i.align(this.alignOptions, null, s), s = i.alignAttr, i.attr({
                        visibility: this.options.crop === !1 || r.isInsidePlot(s.x, s.y) ? ut ? "inherit" : "visible" : "hidden"
                    })
            }
        }, j.prototype = {
            init: function(e, t) {
                var r = t.borderWidth,
                    i = t.style,
                    s = n(i.padding);
                this.chart = e, this.options = t, this.crosshairs = [], this.now = {
                    x: 0,
                    y: 0
                }, this.isHidden = !0, this.label = e.renderer.label("", 0, 0, t.shape, null, null, t.useHTML, null, "tooltip").attr({
                    padding: s,
                    fill: t.backgroundColor,
                    "stroke-width": r,
                    r: t.borderRadius,
                    zIndex: 8
                }).css(i).css({
                    padding: 0
                }).add().attr({
                    y: -999
                }), ft || this.label.shadow(t.shadow), this.shared = t.shared
            },
            destroy: function() {
                this.label && (this.label = this.label.destroy()), clearTimeout(this.hideTimer), clearTimeout(this.tooltipTimeout)
            },
            move: function(t, n, r, i) {
                var s = this,
                    o = s.now,
                    u = s.options.animation !== !1 && !s.isHidden;
                e(o, {
                    x: u ? (2 * o.x + t) / 3 : t,
                    y: u ? (o.y + n) / 2 : n,
                    anchorX: u ? (2 * o.anchorX + r) / 3 : r,
                    anchorY: u ? (o.anchorY + i) / 2 : i
                }), s.label.attr(o), u && (J(t - o.x) > 1 || J(n - o.y) > 1) && (clearTimeout(this.tooltipTimeout), this.tooltipTimeout = setTimeout(function() {
                    s && s.move(t, n, r, i)
                }, 32))
            },
            hide: function() {
                var e = this,
                    t;
                clearTimeout(this.hideTimer), this.isHidden || (t = this.chart.hoverPoints, this.hideTimer = setTimeout(function() {
                    e.label.fadeOut(), e.isHidden = !0
                }, p(this.options.hideDelay, 500)), t && Vt(t, function(e) {
                    e.setState()
                }), this.chart.hoverPoints = null)
            },
            getAnchor: function(e, t) {
                var n, r = this.chart,
                    i = r.inverted,
                    s = r.plotTop,
                    o = 0,
                    u = 0,
                    a, e = h(e);
                return n = e[0].tooltipPos, this.followPointer && t && (t.chartX === I && (t = r.pointer.normalize(t)), n = [t.chartX - r.plotLeft, t.chartY - s]), n || (Vt(e, function(e) {
                    a = e.series.yAxis, o += e.plotX, u += (e.plotLow ? (e.plotLow + e.plotHigh) / 2 : e.plotY) + (!i && a ? a.top - s : 0)
                }), o /= e.length, u /= e.length, n = [i ? r.plotWidth - u : o, this.shared && !i && e.length > 1 && t ? t.chartY - s : i ? r.plotHeight - o : u]), Kt(n, z)
            },
            getPosition: function(e, t, n) {
                var r = this.chart,
                    i = r.plotLeft,
                    s = r.plotTop,
                    o = r.plotWidth,
                    u = r.plotHeight,
                    a = p(this.options.distance, 12),
                    f = n.plotX,
                    n = n.plotY,
                    r = f + i + (r.inverted ? a : -e - a),
                    l = n - t + s + 15,
                    c;
                return r < 7 && (r = i + V(f, 0) + a), r + e > i + o && (r -= r + e - (i + o), l = n - t + s - a, c = !0), l < s + 5 && (l = s + 5, c && n >= l && n <= l + t && (l = n + s + a)), l + t > s + u && (l = V(s, s + u - t - a)), {
                    x: r,
                    y: l
                }
            },
            defaultFormatter: function(e) {
                var t = this.points || h(this),
                    n = t[0].series,
                    r;
                return r = [n.tooltipHeaderFormatter(t[0])], Vt(t, function(e) {
                    n = e.series, r.push(n.tooltipFormatter && n.tooltipFormatter(e) || e.point.tooltipFormatter(n.tooltipOptions.pointFormat))
                }), r.push(e.options.footerFormat || ""), r.join("")
            },
            refresh: function(e, t) {
                var n = this.chart,
                    r = this.label,
                    i = this.options,
                    s, o, u = {},
                    a, f = [];
                a = i.formatter || this.defaultFormatter;
                var u = n.hoverPoints,
                    l, c = this.shared;
                clearTimeout(this.hideTimer), this.followPointer = h(e)[0].series.tooltipOptions.followPointer, o = this.getAnchor(e, t), s = o[0], o = o[1], c && (!e.series || !e.series.noSharedTooltip) ? (n.hoverPoints = e, u && Vt(u, function(e) {
                    e.setState()
                }), Vt(e, function(e) {
                    e.setState("hover"), f.push(e.getLabelConfig())
                }), u = {
                    x: e[0].category,
                    y: e[0].y
                }, u.points = f, e = e[0]) : u = e.getLabelConfig(), a = a.call(u, this), u = e.series, a === !1 ? this.hide() : (this.isHidden && (tn(r), r.attr("opacity", 1).show()), r.attr({
                    text: a
                }), l = i.borderColor || e.color || u.color || "#606060", r.attr({
                    stroke: l
                }), this.updatePosition({
                    plotX: s,
                    plotY: o
                }), this.isHidden = !1), Yt(n, "tooltipRefresh", {
                    text: a,
                    x: s + n.plotLeft,
                    y: o + n.plotTop,
                    borderColor: l
                })
            },
            updatePosition: function(e) {
                var t = this.chart,
                    n = this.label,
                    n = (this.options.positioner || this.getPosition).call(this, n.width, n.height, e);
                this.move(z(n.x), z(n.y), e.plotX + t.plotLeft, e.plotY + t.plotTop)
            }
        };
        var pn = Highcharts.Pointer = function(e, t) {
            this.init(e, t)
        };
        pn.prototype = {
            init: function(e, t) {
                var n = t.chart,
                    r = n.events,
                    i = ft ? "" : n.zoomType,
                    n = e.inverted,
                    s;
                this.options = t, this.chart = e, this.zoomX = s = /x/.test(i), this.zoomY = i = /y/.test(i), this.zoomHor = s && !n || i && n, this.zoomVert = i && !n || s && n, this.runChartClick = r && !!r.click, this.pinchDown = [], this.lastValidTouch = {}, t.tooltip.enabled && (e.tooltip = new j(e, t.tooltip)), this.setDOMEvents()
            },
            normalize: function(t, n) {
                var r, i, t = t || R.event;
                return t.target || (t.target = t.srcElement), t = Zt(t), i = t.touches ? t.touches.item(0) : t, n || (this.chartPosition = n = Jt(this.chart.container)), i.pageX === I ? (r = V(t.x, t.clientX - n.left), i = t.y) : (r = i.pageX - n.left, i = i.pageY - n.top), e(t, {
                    chartX: z(r),
                    chartY: z(i)
                })
            },
            getCoordinates: function(e) {
                var t = {
                    xAxis: [],
                    yAxis: []
                };
                return Vt(this.chart.axes, function(n) {
                    t[n.isXAxis ? "xAxis" : "yAxis"].push({
                        axis: n,
                        value: n.toValue(e[n.horiz ? "chartX" : "chartY"])
                    })
                }), t
            },
            getIndex: function(e) {
                var t = this.chart;
                return t.inverted ? t.plotHeight + t.plotTop - e.chartY : e.chartX - t.plotLeft
            },
            runPointActions: function(e) {
                var t = this,
                    n = t.chart,
                    r = n.series,
                    i = n.tooltip,
                    s, o, u = n.hoverPoint,
                    a = n.hoverSeries,
                    f, l, c = n.chartWidth,
                    h = t.getIndex(e);
                if (i && t.options.tooltip.shared && (!a || !a.noSharedTooltip)) {
                    o = [], f = r.length;
                    for (l = 0; l < f; l++)
                        r[l].visible && r[l].options.enableMouseTracking !== !1 && !r[l].noSharedTooltip && r[l].tooltipPoints.length && (s = r[l].tooltipPoints[h]) && s.series && (s._dist = J(h - s.clientX), c = $(c, s._dist), o.push(s));
                    for (f = o.length; f--;)
                        o[f]._dist > c && o.splice(f, 1);
                    o.length && o[0].clientX !== t.hoverX && (i.refresh(o, e), t.hoverX = o[0].clientX)
                }
                a && a.tracker ? (s = a.tooltipPoints[h]) && s !== u && s.onMouseOver(e) : i && i.followPointer && !i.isHidden && (r = i.getAnchor([{}], e), i.updatePosition({
                    plotX: r[0],
                    plotY: r[1]
                })), i && !t._onDocumentMouseMove && (t._onDocumentMouseMove = function(e) {
                    t.onDocumentMouseMove(e)
                }, Qt(q, "mousemove", t._onDocumentMouseMove)), Vt(n.axes, function(t) {
                    t.drawCrosshair(e, p(s, u))
                })
            },
            reset: function(e) {
                var t = this.chart,
                    n = t.hoverSeries,
                    r = t.hoverPoint,
                    i = t.tooltip,
                    s = i && i.shared ? t.hoverPoints : r;
                (e = e && i && s) && h(s)[0].plotX === I && (e = !1), e ? (i.refresh(s), r && r.setState(r.state, !0)) : (r && r.onMouseOut(), n && n.onMouseOut(), i && i.hide(), this._onDocumentMouseMove && (Gt(q, "mousemove", this._onDocumentMouseMove), this._onDocumentMouseMove = null), Vt(t.axes, function(e) {
                    e.hideCrosshair()
                }), this.hoverX = null)
            },
            scaleGroups: function(e, t) {
                var n = this.chart,
                    r;
                Vt(n.series, function(i) {
                    r = e || i.getPlotBox(), i.xAxis && i.xAxis.zoomEnabled && (i.group.attr(r), i.markerGroup && (i.markerGroup.attr(r), i.markerGroup.clip(t ? n.clipRect : null)), i.dataLabelsGroup && i.dataLabelsGroup.attr(r))
                }), n.clipRect.attr(t || n.clipBox)
            },
            pinchTranslate: function(e, t, n, r, i, s, o, u) {
                e && this.pinchTranslateDirection(!0, n, r, i, s, o, u), t && this.pinchTranslateDirection(!1, n, r, i, s, o, u)
            },
            pinchTranslateDirection: function(e, t, n, r, i, s, o, u) {
                var a = this.chart,
                    f = e ? "x" : "y",
                    l = e ? "X" : "Y",
                    c = "chart" + l,
                    h = e ? "width" : "height",
                    p = a["plot" + (e ? "Left" : "Top")],
                    d, v, m = u || 1,
                    g = a.inverted,
                    y = a.bounds[e ? "h" : "v"],
                    b = t.length === 1,
                    w = t[0][c],
                    E = n[0][c],
                    S = !b && t[1][c],
                    x = !b && n[1][c],
                    T, n = function() {
                        !b && J(w - S) > 20 && (m = u || J(E - x) / J(w - S)), v = (p - E) / m + w, d = a["plot" + (e ? "Width" : "Height")] / m
                    };
                n(), t = v, t < y.min ? (t = y.min, T = !0) : t + d > y.max && (t = y.max - d, T = !0), T ? (E -= .8 * (E - o[f][0]), b || (x -= .8 * (x - o[f][1])), n()) : o[f] = [E, x], g || (s[f] = v - p, s[h] = d), s = g ? 1 / m : m, i[h] = d, i[f] = t, r[g ? e ? "scaleY" : "scaleX" : "scale" + l] = m, r["translate" + l] = s * p + (E - s * w)
            },
            pinch: function(t) {
                var n = this,
                    r = n.chart,
                    i = n.pinchDown,
                    s = r.tooltip && r.tooltip.options.followTouchMove,
                    o = t.touches,
                    u = o.length,
                    a = n.lastValidTouch,
                    f = n.zoomHor || n.pinchHor,
                    l = n.zoomVert || n.pinchVert,
                    c = f || l,
                    h = n.selectionMarker,
                    p = {},
                    d = u === 1 && (n.inClass(t.target, "highcharts-tracker") && r.runTrackerClick || r.runChartClick),
                    v = {};
                (c || s) && !d && t.preventDefault(), Kt(o, function(e) {
                    return n.normalize(e)
                }), t.type === "touchstart" ? (Vt(o, function(e, t) {
                    i[t] = {
                        chartX: e.chartX,
                        chartY: e.chartY
                    }
                }), a.x = [i[0].chartX, i[1] && i[1].chartX], a.y = [i[0].chartY, i[1] && i[1].chartY], Vt(r.axes, function(e) {
                    if (e.zoomEnabled) {
                        var t = r.bounds[e.horiz ? "h" : "v"],
                            n = e.minPixelPadding,
                            i = e.toPixels(e.dataMin),
                            s = e.toPixels(e.dataMax),
                            o = $(i, s),
                            i = V(i, s);
                        t.min = $(e.pos, o - n), t.max = V(e.pos + e.len, i + n)
                    }
                })) : i.length && (h || (n.selectionMarker = h = e({
                    destroy: wt
                }, r.plotBox)), n.pinchTranslate(f, l, i, o, p, h, v, a), n.hasPinched = c, n.scaleGroups(p, v), !c && s && u === 1 && this.runPointActions(n.normalize(t)))
            },
            dragStart: function(e) {
                var t = this.chart;
                t.mouseIsDown = e.type, t.cancelClick = !1, t.mouseDownX = this.mouseDownX = e.chartX, t.mouseDownY = this.mouseDownY = e.chartY
            },
            drag: function(e) {
                var t = this.chart,
                    n = t.options.chart,
                    r = e.chartX,
                    i = e.chartY,
                    s = this.zoomHor,
                    o = this.zoomVert,
                    u = t.plotLeft,
                    a = t.plotTop,
                    f = t.plotWidth,
                    l = t.plotHeight,
                    c, h = this.mouseDownX,
                    p = this.mouseDownY;
                r < u ? r = u : r > u + f && (r = u + f), i < a ? i = a : i > a + l && (i = a + l), this.hasDragged = Math.sqrt(Math.pow(h - r, 2) + Math.pow(p - i, 2)), this.hasDragged > 10 && (c = t.isInsidePlot(h - u, p - a), t.hasCartesianSeries && (this.zoomX || this.zoomY) && c && !this.selectionMarker && (this.selectionMarker = t.renderer.rect(u, a, s ? 1 : f, o ? 1 : l, 0).attr({
                    fill: n.selectionMarkerFill || "rgba(69,114,167,0.25)",
                    zIndex: 7
                }).add()), this.selectionMarker && s && (r -= h, this.selectionMarker.attr({
                    width: J(r),
                    x: (r > 0 ? 0 : r) + h
                })), this.selectionMarker && o && (r = i - p, this.selectionMarker.attr({
                    height: J(r),
                    y: (r > 0 ? 0 : r) + p
                })), c && !this.selectionMarker && n.panning && t.pan(e, n.panning))
            },
            drop: function(t) {
                var n = this.chart,
                    r = this.hasPinched;
                if (this.selectionMarker) {
                    var i = {
                            xAxis: [],
                            yAxis: [],
                            originalEvent: t.originalEvent || t
                        },
                        s = this.selectionMarker,
                        o = s.x,
                        u = s.y,
                        a;
                    if (this.hasDragged || r)
                        Vt(n.axes, function(e) {
                            if (e.zoomEnabled) {
                                var t = e.horiz,
                                    n = e.toValue(t ? o : u),
                                    t = e.toValue(t ? o + s.width : u + s.height);
                                !isNaN(n) && !isNaN(t) && (i[e.coll].push({
                                    axis: e,
                                    min: $(n, t),
                                    max: V(n, t)
                                }), a = !0)
                            }
                        }), a && Yt(n, "selection", i, function(t) {
                            n.zoom(e(t, r ? {
                                animation: !1
                            } : null))
                        });
                    this.selectionMarker = this.selectionMarker.destroy(), r && this.scaleGroups()
                }
                n && (d(n.container, {
                    cursor: n._cursor
                }), n.cancelClick = this.hasDragged > 10, n.mouseIsDown = this.hasDragged = this.hasPinched = !1, this.pinchDown = [])
            },
            onContainerMouseDown: function(e) {
                e = this.normalize(e), e.preventDefault && e.preventDefault(), this.dragStart(e)
            },
            onDocumentMouseUp: function(e) {
                this.drop(e)
            },
            onDocumentMouseMove: function(e) {
                var t = this.chart,
                    n = this.chartPosition,
                    r = t.hoverSeries,
                    e = this.normalize(e, n);
                n && r && !this.inClass(e.target, "highcharts-tracker") && !t.isInsidePlot(e.chartX - t.plotLeft, e.chartY - t.plotTop) && this.reset()
            },
            onContainerMouseLeave: function() {
                this.reset(), this.chartPosition = null
            },
            onContainerMouseMove: function(e) {
                var t = this.chart,
                    e = this.normalize(e);
                t.mouseIsDown === "mousedown" && this.drag(e), (this.inClass(e.target, "highcharts-tracker") || t.isInsidePlot(e.chartX - t.plotLeft, e.chartY - t.plotTop)) && !t.openMenu && this.runPointActions(e)
            },
            inClass: function(e, t) {
                for (var n; e;) {
                    if (n = c(e, "class")) {
                        if (n.indexOf(t) !== -1)
                            return !0;
                        if (n.indexOf("highcharts-container") !== -1)
                            return !1
                    }
                    e = e.parentNode
                }
            },
            onTrackerMouseOut: function(e) {
                var t = this.chart.hoverSeries,
                    n = (e = e.relatedTarget || e.toElement) && e.point && e.point.series;
                t && !t.options.stickyTracking && !this.inClass(e, "highcharts-tooltip") && n !== t && t.onMouseOut()
            },
            onContainerClick: function(t) {
                var n = this.chart,
                    r = n.hoverPoint,
                    i = n.plotLeft,
                    s = n.plotTop,
                    o = n.inverted,
                    u, a, f, t = this.normalize(t);
                t.cancelBubble = !0, n.cancelClick || (r && this.inClass(t.target, "highcharts-tracker") ? (u = this.chartPosition, a = r.plotX, f = r.plotY, e(r, {
                    pageX: u.left + i + (o ? n.plotWidth - f : a),
                    pageY: u.top + s + (o ? n.plotHeight - a : f)
                }), Yt(r.series, "click", e(t, {
                    point: r
                })), n.hoverPoint && r.firePointEvent("click", t)) : (e(t, this.getCoordinates(t)), n.isInsidePlot(t.chartX - i, t.chartY - s) && Yt(n, "click", t)))
            },
            onContainerTouchStart: function(e) {
                var t = this.chart;
                e.touches.length === 1 ? (e = this.normalize(e), t.isInsidePlot(e.chartX - t.plotLeft, e.chartY - t.plotTop) ? (this.runPointActions(e), this.pinch(e)) : this.reset()) : e.touches.length === 2 && this.pinch(e)
            },
            onContainerTouchMove: function(e) {
                (e.touches.length === 1 || e.touches.length === 2) && this.pinch(e)
            },
            onDocumentTouchEnd: function(e) {
                this.drop(e)
            },
            setDOMEvents: function() {
                var e = this,
                    t = e.chart.container,
                    n;
                this._events = n = [
                    [t, "onmousedown", "onContainerMouseDown"],
                    [t, "onmousemove", "onContainerMouseMove"],
                    [t, "onclick", "onContainerClick"],
                    [t, "mouseleave", "onContainerMouseLeave"],
                    [q, "mouseup", "onDocumentMouseUp"]
                ], ct && n.push([t, "ontouchstart", "onContainerTouchStart"], [t, "ontouchmove", "onContainerTouchMove"], [q, "touchend", "onDocumentTouchEnd"]), Vt(n, function(t) {
                    e["_" + t[2]] = function(n) {
                        e[t[2]](n)
                    }, t[1].indexOf("on") === 0 ? t[0][t[1]] = e["_" + t[2]] : Qt(t[0], t[1], e["_" + t[2]])
                })
            },
            destroy: function() {
                var e = this;
                Vt(e._events, function(t) {
                    t[1].indexOf("on") === 0 ? t[0][t[1]] = null : Gt(t[0], t[1], e["_" + t[2]])
                }), delete e._events, clearInterval(e.tooltipTimeout)
            }
        }, Ut = Highcharts.TrackerMixin = {
            drawTrackerPoint: function() {
                var e = this,
                    t = e.chart,
                    n = t.pointer,
                    r = e.options.cursor,
                    i = r && {
                            cursor: r
                        },
                    s = function(n) {
                        var r = n.target,
                            i;
                        t.hoverSeries !== e && e.onMouseOver();
                        for (; r && !i;)
                            i = r.point, r = r.parentNode;
                        i !== I && i !== t.hoverPoint && i.onMouseOver(n)
                    };
                Vt(e.points, function(e) {
                    e.graphic && (e.graphic.element.point = e), e.dataLabel && (e.dataLabel.element.point = e)
                }), e._hasTracking || (Vt(e.trackerGroups, function(t) {
                    e[t] && (e[t].addClass("highcharts-tracker").on("mouseover", s).on("mouseout", function(e) {
                        n.onTrackerMouseOut(e)
                    }).css(i), ct) && e[t].on("touchstart", s)
                }), e._hasTracking = !0)
            },
            drawTrackerGraph: function() {
                var e = this,
                    t = e.options,
                    n = t.trackByArea,
                    r = [].concat(n ? e.areaPath : e.graphPath),
                    i = r.length,
                    s = e.chart,
                    o = s.pointer,
                    u = s.renderer,
                    a = s.options.tooltip.snap,
                    f = e.tracker,
                    l = t.cursor,
                    c = l && {
                            cursor: l
                        },
                    l = e.singlePoints,
                    h, p = function() {
                        s.hoverSeries !== e && e.onMouseOver()
                    };
                if (i && !n)
                    for (h = i + 1; h--;)
                        r[h] === "M" && r.splice(h + 1, 0, r[h + 1] - a, r[h + 2], "L"), (h && r[h] === "M" || h === i) && r.splice(h, 0, "L", r[h - 2] + a, r[h - 1]);
                for (h = 0; h < l.length; h++)
                    i = l[h], r.push("M", i.plotX - a, i.plotY, "L", i.plotX + a, i.plotY);
                f ? f.attr({
                    d: r
                }) : (e.tracker = u.path(r).attr({
                    "stroke-linejoin": "round",
                    visibility: e.visible ? "visible" : "hidden",
                    stroke: Nt,
                    fill: n ? Nt : xt,
                    "stroke-width": t.lineWidth + (n ? 0 : 2 * a),
                    zIndex: 2
                }).add(e.group), Vt([e.tracker, e.markerGroup], function(e) {
                    e.addClass("highcharts-tracker").on("mouseover", p).on("mouseout", function(e) {
                        o.onTrackerMouseOut(e)
                    }).css(c), ct && e.on("touchstart", p)
                }))
            }
        };
        if (R.PointerEvent || R.MSPointerEvent) {
            var dn = {};
            pn.prototype.getWebkitTouches = function() {
                var e, t = [];
                t.item = function(e) {
                    return this[e]
                };
                for (e in dn)
                    dn.hasOwnProperty(e) && t.push({
                        pageX: dn[e].pageX,
                        pageY: dn[e].pageY,
                        target: dn[e].target
                    });
                return t
            }, b(pn.prototype, "init", function(e, t, n) {
                t.container.style["-ms-touch-action"] = t.container.style["touch-action"] = "none", e.call(this, t, n)
            }), b(pn.prototype, "setDOMEvents", function(e) {
                var t = this;
                e.apply(this, Array.prototype.slice.call(arguments, 1)), Vt([
                    [this.chart.container, "PointerDown", "touchstart", "onContainerTouchStart", function(e) {
                        dn[e.pointerId] = {
                            pageX: e.pageX,
                            pageY: e.pageY,
                            target: e.currentTarget
                        }
                    }],
                    [this.chart.container, "PointerMove", "touchmove", "onContainerTouchMove", function(e) {
                        dn[e.pointerId] = {
                            pageX: e.pageX,
                            pageY: e.pageY
                        }, dn[e.pointerId].target || (dn[e.pointerId].target = e.currentTarget)
                    }],
                    [document, "PointerUp", "touchend", "onDocumentTouchEnd", function(e) {
                        delete dn[e.pointerId]
                    }]
                ], function(e) {
                    Qt(e[0], window.PointerEvent ? e[1].toLowerCase() : "MS" + e[1], function(n) {
                        n = n.originalEvent;
                        if (n.pointerType === "touch" || n.pointerType === n.MSPOINTER_TYPE_TOUCH)
                            e[4](n), t[e[3]]({
                                type: e[2],
                                target: n.currentTarget,
                                preventDefault: wt,
                                touches: t.getWebkitTouches()
                            })
                    })
                })
            })
        }
        var vn = Highcharts.Legend = function(e, t) {
            this.init(e, t)
        };
        vn.prototype = {
            init: function(e, r) {
                var i = this,
                    s = r.itemStyle,
                    o = p(r.padding, 8),
                    u = r.itemMarginTop || 0;
                this.options = r, r.enabled && (i.baseline = n(s.fontSize) + 3 + u, i.itemStyle = s, i.itemHiddenStyle = t(s, r.itemHiddenStyle), i.itemMarginTop = u, i.padding = o, i.initialItemX = o, i.initialItemY = o - 5, i.maxItemWidth = 0, i.chart = e, i.itemHeight = 0, i.lastLineHeight = 0, i.symbolWidth = p(r.symbolWidth, 16), i.pages = [], i.render(), Qt(i.chart, "endResize", function() {
                    i.positionCheckboxes()
                }))
            },
            colorizeItem: function(e, t) {
                var n = this.options,
                    r = e.legendItem,
                    i = e.legendLine,
                    s = e.legendSymbol,
                    o = this.itemHiddenStyle.color,
                    n = t ? n.itemStyle.color : o,
                    u = t ? e.legendColor || e.color : o,
                    o = e.options && e.options.marker,
                    a = {
                        stroke: u,
                        fill: u
                    },
                    f;
                r && r.css({
                    fill: n,
                    color: n
                }), i && i.attr({
                    stroke: u
                });
                if (s) {
                    if (o && s.isMarker)
                        for (f in o = e.convertAttribs(o), o)
                            r = o[f], r !== I && (a[f] = r);
                    s.attr(a)
                }
            },
            positionItem: function(e) {
                var t = this.options,
                    n = t.symbolPadding,
                    t = !t.rtl,
                    r = e._legendItemPos,
                    i = r[0],
                    r = r[1],
                    s = e.checkbox;
                e.legendGroup && e.legendGroup.translate(t ? i : this.legendWidth - i - 2 * n - 4, r), s && (s.x = i, s.y = r)
            },
            destroyItem: function(e) {
                var t = e.checkbox;
                Vt(["legendItem", "legendLine", "legendSymbol", "legendGroup"], function(t) {
                    e[t] && (e[t] = e[t].destroy())
                }), t && L(e.checkbox)
            },
            destroy: function() {
                var e = this.group,
                    t = this.box;
                t && (this.box = t.destroy()), e && (this.group = e.destroy())
            },
            positionCheckboxes: function(e) {
                var t = this.group.alignAttr,
                    n, r = this.clipHeight || this.legendHeight;
                t && (n = t.translateY, Vt(this.allItems, function(i) {
                    var s = i.checkbox,
                        o;
                    s && (o = n + s.y + (e || 0) + 3, d(s, {
                        left: t.translateX + i.legendItemWidth + s.x - 20 + "px",
                        top: o + "px",
                        display: o > n - 6 && o < n + r - 6 ? "" : xt
                    }))
                }))
            },
            renderTitle: function() {
                var e = this.padding,
                    t = this.options.title,
                    n = 0;
                t.text && (this.title || (this.title = this.chart.renderer.label(t.text, e - 3, e - 4, null, null, null, null, null, "legend-title").attr({
                    zIndex: 1
                }).css(t.style).add(this.group)), e = this.title.getBBox(), n = e.height, this.offsetWidth = e.width, this.contentGroup.attr({
                    translateY: n
                })), this.titleHeight = n
            },
            renderItem: function(e) {
                var n, r = this,
                    i = r.chart,
                    s = i.renderer,
                    o = r.options,
                    u = o.layout === "horizontal",
                    a = r.symbolWidth,
                    f = o.symbolPadding,
                    l = r.itemStyle,
                    c = r.itemHiddenStyle,
                    h = r.padding,
                    d = u ? p(o.itemDistance, 8) : 0,
                    m = !o.rtl,
                    g = o.width,
                    y = o.itemMarginBottom || 0,
                    b = r.itemMarginTop,
                    E = r.initialItemX,
                    S = e.legendItem,
                    x = e.series && e.series.drawLegendSymbol ? e.series : e,
                    T = x.options,
                    T = T && T.showCheckbox,
                    N = o.useHTML;
                !S && (e.legendGroup = s.g("legend-item").attr({
                    zIndex: 1
                }).add(r.scrollGroup), x.drawLegendSymbol(r, e), e.legendItem = S = s.text(o.labelFormat ? w(o.labelFormat, e) : o.labelFormatter.call(e), m ? a + f : -f, r.baseline, N).css(t(e.visible ? l : c)).attr({
                    align: m ? "left" : "right",
                    zIndex: 2
                }).add(e.legendGroup), (N ? S : e.legendGroup).on("mouseover", function() {
                    e.setState("hover"), S.css(r.options.itemHoverStyle)
                }).on("mouseout", function() {
                    S.css(e.visible ? l : c), e.setState()
                }).on("click", function(t) {
                    var n = function() {
                            e.setVisible()
                        },
                        t = {
                            browserEvent: t
                        };
                    e.firePointEvent ? e.firePointEvent("legendItemClick", t, n) : Yt(e, "legendItemClick", t, n)
                }), r.colorizeItem(e, e.visible), T) && (e.checkbox = v("input", {
                    type: "checkbox",
                    checked: e.selected,
                    defaultChecked: e.selected
                }, o.itemCheckboxStyle, i.container), Qt(e.checkbox, "click", function(t) {
                    Yt(e, "checkboxClick", {
                        checked: t.target.checked
                    }, function() {
                        e.select()
                    })
                })), s = S.getBBox(), n = e.legendItemWidth = o.itemWidth || e.legendItemWidth || a + f + s.width + d + (T ? 20 : 0), o = n, r.itemHeight = a = z(e.legendItemHeight || s.height), u && r.itemX - E + o > (g || i.chartWidth - 2 * h - E) && (r.itemX = E, r.itemY += b + r.lastLineHeight + y, r.lastLineHeight = 0), r.maxItemWidth = V(r.maxItemWidth, o), r.lastItemY = b + r.itemY + y, r.lastLineHeight = V(a, r.lastLineHeight), e._legendItemPos = [r.itemX, r.itemY], u ? r.itemX += o : (r.itemY += b + a + y, r.lastLineHeight = a), r.offsetWidth = g || V((u ? r.itemX - E - d : o) + h, r.offsetWidth)
            },
            getAllItems: function() {
                var e = [];
                return Vt(this.chart.series, function(t) {
                    var n = t.options;
                    p(n.showInLegend, l(n.linkedTo) ? !1 : I, !0) && (e = e.concat(t.legendItems || (n.legendType === "point" ? t.data : t)))
                }), e
            },
            render: function() {
                var t = this,
                    n = t.chart,
                    r = n.renderer,
                    i = t.group,
                    s, o, u, a, f = t.box,
                    l = t.options,
                    c = t.padding,
                    h = l.borderWidth,
                    p = l.backgroundColor;
                t.itemX = t.initialItemX, t.itemY = t.initialItemY, t.offsetWidth = 0, t.lastItemY = 0, i || (t.group = i = r.g("legend").attr({
                    zIndex: 7
                }).add(), t.contentGroup = r.g().attr({
                    zIndex: 1
                }).add(i), t.scrollGroup = r.g().add(t.contentGroup)), t.renderTitle(), s = t.getAllItems(), T(s, function(e, t) {
                    return (e.options && e.options.legendIndex || 0) - (t.options && t.options.legendIndex || 0)
                }), l.reversed && s.reverse(), t.allItems = s, t.display = o = !!s.length, Vt(s, function(e) {
                    t.renderItem(e)
                }), u = l.width || t.offsetWidth, a = t.lastItemY + t.lastLineHeight + t.titleHeight, a = t.handleOverflow(a);
                if (h || p)
                    u += c, a += c, f ? u > 0 && a > 0 && (f[f.isNew ? "attr" : "animate"](f.crisp(null, null, null, u, a)), f.isNew = !1) : (t.box = f = r.rect(0, 0, u, a, l.borderRadius, h || 0).attr({
                        stroke: l.borderColor,
                        "stroke-width": h || 0,
                        fill: p || xt
                    }).add(i).shadow(l.shadow), f.isNew = !0), f[o ? "show" : "hide"]();
                t.legendWidth = u, t.legendHeight = a, Vt(s, function(e) {
                    t.positionItem(e)
                }), o && i.align(e({
                    width: u,
                    height: a
                }, l), !0, "spacingBox"), n.isResizing || this.positionCheckboxes()
            },
            handleOverflow: function(e) {
                var t = this,
                    n = this.chart,
                    r = n.renderer,
                    i = this.options,
                    s = i.y,
                    s = n.spacingBox.height + (i.verticalAlign === "top" ? -s : s) - this.padding,
                    o = i.maxHeight,
                    u, a = this.clipRect,
                    f = i.navigation,
                    l = p(f.animation, !0),
                    c = f.arrowSize || 12,
                    h = this.nav,
                    d = this.pages,
                    v, m = this.allItems;
                return i.layout === "horizontal" && (s /= 2), o && (s = $(s, o)), d.length = 0, e > s && !i.useHTML ? (this.clipHeight = u = s - 20 - this.titleHeight - this.padding, this.currentPage = p(this.currentPage, 1), this.fullHeight = e, Vt(m, function(e, t) {
                    var n = e._legendItemPos[1],
                        r = z(e.legendItem.bBox.height),
                        i = d.length;
                    (!i || n - d[i - 1] > u) && d.push(v || n), t === m.length - 1 && n + r - d[i - 1] > u && d.push(n), n !== v && (v = n)
                }), a || (a = t.clipRect = r.clipRect(0, this.padding, 9999, 0), t.contentGroup.clip(a)), a.attr({
                    height: u
                }), h || (this.nav = h = r.g().attr({
                    zIndex: 1
                }).add(this.group), this.up = r.symbol("triangle", 0, 0, c, c).on("click", function() {
                    t.scroll(-1, l)
                }).add(h), this.pager = r.text("", 15, 10).css(f.style).add(h), this.down = r.symbol("triangle-down", 0, 0, c, c).on("click", function() {
                    t.scroll(1, l)
                }).add(h)), t.scroll(0), e = s) : h && (a.attr({
                    height: n.chartHeight
                }), h.hide(), this.scrollGroup.attr({
                    translateY: 1
                }), this.clipHeight = 0), e
            },
            scroll: function(e, t) {
                var n = this.pages,
                    r = n.length,
                    i = this.currentPage + e,
                    s = this.clipHeight,
                    o = this.options.navigation,
                    u = o.activeColor,
                    o = o.inactiveColor,
                    a = this.pager,
                    f = this.padding;
                i > r && (i = r), i > 0 && (t !== I && M(t, this.chart), this.nav.attr({
                    translateX: f,
                    translateY: s + this.padding + 7 + this.titleHeight,
                    visibility: "visible"
                }), this.up.attr({
                    fill: i === 1 ? o : u
                }).css({
                    cursor: i === 1 ? "default" : "pointer"
                }), a.attr({
                    text: i + "/" + r
                }), this.down.attr({
                    x: 18 + this.pager.getBBox().width,
                    fill: i === r ? o : u
                }).css({
                    cursor: i === r ? "default" : "pointer"
                }), n = -n[i - 1] + this.initialItemY, this.scrollGroup.animate({
                    translateY: n
                }), this.currentPage = i, this.positionCheckboxes(n))
            }
        }, fn = Highcharts.LegendSymbolMixin = {
            drawRectangle: function(e, t) {
                var n = e.options.symbolHeight || 12;
                t.legendSymbol = this.chart.renderer.rect(0, e.baseline - 5 - n / 2, e.symbolWidth, n, p(e.options.symbolRadius, 2)).attr({
                    zIndex: 3
                }).add(t.legendGroup)
            },
            drawLineMarker: function(e) {
                var t = this.options,
                    n = t.marker,
                    r;
                r = e.symbolWidth;
                var i = this.chart.renderer,
                    s = this.legendGroup,
                    e = e.baseline - z(i.fontMetrics(e.options.itemStyle.fontSize).b * .3),
                    o;
                t.lineWidth && (o = {
                    "stroke-width": t.lineWidth
                }, t.dashStyle && (o.dashstyle = t.dashStyle), this.legendLine = i.path(["M", 0, e, "L", r, e]).attr(o).add(s)), n && n.enabled && (t = n.radius, this.legendSymbol = r = i.symbol(this.symbol, r / 2 - t, e - t, 2 * t, 2 * t).add(s), r.isMarker = !0)
            }
        }, /Trident\/7\.0/.test(Z) && b(vn.prototype, "positionItem", function(e, t) {
            var n = this,
                r = function() {
                    t._legendItemPos && e.call(n, t)
                };
            n.chart.renderer.forExport ? r() : setTimeout(r)
        }), F.prototype = {
            init: function(e, n) {
                var r, i = e.series;
                e.series = null, r = t(vt, e), r.series = e.series = i, this.userOptions = e, i = r.chart, this.margin = this.splashArray("margin", i), this.spacing = this.splashArray("spacing", i);
                var s = i.events;
                this.bounds = {
                    h: {},
                    v: {}
                }, this.callback = n, this.isResizing = 0, this.options = r, this.axes = [], this.series = [], this.hasCartesianSeries = i.showAxes;
                var o = this,
                    u;
                o.index = Et.length, Et.push(o), i.reflow !== !1 && Qt(o, "load", function() {
                    o.initReflow()
                });
                if (s)
                    for (u in s)
                        Qt(o, u, s[u]);
                o.xAxis = [], o.yAxis = [], o.animation = ft ? !1 : p(i.animation, !0), o.pointCount = 0, o.counters = new x, o.firstRender()
            },
            initSeries: function(e) {
                var t = this.options.chart;
                return (t = qt[e.type || t.type || t.defaultSeriesType]) || A(17, !0), t = new t, t.init(this, e), t
            },
            isInsidePlot: function(e, t, n) {
                var r = n ? t : e,
                    e = n ? e : t;
                return r >= 0 && r <= this.plotWidth && e >= 0 && e <= this.plotHeight
            },
            adjustTickAmounts: function() {
                this.options.chart.alignTicks !== !1 && Vt(this.axes, function(e) {
                    e.adjustTickAmount()
                }), this.maxTicks = null
            },
            redraw: function(t) {
                var n = this.axes,
                    r = this.series,
                    i = this.pointer,
                    s = this.legend,
                    o = this.isDirtyLegend,
                    u, a, f = this.isDirtyBox,
                    l = r.length,
                    c = l,
                    h = this.renderer,
                    p = h.isHidden(),
                    d = [];
                M(t, this), p && this.cloneRenderTo();
                for (this.layOutTitles(); c--;)
                    if (t = r[c], t.options.stacking && (u = !0, t.isDirty)) {
                        a = !0;
                        break
                    }
                if (a)
                    for (c = l; c--;)
                        if (t = r[c], t.options.stacking)
                            t.isDirty = !0;
                Vt(r, function(e) {
                    e.isDirty && e.options.legendType === "point" && (o = !0)
                }), o && s.options.enabled && (s.render(), this.isDirtyLegend = !1), u && this.getStacks(), this.hasCartesianSeries && (this.isResizing || (this.maxTicks = null, Vt(n, function(e) {
                    e.setScale()
                })), this.adjustTickAmounts(), this.getMargins(), Vt(n, function(e) {
                    e.isDirty && (f = !0)
                }), Vt(n, function(t) {
                    t.isDirtyExtremes && (t.isDirtyExtremes = !1, d.push(function() {
                        Yt(t, "afterSetExtremes", e(t.eventArgs, t.getExtremes())), delete t.eventArgs
                    })), (f || u) && t.redraw()
                })), f && this.drawChartBox(), Vt(r, function(e) {
                    e.isDirty && e.visible && (!e.isCartesian || e.xAxis) && e.redraw()
                }), i && i.reset && i.reset(!0), h.draw(), Yt(this, "redraw"), p && this.cloneRenderTo(!0), Vt(d, function(e) {
                    e.call()
                })
            },
            get: function(e) {
                var t = this.axes,
                    n = this.series,
                    r, i;
                for (r = 0; r < t.length; r++)
                    if (t[r].options.id === e)
                        return t[r];
                for (r = 0; r < n.length; r++)
                    if (n[r].options.id === e)
                        return n[r];
                for (r = 0; r < n.length; r++) {
                    i = n[r].points || [];
                    for (t = 0; t < i.length; t++)
                        if (i[t].id === e)
                            return i[t]
                }
                return null
            },
            getAxes: function() {
                var e = this,
                    t = this.options,
                    n = t.xAxis = h(t.xAxis || {}),
                    t = t.yAxis = h(t.yAxis || {});
                Vt(n, function(e, t) {
                    e.index = t, e.isX = !0
                }), Vt(t, function(e, t) {
                    e.index = t
                }), n = n.concat(t), Vt(n, function(t) {
                    new H(e, t)
                }), e.adjustTickAmounts()
            },
            getSelectedPoints: function() {
                var e = [];
                return Vt(this.series, function(t) {
                    e = e.concat($t(t.points || [], function(e) {
                        return e.selected
                    }))
                }), e
            },
            getSelectedSeries: function() {
                return $t(this.series, function(e) {
                    return e.selected
                })
            },
            getStacks: function() {
                var e = this;
                Vt(e.yAxis, function(e) {
                    e.stacks && e.hasVisibleSeries && (e.oldStacks = e.stacks)
                }), Vt(e.series, function(t) {
                    t.options.stacking && (t.visible === !0 || e.options.chart.ignoreHiddenSeries === !1) && (t.stackKey = t.type + p(t.options.stack, ""))
                })
            },
            showResetZoom: function() {
                var e = this,
                    t = vt.lang,
                    n = e.options.chart.resetZoomButton,
                    r = n.theme,
                    i = r.states,
                    s = n.relativeTo === "chart" ? null : "plotBox";
                this.resetZoomButton = e.renderer.button(t.resetZoom, null, null, function() {
                    e.zoomOut()
                }, r, i && i.hover).attr({
                    align: n.position.align,
                    title: t.resetZoomTitle
                }).add().align(n.position, !1, s)
            },
            zoomOut: function() {
                var e = this;
                Yt(e, "selection", {
                    resetSelection: !0
                }, function() {
                    e.zoom()
                })
            },
            zoom: function(e) {
                var t, n = this.pointer,
                    r = !1,
                    s;
                !e || e.resetSelection ? Vt(this.axes, function(e) {
                    t = e.zoom()
                }) : Vt(e.xAxis.concat(e.yAxis), function(e) {
                    var i = e.axis,
                        s = i.isXAxis;
                    if (n[s ? "zoomX" : "zoomY"] || n[s ? "pinchX" : "pinchY"])
                        t = i.zoom(e.min, e.max), i.displayBtn && (r = !0)
                }), s = this.resetZoomButton, r && !s ? this.showResetZoom() : !r && i(s) && (this.resetZoomButton = s.destroy()), t && this.redraw(p(this.options.chart.animation, e && e.animation, this.pointCount < 100))
            },
            pan: function(e, t) {
                var n = this,
                    r = n.hoverPoints,
                    i;
                r && Vt(r, function(e) {
                    e.setState()
                }), Vt(t === "xy" ? [1, 0] : [1], function(t) {
                    var r = e[t ? "chartX" : "chartY"],
                        s = n[t ? "xAxis" : "yAxis"][0],
                        o = n[t ? "mouseDownX" : "mouseDownY"],
                        u = (s.pointRange || 0) / 2,
                        a = s.getExtremes(),
                        f = s.toValue(o - r, !0) + u,
                        o = s.toValue(o + n[t ? "plotWidth" : "plotHeight"] - r, !0) - u;
                    s.series.length && f > $(a.dataMin, a.min) && o < V(a.dataMax, a.max) && (s.setExtremes(f, o, !1, !1, {
                        trigger: "pan"
                    }), i = !0), n[t ? "mouseDownX" : "mouseDownY"] = r
                }), i && n.redraw(!1), d(n.container, {
                    cursor: "move"
                })
            },
            setTitle: function(e, n) {
                var r, i = this,
                    s = i.options,
                    o;
                o = s.title = t(s.title, e), r = s.subtitle = t(s.subtitle, n), s = r, Vt([
                    ["title", e, o],
                    ["subtitle", n, s]
                ], function(e) {
                    var t = e[0],
                        n = i[t],
                        r = e[1],
                        e = e[2];
                    n && r && (i[t] = n = n.destroy()), e && e.text && !n && (i[t] = i.renderer.text(e.text, 0, 0, e.useHTML).attr({
                        align: e.align,
                        "class": "highcharts-" + t,
                        zIndex: e.zIndex || 4
                    }).css(e.style).add())
                }), i.layOutTitles()
            },
            layOutTitles: function() {
                var t = 0,
                    n = this.title,
                    r = this.subtitle,
                    i = this.options,
                    s = i.title,
                    i = i.subtitle,
                    o = this.spacingBox.width - 44;
                n && (n.css({
                    width: (s.width || o) + "px"
                }).align(e({
                    y: 15
                }, s), !1, "spacingBox"), !s.floating && !s.verticalAlign) && (t = n.getBBox().height, t >= 18 && t <= 25 && (t = 15)), r && (r.css({
                    width: (i.width || o) + "px"
                }).align(e({
                    y: t + s.margin
                }, i), !1, "spacingBox"), !i.floating && !i.verticalAlign && (t = X(t + r.getBBox().height))), this.titleOffset = t
            },
            getChartSize: function() {
                var e = this.options.chart,
                    t = this.renderToClone || this.renderTo;
                this.containerWidth = zt(t, "width"), this.containerHeight = zt(t, "height"), this.chartWidth = V(0, e.width || this.containerWidth || 600), this.chartHeight = V(0, p(e.height, this.containerHeight > 19 ? this.containerHeight : 400))
            },
            cloneRenderTo: function(e) {
                var t = this.renderToClone,
                    n = this.container;
                e ? t && (this.renderTo.appendChild(n), L(t), delete this.renderToClone) : (n && n.parentNode === this.renderTo && this.renderTo.removeChild(n), this.renderToClone = t = this.renderTo.cloneNode(0), d(t, {
                    position: "absolute",
                    top: "-9999px",
                    display: "block"
                }), q.body.appendChild(t), n && t.appendChild(n))
            },
            getContainer: function() {
                var t, i = this.options.chart,
                    s, o, u;
                this.renderTo = t = i.renderTo, u = "highcharts-" + pt++, r(t) && (this.renderTo = t = q.getElementById(t)), t || A(13, !0), s = n(c(t, "data-highcharts-chart")), !isNaN(s) && Et[s] && Et[s].destroy(), c(t, "data-highcharts-chart", this.index), t.innerHTML = "", t.offsetWidth || this.cloneRenderTo(), this.getChartSize(), s = this.chartWidth, o = this.chartHeight, this.container = t = v(St, {
                    className: "highcharts-container" + (i.className ? " " + i.className : ""),
                    id: u
                }, e({
                    position: "relative",
                    overflow: "hidden",
                    width: s + "px",
                    height: o + "px",
                    textAlign: "left",
                    lineHeight: "normal",
                    zIndex: 0,
                    "-webkit-tap-highlight-color": "rgba(0,0,0,0)"
                }, i.style), this.renderToClone || t), this._cursor = t.style.cursor, this.renderer = i.forExport ? new an(t, s, o, !0) : new lt(t, s, o), ft && this.renderer.create(this, t, s, o)
            },
            getMargins: function() {
                var e = this.spacing,
                    t, n = this.legend,
                    r = this.margin,
                    i = this.options.legend,
                    s = p(i.margin, 10),
                    o = i.x,
                    u = i.y,
                    a = i.align,
                    f = i.verticalAlign,
                    c = this.titleOffset;
                this.resetMargins(), t = this.axisOffset, c && !l(r[0]) && (this.plotTop = V(this.plotTop, c + this.options.title.margin + e[0])), n.display && !i.floating && (a === "right" ? l(r[1]) || (this.marginRight = V(this.marginRight, n.legendWidth - o + s + e[1])) : a === "left" ? l(r[3]) || (this.plotLeft = V(this.plotLeft, n.legendWidth + o + s + e[3])) : f === "top" ? l(r[0]) || (this.plotTop = V(this.plotTop, n.legendHeight + u + s + e[0])) : f === "bottom" && !l(r[2]) && (this.marginBottom = V(this.marginBottom, n.legendHeight - u + s + e[2]))), this.extraBottomMargin && (this.marginBottom += this.extraBottomMargin), this.extraTopMargin && (this.plotTop += this.extraTopMargin), this.hasCartesianSeries && Vt(this.axes, function(e) {
                    e.getOffset()
                }), l(r[3]) || (this.plotLeft += t[3]), l(r[0]) || (this.plotTop += t[0]), l(r[2]) || (this.marginBottom += t[2]), l(r[1]) || (this.marginRight += t[1]), this.setChartSize()
            },
            reflow: function(e) {
                var t = this,
                    n = t.options.chart,
                    r = t.renderTo,
                    i = n.width || zt(r, "width"),
                    s = n.height || zt(r, "height"),
                    n = e ? e.target : R,
                    r = function() {
                        t.container && (t.setSize(i, s, !1), t.hasUserSize = null)
                    };
                if (!t.hasUserSize && i && s && (n === R || n === q)) {
                    if (i !== t.containerWidth || s !== t.containerHeight)
                        clearTimeout(t.reflowTimeout), e ? t.reflowTimeout = setTimeout(r, 100) : r();
                    t.containerWidth = i, t.containerHeight = s
                }
            },
            initReflow: function() {
                var e = this,
                    t = function(t) {
                        e.reflow(t)
                    };
                Qt(R, "resize", t), Qt(e, "destroy", function() {
                    Gt(R, "resize", t)
                })
            },
            setSize: function(e, t, n) {
                var r = this,
                    i, s, o;
                r.isResizing += 1, o = function() {
                    r && Yt(r, "endResize", null, function() {
                        r.isResizing -= 1
                    })
                }, M(n, r), r.oldChartHeight = r.chartHeight, r.oldChartWidth = r.chartWidth, l(e) && (r.chartWidth = i = V(0, z(e)), r.hasUserSize = !!i), l(t) && (r.chartHeight = s = V(0, z(t))), (gt ? en : d)(r.container, {
                    width: i + "px",
                    height: s + "px"
                }, gt), r.setChartSize(!0), r.renderer.setSize(i, s, n), r.maxTicks = null, Vt(r.axes, function(e) {
                    e.isDirty = !0, e.setScale()
                }), Vt(r.series, function(e) {
                    e.isDirty = !0
                }), r.isDirtyLegend = !0, r.isDirtyBox = !0, r.getMargins(), r.redraw(n), r.oldChartHeight = null, Yt(r, "resize"), gt === !1 ? o() : setTimeout(o, gt && gt.duration || 500)
            },
            setChartSize: function(e) {
                var t = this.inverted,
                    n = this.renderer,
                    r = this.chartWidth,
                    i = this.chartHeight,
                    s = this.options.chart,
                    o = this.spacing,
                    u = this.clipOffset,
                    a, f, l, c;
                this.plotLeft = a = z(this.plotLeft), this.plotTop = f = z(this.plotTop), this.plotWidth = l = V(0, z(r - a - this.marginRight)), this.plotHeight = c = V(0, z(i - f - this.marginBottom)), this.plotSizeX = t ? c : l, this.plotSizeY = t ? l : c, this.plotBorderWidth = s.plotBorderWidth || 0, this.spacingBox = n.spacingBox = {
                    x: o[3],
                    y: o[0],
                    width: r - o[3] - o[1],
                    height: i - o[0] - o[2]
                }, this.plotBox = n.plotBox = {
                    x: a,
                    y: f,
                    width: l,
                    height: c
                }, r = 2 * W(this.plotBorderWidth / 2), t = X(V(r, u[3]) / 2), n = X(V(r, u[0]) / 2), this.clipBox = {
                    x: t,
                    y: n,
                    width: W(this.plotSizeX - V(r, u[1]) / 2 - t),
                    height: W(this.plotSizeY - V(r, u[2]) / 2 - n)
                }, e || Vt(this.axes, function(e) {
                    e.setAxisSize(), e.setAxisTranslation()
                })
            },
            resetMargins: function() {
                var e = this.spacing,
                    t = this.margin;
                this.plotTop = p(t[0], e[0]), this.marginRight = p(t[1], e[1]), this.marginBottom = p(t[2], e[2]), this.plotLeft = p(t[3], e[3]), this.axisOffset = [0, 0, 0, 0], this.clipOffset = [0, 0, 0, 0]
            },
            drawChartBox: function() {
                var e = this.options.chart,
                    t = this.renderer,
                    n = this.chartWidth,
                    r = this.chartHeight,
                    i = this.chartBackground,
                    s = this.plotBackground,
                    o = this.plotBorder,
                    u = this.plotBGImage,
                    a = e.borderWidth || 0,
                    f = e.backgroundColor,
                    l = e.plotBackgroundColor,
                    c = e.plotBackgroundImage,
                    h = e.plotBorderWidth || 0,
                    p, d = this.plotLeft,
                    v = this.plotTop,
                    m = this.plotWidth,
                    g = this.plotHeight,
                    y = this.plotBox,
                    b = this.clipRect,
                    w = this.clipBox;
                p = a + (e.shadow ? 8 : 0);
                if (a || f)
                    i ? i.animate(i.crisp(null, null, null, n - p, r - p)) : (i = {
                        fill: f || xt
                    }, a && (i.stroke = e.borderColor, i["stroke-width"] = a), this.chartBackground = t.rect(p / 2, p / 2, n - p, r - p, e.borderRadius, a).attr(i).add().shadow(e.shadow));
                l && (s ? s.animate(y) : this.plotBackground = t.rect(d, v, m, g, 0).attr({
                    fill: l
                }).add().shadow(e.plotShadow)), c && (u ? u.animate(y) : this.plotBGImage = t.image(c, d, v, m, g).add()), b ? b.animate({
                    width: w.width,
                    height: w.height
                }) : this.clipRect = t.clipRect(w), h && (o ? o.animate(o.crisp(null, d, v, m, g)) : this.plotBorder = t.rect(d, v, m, g, 0, -h).attr({
                    stroke: e.plotBorderColor,
                    "stroke-width": h,
                    zIndex: 1
                }).add()), this.isDirtyBox = !1
            },
            propFromSeries: function() {
                var e = this,
                    t = e.options.chart,
                    n, r = e.options.series,
                    i, s;
                Vt(["inverted", "angular", "polar"], function(o) {
                    n = qt[t.type || t.defaultSeriesType], s = e[o] || t[o] || n && n.prototype[o];
                    for (i = r && r.length; !s && i--;)
                        (n = qt[r[i].type]) && n.prototype[o] && (s = !0);
                    e[o] = s
                })
            },
            linkSeries: function() {
                var e = this,
                    t = e.series;
                Vt(t, function(e) {
                    e.linkedSeries.length = 0
                }), Vt(t, function(t) {
                    var n = t.options.linkedTo;
                    r(n) && (n = n === ":previous" ? e.series[t.index - 1] : e.get(n)) && (n.linkedSeries.push(t), t.linkedParent = n)
                })
            },
            render: function() {
                var t = this,
                    r = t.axes,
                    i = t.renderer,
                    s = t.options,
                    o = s.labels,
                    u = s.credits,
                    a;
                t.setTitle(), t.legend = new vn(t, s.legend), t.getStacks(), Vt(r, function(e) {
                    e.setScale()
                }), t.getMargins(), t.maxTicks = null, Vt(r, function(e) {
                    e.setTickPositions(!0), e.setMaxTicks()
                }), t.adjustTickAmounts(), t.getMargins(), t.drawChartBox(), t.hasCartesianSeries && Vt(r, function(e) {
                    e.render()
                }), t.seriesGroup || (t.seriesGroup = i.g("series-group").attr({
                    zIndex: 3
                }).add()), Vt(t.series, function(e) {
                    e.translate(), e.setTooltipPoints(), e.render()
                }), o.items && Vt(o.items, function(r) {
                    var s = e(o.style, r.style),
                        u = n(s.left) + t.plotLeft,
                        a = n(s.top) + t.plotTop + 12;
                    delete s.left, delete s.top, i.text(r.html, u, a).attr({
                        zIndex: 2
                    }).css(s).add()
                }), u.enabled && !t.credits && (a = u.href, t.credits = i.text(u.text, 0, 0).on("click", function() {
                    a && (location.href = a)
                }).attr({
                    align: u.position.align,
                    zIndex: 8
                }).css(u.style).add().align(u.position)), t.hasRendered = !0
            },
            destroy: function() {
                var e = this,
                    t = e.axes,
                    n = e.series,
                    r = e.container,
                    i, s = r && r.parentNode;
                Yt(e, "destroy"), Et[e.index] = I, e.renderTo.removeAttribute("data-highcharts-chart"), Gt(e);
                for (i = t.length; i--;)
                    t[i] = t[i].destroy();
                for (i = n.length; i--;)
                    n[i] = n[i].destroy();
                Vt("title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer".split(","), function(t) {
                    var n = e[t];
                    n && n.destroy && (e[t] = n.destroy())
                }), r && (r.innerHTML = "", Gt(r), s && L(r));
                for (i in e)
                    delete e[i]
            },
            isReadyToRender: function() {
                var e = this;
                return !ut && R == R.top && q.readyState !== "complete" || ft && !R.canvg ? (ft ? cn.push(function() {
                    e.firstRender()
                }, e.options.global.canvasToolsURL) : q.attachEvent("onreadystatechange", function() {
                    q.detachEvent("onreadystatechange", e.firstRender), q.readyState === "complete" && e.firstRender()
                }), !1) : !0
            },
            firstRender: function() {
                var e = this,
                    t = e.options,
                    n = e.callback;
                e.isReadyToRender() && (e.getContainer(), Yt(e, "init"), e.resetMargins(), e.setChartSize(), e.propFromSeries(), e.getAxes(), Vt(t.series || [], function(t) {
                    e.initSeries(t)
                }), e.linkSeries(), Yt(e, "beforeRender"), e.pointer = new pn(e, t), e.render(), e.renderer.draw(), n && n.apply(e, [e]), Vt(e.callbacks, function(t) {
                    t.apply(e, [e])
                }), e.cloneRenderTo(!0), Yt(e, "load"))
            },
            splashArray: function(e, t) {
                var n = t[e],
                    n = i(n) ? n : [n, n, n, n];
                return [p(t[e + "Top"], n[0]), p(t[e + "Right"], n[1]), p(t[e + "Bottom"], n[2]), p(t[e + "Left"], n[3])]
            }
        }, F.prototype.callbacks = [];
        var ln = Highcharts.CenteredSeriesMixin = {
                getCenter: function() {
                    var e = this.options,
                        t = this.chart,
                        r = 2 * (e.slicedOffset || 0),
                        i, s = t.plotWidth - 2 * r,
                        o = t.plotHeight - 2 * r,
                        t = e.center,
                        e = [p(t[0], "50%"), p(t[1], "50%"), e.size || "100%", e.innerSize || 0],
                        u = $(s, o),
                        a;
                    return Kt(e, function(e, t) {
                        return a = /%$/.test(e), i = t < 2 || t === 2 && a, (a ? [s, o, u, u][t] * n(e) / 100 : e) + (i ? r : 0)
                    })
                }
            },
            mn = function() {};
        mn.prototype = {
            init: function(e, t, n) {
                return this.series = e, this.applyOptions(t, n), this.pointAttr = {}, e.options.colorByPoint && (t = e.options.colors || e.chart.options.colors, this.color = this.color || t[e.colorCounter++], e.colorCounter === t.length) && (e.colorCounter = 0), e.chart.pointCount++, this
            },
            applyOptions: function(t, n) {
                var r = this.series,
                    i = r.pointValKey,
                    t = mn.prototype.optionsToObject.call(this, t);
                return e(this, t), this.options = this.options ? e(this.options, t) : t, i && (this.y = this[i]), this.x === I && r && (this.x = n === I ? r.autoIncrement() : n), this
            },
            optionsToObject: function(e) {
                var t = {},
                    n = this.series,
                    r = n.pointArrayMap || ["y"],
                    i = r.length,
                    o = 0,
                    u = 0;
                if (typeof e == "number" || e === null)
                    t[r[0]] = e;
                else if (s(e)) {
                    e.length > i && (n = typeof e[0], n === "string" ? t.name = e[0] : n === "number" && (t.x = e[0]), o++);
                    for (; u < i;)
                        t[r[u++]] = e[o++]
                } else
                    typeof e == "object" && (t = e, e.dataLabels && (n._hasPointLabels = !0), e.marker && (n._hasPointMarkers = !0));
                return t
            },
            destroy: function() {
                var e = this.series.chart,
                    t = e.hoverPoints,
                    n;
                e.pointCount--, t && (this.setState(), f(t, this), !t.length) && (e.hoverPoints = null), this === e.hoverPoint && this.onMouseOut();
                if (this.graphic || this.dataLabel)
                    Gt(this), this.destroyElements();
                this.legendItem && e.legend.destroyItem(this);
                for (n in this)
                    this[n] = null
            },
            destroyElements: function() {
                for (var e = "graphic,dataLabel,dataLabelUpper,group,connector,shadowGroup".split(","), t, n = 6; n--;)
                    t = e[n], this[t] && (this[t] = this[t].destroy())
            },
            getLabelConfig: function() {
                return {
                    x: this.category,
                    y: this.y,
                    key: this.name || this.category,
                    series: this.series,
                    point: this,
                    percentage: this.percentage,
                    total: this.total || this.stackTotal
                }
            },
            select: function(e, t) {
                var n = this,
                    r = n.series,
                    i = r.chart,
                    e = p(e, !n.selected);
                n.firePointEvent(e ? "select" : "unselect", {
                    accumulate: t
                }, function() {
                    n.selected = n.options.selected = e, r.options.data[Xt(n, r.data)] = n.options, n.setState(e && "select"), t || Vt(i.getSelectedPoints(), function(e) {
                        e.selected && e !== n && (e.selected = e.options.selected = !1, r.options.data[Xt(e, r.data)] = e.options, e.setState(""), e.firePointEvent("unselect"))
                    })
                })
            },
            onMouseOver: function(e) {
                var t = this.series,
                    n = t.chart,
                    r = n.tooltip,
                    i = n.hoverPoint;
                i && i !== this && i.onMouseOut(), this.firePointEvent("mouseOver"), r && (!r.shared || t.noSharedTooltip) && r.refresh(this, e), this.setState("hover"), n.hoverPoint = this
            },
            onMouseOut: function() {
                var e = this.series.chart,
                    t = e.hoverPoints;
                if (!t || Xt(this, t) === -1)
                    this.firePointEvent("mouseOut"), this.setState(), e.hoverPoint = null
            },
            tooltipFormatter: function(e) {
                var t = this.series,
                    n = t.tooltipOptions,
                    r = p(n.valueDecimals, ""),
                    i = n.valuePrefix || "",
                    s = n.valueSuffix || "";
                return Vt(t.pointArrayMap || ["y"], function(t) {
                    t = "{point." + t;
                    if (i || s)
                        e = e.replace(t + "}", i + t + "}" + s);
                    e = e.replace(t + "}", t + ":,." + r + "f}")
                }), w(e, {
                    point: this,
                    series: this.series
                })
            },
            firePointEvent: function(e, t, n) {
                var r = this,
                    i = this.series.options;
                (i.point.events[e] || r.options && r.options.events && r.options.events[e]) && this.importEvents(), e === "click" && i.allowPointSelect && (n = function(e) {
                    r.select(null, e.ctrlKey || e.metaKey || e.shiftKey)
                }), Yt(this, e, t, n)
            },
            importEvents: function() {
                if (!this.hasImportedEvents) {
                    var e = t(this.series.options.point, this.options).events,
                        n;
                    this.events = e;
                    for (n in e)
                        Qt(this, n, e[n]);
                    this.hasImportedEvents = !0
                }
            },
            setState: function(e, n) {
                var r = this.plotX,
                    i = this.plotY,
                    s = this.series,
                    o = s.options.states,
                    u = nn[s.type].marker && s.options.marker,
                    a = u && !u.enabled,
                    f = u && u.states[e],
                    l = f && f.enabled === !1,
                    c = s.stateMarkerGraphic,
                    h = this.marker || {},
                    p = s.chart,
                    d = this.pointAttr,
                    e = e || "",
                    n = n && c;
                e === this.state && !n || this.selected && e !== "select" || o[e] && o[e].enabled === !1 || e && (l || a && !f.enabled) || e && h.states && h.states[e] && h.states[e].enabled === !1 || (this.graphic ? (o = u && this.graphic.symbolName && d[e].r, this.graphic.attr(t(d[e], o ? {
                    x: r - o,
                    y: i - o,
                    width: 2 * o,
                    height: 2 * o
                } : {}))) : (e && f && ((o = f.radius, h = h.symbol || s.symbol, c && c.currentSymbol !== h && (c = c.destroy()), c) ? c[n ? "animate" : "attr"]({
                    x: r - o,
                    y: i - o
                }) : (s.stateMarkerGraphic = c = p.renderer.symbol(h, r - o, i - o, 2 * o, 2 * o).attr(d[e]).add(s.markerGroup), c.currentSymbol = h)), c && c[e && p.isInsidePlot(r, i, p.inverted) ? "show" : "hide"]()), this.state = e)
            }
        };
        var gn = function() {};
        gn.prototype = {
            isCartesian: !0,
            type: "line",
            pointClass: mn,
            sorted: !0,
            requireSorting: !0,
            pointAttrToOptions: {
                stroke: "lineColor",
                "stroke-width": "lineWidth",
                fill: "fillColor",
                r: "radius"
            },
            axisTypes: ["xAxis", "yAxis"],
            colorCounter: 0,
            parallelArrays: ["x", "y"],
            init: function(t, n) {
                var r = this,
                    i, s, o = t.series,
                    u = function(e, t) {
                        return p(e.options.index, e._i) - p(t.options.index, t._i)
                    };
                r.chart = t, r.options = n = r.setOptions(n), r.linkedSeries = [], r.bindAxes(), e(r, {
                    name: n.name,
                    state: "",
                    pointAttr: {},
                    visible: n.visible !== !1,
                    selected: n.selected === !0
                }), ft && (n.animation = !1), s = n.events;
                for (i in s)
                    Qt(r, i, s[i]);
                if (s && s.click || n.point && n.point.events && n.point.events.click || n.allowPointSelect)
                    t.runTrackerClick = !0;
                r.getColor(), r.getSymbol(), Vt(r.parallelArrays, function(e) {
                    r[e + "Data"] = []
                }), r.setData(n.data, !1), r.isCartesian && (t.hasCartesianSeries = !0), o.push(r), r._i = o.length - 1, T(o, u), this.yAxis && T(this.yAxis.series, u), Vt(o, function(e, t) {
                    e.index = t, e.name = e.name || "Series " + (t + 1)
                })
            },
            bindAxes: function() {
                var e = this,
                    t = e.options,
                    n = e.chart,
                    r;
                Vt(e.axisTypes || [], function(i) {
                    Vt(n[i], function(n) {
                        r = n.options;
                        if (t[i] === r.index || t[i] !== I && t[i] === r.id || t[i] === I && r.index === 0)
                            n.series.push(e), e[i] = n, n.isDirty = !0
                    }), !e[i] && e.optionalAxis !== i && A(18, !0)
                })
            },
            updateParallelArrays: function(e, t) {
                var n = e.series,
                    r = arguments;
                Vt(n.parallelArrays, typeof t == "number" ? function(r) {
                    var i = r === "y" && n.toYData ? n.toYData(e) : e[r];
                    n[r + "Data"][t] = i
                } : function(e) {
                    Array.prototype[t].apply(n[e + "Data"], Array.prototype.slice.call(r, 2))
                })
            },
            autoIncrement: function() {
                var e = this.options,
                    t = this.xIncrement,
                    t = p(t, e.pointStart, 0);
                return this.pointInterval = p(this.pointInterval, e.pointInterval, 1), this.xIncrement = t + this.pointInterval, t
            },
            getSegments: function() {
                var e = -1,
                    t = [],
                    n, r = this.points,
                    i = r.length;
                if (i)
                    if (this.options.connectNulls) {
                        for (n = i; n--;)
                            r[n].y === null && r.splice(n, 1);
                        r.length && (t = [r])
                    } else
                        Vt(r, function(n, s) {
                            n.y === null ? (s > e + 1 && t.push(r.slice(e + 1, s)), e = s) : s === i - 1 && t.push(r.slice(e + 1, s + 1))
                        });
                this.segments = t
            },
            setOptions: function(e) {
                var n = this.chart,
                    r = n.options.plotOptions,
                    n = n.userOptions || {},
                    i = n.plotOptions || {},
                    s = r[this.type];
                return this.userOptions = e, r = t(s, r.series, e), this.tooltipOptions = t(vt.tooltip, vt.plotOptions[this.type].tooltip, n.tooltip, i.series && i.series.tooltip, i[this.type] && i[this.type].tooltip, e.tooltip), s.marker === null && delete r.marker, r
            },
            getColor: function() {
                var e = this.options,
                    t = this.userOptions,
                    n = this.chart.options.colors,
                    r = this.chart.counters,
                    i;
                i = e.color || nn[this.type].color, !i && !e.colorByPoint && (l(t._colorIndex) ? e = t._colorIndex : (t._colorIndex = r.color, e = r.color++), i = n[e]), this.color = i, r.wrapColor(n.length)
            },
            getSymbol: function() {
                var e = this.userOptions,
                    t = this.options.marker,
                    n = this.chart,
                    r = n.options.symbols,
                    n = n.counters;
                this.symbol = t.symbol, this.symbol || (l(e._symbolIndex) ? e = e._symbolIndex : (e._symbolIndex = n.symbol, e = n.symbol++), this.symbol = r[e]), /^url/.test(this.symbol) && (t.radius = 0), n.wrapSymbol(r.length)
            },
            drawLegendSymbol: fn.drawLineMarker,
            setData: function(e, t) {
                var n = this,
                    i = n.points,
                    u = n.options,
                    a = n.chart,
                    f = null,
                    l = n.xAxis,
                    c = l && !!l.categories,
                    h;
                n.xIncrement = null, n.pointRange = c ? 1 : u.pointRange, n.colorCounter = 0;
                var e = e || [],
                    d = e.length;
                h = u.turboThreshold;
                var v = this.xData,
                    m = this.yData,
                    g = n.pointArrayMap,
                    g = g && g.length;
                Vt(this.parallelArrays, function(e) {
                    n[e + "Data"].length = 0
                });
                if (h && d > h) {
                    for (h = 0; f === null && h < d;)
                        f = e[h], h++;
                    if (o(f)) {
                        c = p(u.pointStart, 0), u = p(u.pointInterval, 1);
                        for (h = 0; h < d; h++)
                            v[h] = c, m[h] = e[h], c += u;
                        n.xIncrement = c
                    } else if (s(f))
                        if (g)
                            for (h = 0; h < d; h++)
                                u = e[h], v[h] = u[0], m[h] = u.slice(1, g + 1);
                        else
                            for (h = 0; h < d; h++)
                                u = e[h], v[h] = u[0], m[h] = u[1];
                    else
                        A(12)
                } else
                    for (h = 0; h < d; h++)
                        e[h] !== I && (u = {
                            series: n
                        }, n.pointClass.prototype.applyOptions.apply(u, [e[h]]), n.updateParallelArrays(u, h), c && u.name) && (l.names[u.x] = u.name);
                r(m[0]) && A(14, !0), n.data = [], n.options.data = e;
                for (h = i && i.length || 0; h--;)
                    i[h] && i[h].destroy && i[h].destroy();
                l && (l.minRange = l.userMinRange), n.isDirty = n.isDirtyData = a.isDirtyBox = !0, p(t, !0) && a.redraw(!1)
            },
            processData: function(e) {
                var t = this.xData,
                    n = this.yData,
                    r = t.length,
                    i;
                i = 0;
                var s, o, u = this.xAxis,
                    a = this.options,
                    f = a.cropThreshold,
                    l = this.isCartesian;
                if (l && !this.isDirty && !u.isDirty && !this.yAxis.isDirty && !e)
                    return !1;
                if (l && this.sorted && (!f || r > f || this.forceCrop))
                    if (e = u.min, u = u.max, t[r - 1] < e || t[0] > u)
                        t = [], n = [];
                    else if (t[0] < e || t[r - 1] > u)
                        i = this.cropData(this.xData, this.yData, e, u), t = i.xData, n = i.yData, i = i.start, s = !0;
                for (u = t.length - 1; u >= 0; u--)
                    r = t[u] - t[u - 1], r > 0 && (o === I || r < o) ? o = r : r < 0 && this.requireSorting && A(15);
                this.cropped = s, this.cropStart = i, this.processedXData = t, this.processedYData = n, a.pointRange === null && (this.pointRange = o || 1), this.closestPointRange = o
            },
            cropData: function(e, t, n, r) {
                var i = e.length,
                    s = 0,
                    o = i,
                    u = p(this.cropShoulder, 1),
                    a;
                for (a = 0; a < i; a++)
                    if (e[a] >= n) {
                        s = V(0, a - u);
                        break
                    }
                for (; a < i; a++)
                    if (e[a] > r) {
                        o = a + u;
                        break
                    }
                return {
                    xData: e.slice(s, o),
                    yData: t.slice(s, o),
                    start: s,
                    end: o
                }
            },
            generatePoints: function() {
                var e = this.options.data,
                    t = this.data,
                    n, r = this.processedXData,
                    i = this.processedYData,
                    s = this.pointClass,
                    o = r.length,
                    u = this.cropStart || 0,
                    a, f = this.hasGroupedData,
                    l, c = [],
                    p;
                !t && !f && (t = [], t.length = e.length, t = this.data = t);
                for (p = 0; p < o; p++)
                    a = u + p, f ? c[p] = (new s).init(this, [r[p]].concat(h(i[p]))) : (t[a] ? l = t[a] : e[a] !== I && (t[a] = l = (new s).init(this, e[a], r[p])), c[p] = l);
                if (t && (o !== (n = t.length) || f))
                    for (p = 0; p < n; p++)
                        if (p === u && !f && (p += o), t[p])
                            t[p].destroyElements(), t[p].plotX = I;
                this.data = t, this.points = c
            },
            setStackedPoints: function() {
                if (this.options.stacking && (this.visible === !0 || this.chart.options.chart.ignoreHiddenSeries === !1)) {
                    var e = this.processedXData,
                        t = this.processedYData,
                        n = [],
                        r = t.length,
                        i = this.options,
                        s = i.threshold,
                        o = i.stack,
                        i = i.stacking,
                        u = this.stackKey,
                        a = "-" + u,
                        f = this.negStacks,
                        l = this.yAxis,
                        c = l.stacks,
                        h = l.oldStacks,
                        p, d, v, m, g;
                    for (v = 0; v < r; v++)
                        m = e[v], g = t[v], d = (p = f && g < s) ? a : u, c[d] || (c[d] = {}), c[d][m] || (h[d] && h[d][m] ? (c[d][m] = h[d][m], c[d][m].total = null) : c[d][m] = new B(l, l.options.stackLabels, p, m, o, i)), d = c[d][m], d.points[this.index] = [d.cum || 0], i === "percent" ? (p = p ? u : a, f && c[p] && c[p][m] ? (p = c[p][m], d.total = p.total = V(p.total, d.total) + J(g) || 0) : d.total = O(d.total + (J(g) || 0))) : d.total = O(d.total + (g || 0)), d.cum = (d.cum || 0) + (g || 0), d.points[this.index].push(d.cum), n[v] = d.cum;
                    i === "percent" && (l.usePercentage = !0), this.stackedYData = n, l.oldStacks = {}
                }
            },
            setPercentStacks: function() {
                var e = this,
                    t = e.stackKey,
                    n = e.yAxis.stacks;
                Vt([t, "-" + t], function(t) {
                    var r;
                    for (var i = e.xData.length, s, o; i--;)
                        if (s = e.xData[i], r = (o = n[t] && n[t][s]) && o.points[e.index], s = r)
                            o = o.total ? 100 / o.total : 0, s[0] = O(s[0] * o), s[1] = O(s[1] * o), e.stackedYData[i] = s[1]
                })
            },
            getExtremes: function(e) {
                var t = this.yAxis,
                    n = this.processedXData,
                    r, i = [],
                    s = 0;
                r = this.xAxis.getExtremes();
                var o = r.min,
                    u = r.max,
                    a, f, l, c, e = e || this.stackedYData || this.processedYData;
                r = e.length;
                for (c = 0; c < r; c++)
                    if (f = n[c], l = e[c], a = l !== null && l !== I && (!t.isLog || l.length || l > 0), f = this.getExtremesFromAll || this.cropped || (n[c + 1] || f) >= o && (n[c - 1] || f) <= u, a && f)
                        if (a = l.length)
                            for (; a--;)
                                l[a] !== null && (i[s++] = l[a]);
                        else
                            i[s++] = l;
                this.dataMin = p(void 0, N(i)), this.dataMax = p(void 0, C(i))
            },
            translate: function() {
                this.processedXData || this.processData(), this.generatePoints();
                for (var e = this.options, t = e.stacking, n = this.xAxis, r = n.categories, i = this.yAxis, s = this.points, u = s.length, a = !!this.modifyValue, f = e.pointPlacement, c = f === "between" || o(f), h = e.threshold, e = 0; e < u; e++) {
                    var d = s[e],
                        v = d.x,
                        m = d.y,
                        g = d.low,
                        y = t && i.stacks[(this.negStacks && m < h ? "-" : "") + this.stackKey];
                    i.isLog && m <= 0 && (d.y = m = null), d.plotX = n.translate(v, 0, 0, 0, 1, f, this.type === "flags"), t && this.visible && y && y[v] && (y = y[v], m = y.points[this.index], g = m[0], m = m[1], g === 0 && (g = p(h, i.min)), i.isLog && g <= 0 && (g = null), d.total = d.stackTotal = y.total, d.percentage = t === "percent" && d.y / y.total * 100, d.stackY = m, y.setOffset(this.pointXOffset || 0, this.barW || 0)), d.yBottom = l(g) ? i.translate(g, 0, 1, 0, 1) : null, a && (m = this.modifyValue(m, d)), d.plotY = typeof m == "number" && m !== Infinity ? i.translate(m, 0, 1, 0, 1) : I, d.clientX = c ? n.translate(v, 0, 0, 0, 1) : d.plotX, d.negative = d.y < (h || 0), d.category = r && r[d.x] !== I ? r[d.x] : d.x
                }
                this.getSegments()
            },
            setTooltipPoints: function(e) {
                var t = [],
                    n, r, i = this.xAxis,
                    s = i && i.getExtremes(),
                    o = i ? i.tooltipLen || i.len : this.chart.plotSizeX,
                    u, a, f = [];
                if (this.options.enableMouseTracking !== !1) {
                    e && (this.tooltipPoints = null), Vt(this.segments || this.points, function(e) {
                        t = t.concat(e)
                    }), i && i.reversed && (t = t.reverse()), this.orderTooltipPoints && this.orderTooltipPoints(t), e = t.length;
                    for (a = 0; a < e; a++)
                        if (i = t[a], n = i.x, n >= s.min && n <= s.max) {
                            u = t[a + 1], n = r === I ? 0 : r + 1;
                            for (r = t[a + 1] ? $(V(0, W((i.clientX + (u ? u.wrappedClientX || u.clientX : o)) / 2)), o) : o; n >= 0 && n <= r;)
                                f[n++] = i
                        }
                    this.tooltipPoints = f
                }
            },
            tooltipHeaderFormatter: function(e) {
                var t = this.tooltipOptions,
                    n = t.dateTimeLabelFormats,
                    r = t.xDateFormat,
                    i = this.xAxis,
                    s = i && i.options.type === "datetime",
                    t = t.headerFormat,
                    i = i && i.closestPointRange,
                    u;
                if (s && !r) {
                    if (i) {
                        for (u in bt)
                            if (bt[u] >= i) {
                                r = n[u];
                                break
                            }
                    } else
                        r = n.day;
                    r = r || n.year
                }
                return s && r && o(e.key) && (t = t.replace("{point.key}", "{point.key:" + r + "}")), w(t, {
                    point: e,
                    series: this
                })
            },
            onMouseOver: function() {
                var e = this.chart,
                    t = e.hoverSeries;
                t && t !== this && t.onMouseOut(), this.options.events.mouseOver && Yt(this, "mouseOver"), this.setState("hover"), e.hoverSeries = this
            },
            onMouseOut: function() {
                var e = this.options,
                    t = this.chart,
                    n = t.tooltip,
                    r = t.hoverPoint;
                r && r.onMouseOut(), this && e.events.mouseOut && Yt(this, "mouseOut"), n && !e.stickyTracking && (!n.shared || this.noSharedTooltip) && n.hide(), this.setState(), t.hoverSeries = null
            },
            animate: function(t) {
                var n = this,
                    r = n.chart,
                    s = r.renderer,
                    o;
                o = n.options.animation;
                var u = r.clipBox,
                    a = r.inverted,
                    f;
                o && !i(o) && (o = nn[n.type].animation), f = "_sharedClip" + o.duration + o.easing;
                if (t)
                    t = r[f], o = r[f + "m"], t || (r[f] = t = s.clipRect(e(u, {
                        width: 0
                    })), r[f + "m"] = o = s.clipRect(-99, a ? -r.plotLeft : -r.plotTop, 99, a ? r.chartWidth : r.chartHeight)), n.group.clip(t), n.markerGroup.clip(o), n.sharedClipKey = f;
                else {
                    if (t = r[f])
                        t.animate({
                            width: r.plotSizeX
                        }, o), r[f + "m"].animate({
                            width: r.plotSizeX + 99
                        }, o);
                    n.animate = null, n.animationTimeout = setTimeout(function() {
                        n.afterAnimate()
                    }, o.duration)
                }
            },
            afterAnimate: function() {
                var e = this.chart,
                    t = this.sharedClipKey,
                    n = this.group;
                n && this.options.clip !== !1 && (n.clip(e.clipRect), this.markerGroup.clip()), setTimeout(function() {
                    t && e[t] && (e[t] = e[t].destroy(), e[t + "m"] = e[t + "m"].destroy())
                }, 100)
            },
            drawPoints: function() {
                var t, n = this.points,
                    r = this.chart,
                    i, s, o, u, a, f, l, c, h = this.options.marker,
                    d, v = this.markerGroup;
                if (h.enabled || this._hasPointMarkers)
                    for (o = n.length; o--;)
                        (u = n[o], i = W(u.plotX), s = u.plotY, c = u.graphic, f = u.marker || {}, t = h.enabled && f.enabled === I || f.enabled, d = r.isInsidePlot(z(i), s, r.inverted), t && s !== I && !isNaN(s) && u.y !== null) ? (t = u.pointAttr[u.selected ? "select" : ""], a = t.r, f = p(f.symbol, this.symbol), l = f.indexOf("url") === 0, c) ? c.attr({
                            visibility: d ? ut ? "inherit" : "visible" : "hidden"
                        }).animate(e({
                            x: i - a,
                            y: s - a
                        }, c.symbolName ? {
                            width: 2 * a,
                            height: 2 * a
                        } : {})) : d && (a > 0 || l) && (u.graphic = r.renderer.symbol(f, i - a, s - a, 2 * a, 2 * a).attr(t).add(v)) : c && (u.graphic = c.destroy())
            },
            convertAttribs: function(e, t, n, r) {
                var i = this.pointAttrToOptions,
                    s, o, u = {},
                    e = e || {},
                    t = t || {},
                    n = n || {},
                    r = r || {};
                for (s in i)
                    o = i[s], u[s] = p(e[o], t[s], n[s], r[s]);
                return u
            },
            getAttribs: function() {
                var t = this,
                    n = t.options,
                    r = nn[t.type].marker ? n.marker : n,
                    i = r.states,
                    s = i.hover,
                    o, u = t.color,
                    a = {
                        stroke: u,
                        fill: u
                    },
                    f = t.points || [],
                    c = [],
                    h, p = t.pointAttrToOptions,
                    d = n.negativeColor,
                    v = r.lineColor,
                    m = r.fillColor,
                    g;
                n.marker ? (s.radius = s.radius || r.radius + 2, s.lineWidth = s.lineWidth || r.lineWidth + 1) : s.color = s.color || un(s.color || u).brighten(s.brightness).get(), c[""] = t.convertAttribs(r, a), Vt(["hover", "select"], function(e) {
                    c[e] = t.convertAttribs(i[e], c[""])
                }), t.pointAttr = c;
                for (u = f.length; u--;) {
                    a = f[u], (r = a.options && a.options.marker || a.options) && r.enabled === !1 && (r.radius = 0), a.negative && d && (a.color = a.fillColor = d), h = n.colorByPoint || a.color;
                    if (a.options)
                        for (g in p)
                            l(r[p[g]]) && (h = !0);
                    h ? (r = r || {}, h = [], i = r.states || {}, o = i.hover = i.hover || {}, n.marker || (o.color = un(o.color || a.color).brighten(o.brightness || s.brightness).get()), o = {
                        color: a.color
                    }, m || (o.fillColor = a.color), v || (o.lineColor = a.color), h[""] = t.convertAttribs(e(o, r), c[""]), h.hover = t.convertAttribs(i.hover, c.hover, h[""]), h.select = t.convertAttribs(i.select, c.select, h[""])) : h = c, a.pointAttr = h
                }
            },
            destroy: function() {
                var e = this,
                    t = e.chart,
                    n = /AppleWebKit\/533/.test(Z),
                    r, i, s = e.data || [],
                    o, u, a;
                Yt(e, "destroy"), Gt(e), Vt(e.axisTypes || [], function(t) {
                    if (a = e[t])
                        f(a.series, e), a.isDirty = a.forceRedraw = !0
                }), e.legendItem && e.chart.legend.destroyItem(e);
                for (i = s.length; i--;)
                    (o = s[i]) && o.destroy && o.destroy();
                e.points = null, clearTimeout(e.animationTimeout), Vt("area,graph,dataLabelsGroup,group,markerGroup,tracker,graphNeg,areaNeg,posClip,negClip".split(","), function(t) {
                    e[t] && (r = n && t === "group" ? "hide" : "destroy", e[t][r]())
                }), t.hoverSeries === e && (t.hoverSeries = null), f(t.series, e);
                for (u in e)
                    delete e[u]
            },
            getSegmentPath: function(e) {
                var t = this,
                    n = [],
                    r = t.options.step;
                return Vt(e, function(i, s) {
                    var o = i.plotX,
                        u = i.plotY,
                        a;
                    t.getPointSpline ? n.push.apply(n, t.getPointSpline(e, i, s)) : (n.push(s ? "L" : "M"), r && s && (a = e[s - 1], r === "right" ? n.push(a.plotX, u) : r === "center" ? n.push((a.plotX + o) / 2, a.plotY, (a.plotX + o) / 2, u) : n.push(o, a.plotY)), n.push(i.plotX, i.plotY))
                }), n
            },
            getGraphPath: function() {
                var e = this,
                    t = [],
                    n, r = [];
                return Vt(e.segments, function(i) {
                    n = e.getSegmentPath(i), i.length > 1 ? t = t.concat(n) : r.push(i[0])
                }), e.singlePoints = r, e.graphPath = t
            },
            drawGraph: function() {
                var e = this,
                    t = this.options,
                    n = [
                        ["graph", t.lineColor || this.color]
                    ],
                    r = t.lineWidth,
                    i = t.dashStyle,
                    s = t.linecap !== "square",
                    o = this.getGraphPath(),
                    u = t.negativeColor;
                u && n.push(["graphNeg", u]), Vt(n, function(n, u) {
                    var a = n[0],
                        f = e[a];
                    f ? (tn(f), f.animate({
                        d: o
                    })) : r && o.length && (f = {
                        stroke: n[1],
                        "stroke-width": r,
                        zIndex: 1
                    }, i ? f.dashstyle = i : s && (f["stroke-linecap"] = f["stroke-linejoin"] = "round"), e[a] = e.chart.renderer.path(o).attr(f).add(e.group).shadow(!u && t.shadow))
                })
            },
            clipNeg: function() {
                var e = this.options,
                    t = this.chart,
                    n = t.renderer,
                    r = e.negativeColor || e.negativeFillColor,
                    i, s = this.graph,
                    o = this.area,
                    u = this.posClip,
                    a = this.negClip;
                i = t.chartWidth;
                var f = t.chartHeight,
                    l = V(i, f),
                    c = this.yAxis;
                r && (s || o) && (r = z(c.toPixels(e.threshold || 0, !0)), r < 0 && (l -= r), e = {
                    x: 0,
                    y: 0,
                    width: l,
                    height: r
                }, l = {
                    x: 0,
                    y: r,
                    width: l,
                    height: l
                }, t.inverted && (e.height = l.y = t.plotWidth - r, n.isVML && (e = {
                    x: t.plotWidth - r - t.plotLeft,
                    y: 0,
                    width: i,
                    height: f
                }, l = {
                    x: r + t.plotLeft - i,
                    y: 0,
                    width: t.plotLeft + r,
                    height: i
                })), c.reversed ? (t = l, i = e) : (t = e, i = l), u ? (u.animate(t), a.animate(i)) : (this.posClip = u = n.clipRect(t), this.negClip = a = n.clipRect(i), s && this.graphNeg && (s.clip(u), this.graphNeg.clip(a)), o && (o.clip(u), this.areaNeg.clip(a))))
            },
            invertGroups: function() {
                function e() {
                    var e = {
                        width: t.yAxis.len,
                        height: t.xAxis.len
                    };
                    Vt(["group", "markerGroup"], function(n) {
                        t[n] && t[n].attr(e).invert()
                    })
                }

                var t = this,
                    n = t.chart;
                t.xAxis && (Qt(n, "resize", e), Qt(t, "destroy", function() {
                    Gt(n, "resize", e)
                }), e(), t.invertGroups = e)
            },
            plotGroup: function(e, t, n, r, i) {
                var s = this[e],
                    o = !s;
                return o && (this[e] = s = this.chart.renderer.g(t).attr({
                    visibility: n,
                    zIndex: r || .1
                }).add(i)), s[o ? "attr" : "animate"](this.getPlotBox()), s
            },
            getPlotBox: function() {
                return {
                    translateX: this.xAxis ? this.xAxis.left : this.chart.plotLeft,
                    translateY: this.yAxis ? this.yAxis.top : this.chart.plotTop,
                    scaleX: 1,
                    scaleY: 1
                }
            },
            render: function() {
                var e = this.chart,
                    t, n = this.options,
                    r = n.animation && !!this.animate && e.renderer.isSVG,
                    i = this.visible ? "visible" : "hidden",
                    s = n.zIndex,
                    o = this.hasRendered,
                    u = e.seriesGroup;
                t = this.plotGroup("group", "series", i, s, u), this.markerGroup = this.plotGroup("markerGroup", "markers", i, s, u), r && this.animate(!0), this.getAttribs(), t.inverted = this.isCartesian ? e.inverted : !1, this.drawGraph && (this.drawGraph(), this.clipNeg()), this.drawDataLabels && this.drawDataLabels(), this.visible && this.drawPoints(), this.options.enableMouseTracking !== !1 && this.drawTracker(), e.inverted && this.invertGroups(), n.clip !== !1 && !this.sharedClipKey && !o && t.clip(e.clipRect), r ? this.animate() : o || this.afterAnimate(), this.isDirty = this.isDirtyData = !1, this.hasRendered = !0
            },
            redraw: function() {
                var e = this.chart,
                    t = this.isDirtyData,
                    n = this.group,
                    r = this.xAxis,
                    i = this.yAxis;
                n && (e.inverted && n.attr({
                    width: e.plotWidth,
                    height: e.plotHeight
                }), n.animate({
                    translateX: p(r && r.left, e.plotLeft),
                    translateY: p(i && i.top, e.plotTop)
                })), this.translate(), this.setTooltipPoints(!0), this.render(), t && Yt(this, "updatedData")
            },
            setState: function(e) {
                var t = this.options,
                    n = this.graph,
                    r = this.graphNeg,
                    i = t.states,
                    t = t.lineWidth,
                    e = e || "";
                this.state !== e && (this.state = e, i[e] && i[e].enabled === !1 || (e && (t = i[e].lineWidth || t + 1), n && !n.dashstyle && (e = {
                    "stroke-width": t
                }, n.attr(e), r && r.attr(e))))
            },
            setVisible: function(e, t) {
                var n = this,
                    r = n.chart,
                    i = n.legendItem,
                    s, o = r.options.chart.ignoreHiddenSeries,
                    u = n.visible;
                s = (n.visible = e = n.userOptions.visible = e === I ? !u : e) ? "show" : "hide", Vt(["group", "dataLabelsGroup", "markerGroup", "tracker"], function(e) {
                    n[e] && n[e][s]()
                }), r.hoverSeries === n && n.onMouseOut(), i && r.legend.colorizeItem(n, e), n.isDirty = !0, n.options.stacking && Vt(r.series, function(e) {
                    e.options.stacking && e.visible && (e.isDirty = !0)
                }), Vt(n.linkedSeries, function(t) {
                    t.setVisible(e, !1)
                }), o && (r.isDirtyBox = !0), t !== !1 && r.redraw(), Yt(n, s)
            },
            show: function() {
                this.setVisible(!0)
            },
            hide: function() {
                this.setVisible(!1)
            },
            select: function(e) {
                this.selected = e = e === I ? !this.selected : e, this.checkbox && (this.checkbox.checked = e), Yt(this, e ? "select" : "unselect")
            },
            drawTracker: Ut.drawTrackerGraph
        }, e(F.prototype, {
            addSeries: function(e, t, n) {
                var r, i = this;
                return e && (t = p(t, !0), Yt(i, "addSeries", {
                    options: e
                }, function() {
                    r = i.initSeries(e), i.isDirtyLegend = !0, i.linkSeries(), t && i.redraw(n)
                })), r
            },
            addAxis: function(e, n, r, i) {
                var s = n ? "xAxis" : "yAxis",
                    o = this.options;
                new H(this, t(e, {
                    index: this[s].length,
                    isX: n
                })), o[s] = h(o[s] || {}), o[s].push(e), p(r, !0) && this.redraw(i)
            },
            showLoading: function(t) {
                var n = this.options,
                    r = this.loadingDiv,
                    i = n.loading;
                r || (this.loadingDiv = r = v(St, {
                    className: "highcharts-loading"
                }, e(i.style, {
                    zIndex: 10,
                    display: xt
                }), this.container), this.loadingSpan = v("span", null, i.labelStyle, r)), this.loadingSpan.innerHTML = t || n.lang.loading, this.loadingShown || (d(r, {
                    opacity: 0,
                    display: "",
                    left: this.plotLeft + "px",
                    top: this.plotTop + "px",
                    width: this.plotWidth + "px",
                    height: this.plotHeight + "px"
                }), en(r, {
                    opacity: i.style.opacity
                }, {
                    duration: i.showDuration || 0
                }), this.loadingShown = !0)
            },
            hideLoading: function() {
                var e = this.options,
                    t = this.loadingDiv;
                t && en(t, {
                    opacity: 0
                }, {
                    duration: e.loading.hideDuration || 100,
                    complete: function() {
                        d(t, {
                            display: xt
                        })
                    }
                }), this.loadingShown = !1
            }
        }), e(mn.prototype, {
            update: function(e, t, n) {
                var r = this,
                    s = r.series,
                    o = r.graphic,
                    u, a = s.data,
                    f = s.chart,
                    l = s.options,
                    t = p(t, !0);
                r.firePointEvent("update", {
                    options: e
                }, function() {
                    r.applyOptions(e), i(e) && (s.getAttribs(), o && (e && e.marker && e.marker.symbol ? r.graphic = o.destroy() : o.attr(r.pointAttr[r.state || ""])), e && e.dataLabels && r.dataLabel && (r.dataLabel = r.dataLabel.destroy())), u = Xt(r, a), s.updateParallelArrays(r, u), l.data[u] = r.options, s.isDirty = s.isDirtyData = !0, !s.fixedBox && s.hasCartesianSeries && (f.isDirtyBox = !0), l.legendType === "point" && f.legend.destroyItem(r), t && f.redraw(n)
                })
            },
            remove: function(e, t) {
                var n = this,
                    r = n.series,
                    i = r.points,
                    s = r.chart,
                    o, u = r.data;
                M(t, s), e = p(e, !0), n.firePointEvent("remove", null, function() {
                    o = Xt(n, u), u.length === i.length && i.splice(o, 1), u.splice(o, 1), r.options.data.splice(o, 1), r.updateParallelArrays(n, "splice", o, 1), n.destroy(), r.isDirty = !0, r.isDirtyData = !0, e && s.redraw()
                })
            }
        }), e(gn.prototype, {
            addPoint: function(e, t, n, r) {
                var i = this.options,
                    s = this.data,
                    o = this.graph,
                    u = this.area,
                    a = this.chart,
                    f = this.xAxis && this.xAxis.names,
                    l = o && o.shift || 0,
                    c = i.data,
                    h, d = this.xData;
                M(r, a), n && Vt([o, u, this.graphNeg, this.areaNeg], function(e) {
                    e && (e.shift = l + 1)
                }), u && (u.isArea = !0), t = p(t, !0), r = {
                    series: this
                }, this.pointClass.prototype.applyOptions.apply(r, [e]), o = r.x, u = d.length;
                if (this.requireSorting && o < d[u - 1])
                    for (h = !0; u && d[u - 1] > o;)
                        u--;
                this.updateParallelArrays(r, "splice", u, 0, 0), this.updateParallelArrays(r, u), f && (f[o] = r.name), c.splice(u, 0, e), h && (this.data.splice(u, 0, null), this.processData()), i.legendType === "point" && this.generatePoints(), n && (s[0] && s[0].remove ? s[0].remove(!1) : (s.shift(), this.updateParallelArrays(r, "shift"), c.shift())), this.isDirtyData = this.isDirty = !0, t && (this.getAttribs(), a.redraw())
            },
            remove: function(e, t) {
                var n = this,
                    r = n.chart,
                    e = p(e, !0);
                n.isRemoving || (n.isRemoving = !0, Yt(n, "remove", null, function() {
                    n.destroy(), r.isDirtyLegend = r.isDirtyBox = !0, r.linkSeries(), e && r.redraw(t)
                })), n.isRemoving = !1
            },
            update: function(n, r) {
                var i = this.chart,
                    s = this.type,
                    o = qt[s].prototype,
                    u, n = t(this.userOptions, {
                        animation: !1,
                        index: this.index,
                        pointStart: this.xData[0]
                    }, {
                        data: this.options.data
                    }, n);
                this.remove(!1);
                for (u in o)
                    o.hasOwnProperty(u) && (this[u] = I);
                e(this, qt[n.type || s].prototype), this.init(i, n), p(r, !0) && i.redraw(!1)
            }
        }), e(H.prototype, {
            update: function(n, r) {
                var i = this.chart,
                    n = i.options[this.coll][this.options.index] = t(this.userOptions, n);
                this.destroy(!0), this._addedPlotLB = this.userMin = this.userMax = I, this.init(i, e(n, {
                    events: I
                })), i.isDirtyBox = !0, p(r, !0) && i.redraw()
            },
            remove: function(e) {
                var t = this.chart,
                    n = this.coll;
                Vt(this.series, function(e) {
                    e.remove(!1)
                }), f(t.axes, this), f(t[n], this), t.options[n].splice(this.options.index, 1), Vt(t[n], function(e, t) {
                    e.options.index = t
                }), this.destroy(), t.isDirtyBox = !0, p(e, !0) && t.redraw()
            },
            setTitle: function(e, t) {
                this.update({
                    title: e
                }, t)
            },
            setCategories: function(e, t) {
                this.update({
                    categories: e
                }, t)
            }
        });
        var yn = m(gn);
        qt.line = yn, nn.area = t(Rt, {
            threshold: 0
        });
        var bn = m(gn, {
            type: "area",
            getSegments: function() {
                var e = [],
                    t = [],
                    n = [],
                    r = this.xAxis,
                    i = this.yAxis,
                    s = i.stacks[this.stackKey],
                    o = {},
                    u, a, f = this.points,
                    l = this.options.connectNulls,
                    c, h, p;
                if (this.options.stacking && !this.cropped) {
                    for (h = 0; h < f.length; h++)
                        o[f[h].x] = f[h];
                    for (p in s)
                        s[p].total !== null && n.push(+p);
                    n.sort(function(e, t) {
                        return e - t
                    }), Vt(n, function(e) {
                        if (!l || o[e] && o[e].y !== null)
                            o[e] ? t.push(o[e]) : (u = r.translate(e), c = s[e].percent ? s[e].total ? s[e].cum * 100 / s[e].total : 0 : s[e].cum, a = i.toPixels(c, !0), t.push({
                                y: null,
                                plotX: u,
                                clientX: u,
                                plotY: a,
                                yBottom: a,
                                onMouseOver: wt
                            }))
                    }), t.length && e.push(t)
                } else
                    gn.prototype.getSegments.call(this), e = this.segments;
                this.segments = e
            },
            getSegmentPath: function(e) {
                var t = gn.prototype.getSegmentPath.call(this, e),
                    n = [].concat(t),
                    r, i = this.options;
                r = t.length;
                var s = this.yAxis.getThreshold(i.threshold),
                    o;
                r === 3 && n.push("L", t[1], t[2]);
                if (i.stacking && !this.closedStacks)
                    for (r = e.length - 1; r >= 0; r--)
                        o = p(e[r].yBottom, s), r < e.length - 1 && i.step && n.push(e[r + 1].plotX, o), n.push(e[r].plotX, o);
                else
                    this.closeSegment(n, e, s);
                return this.areaPath = this.areaPath.concat(n), t
            },
            closeSegment: function(e, t, n) {
                e.push("L", t[t.length - 1].plotX, n, "L", t[0].plotX, n)
            },
            drawGraph: function() {
                this.areaPath = [], gn.prototype.drawGraph.apply(this);
                var e = this,
                    t = this.areaPath,
                    n = this.options,
                    r = n.negativeColor,
                    i = n.negativeFillColor,
                    s = [
                        ["area", this.color, n.fillColor]
                    ];
                (r || i) && s.push(["areaNeg", r, i]), Vt(s, function(r) {
                    var i = r[0],
                        s = e[i];
                    s ? s.animate({
                        d: t
                    }) : e[i] = e.chart.renderer.path(t).attr({
                        fill: p(r[2], un(r[1]).setOpacity(p(n.fillOpacity, .75)).get()),
                        zIndex: 0
                    }).add(e.group)
                })
            },
            drawLegendSymbol: fn.drawRectangle
        });
        qt.area = bn, nn.spline = t(Rt), yn = m(gn, {
            type: "spline",
            getPointSpline: function(e, t, n) {
                var r = t.plotX,
                    i = t.plotY,
                    s = e[n - 1],
                    o = e[n + 1],
                    u, a, f, l;
                if (s && o) {
                    e = s.plotY, f = o.plotX;
                    var o = o.plotY,
                        c;
                    u = (1.5 * r + s.plotX) / 2.5, a = (1.5 * i + e) / 2.5, f = (1.5 * r + f) / 2.5, l = (1.5 * i + o) / 2.5, c = (l - a) * (f - r) / (f - u) + i - l, a += c, l += c, a > e && a > i ? (a = V(e, i), l = 2 * i - a) : a < e && a < i && (a = $(e, i), l = 2 * i - a), l > o && l > i ? (l = V(o, i), a = 2 * i - l) : l < o && l < i && (l = $(o, i), a = 2 * i - l), t.rightContX = f, t.rightContY = l
                }
                return n ? (t = ["C", s.rightContX || s.plotX, s.rightContY || s.plotY, u || r, a || i, r, i], s.rightContX = s.rightContY = null) : t = ["M", r, i], t
            }
        }), qt.spline = yn, nn.areaspline = t(nn.area), bn = bn.prototype, yn = m(yn, {
            type: "areaspline",
            closedStacks: !0,
            getSegmentPath: bn.getSegmentPath,
            closeSegment: bn.closeSegment,
            drawGraph: bn.drawGraph,
            drawLegendSymbol: fn.drawRectangle
        }), qt.areaspline = yn, nn.column = t(Rt, {
            borderColor: "#FFFFFF",
            borderWidth: 1,
            borderRadius: 0,
            groupPadding: .2,
            marker: null,
            pointPadding: .1,
            minPointLength: 0,
            cropThreshold: 50,
            pointRange: null,
            states: {
                hover: {
                    brightness: .1,
                    shadow: !1
                },
                select: {
                    color: "#C0C0C0",
                    borderColor: "#000000",
                    shadow: !1
                }
            },
            dataLabels: {
                align: null,
                verticalAlign: null,
                y: null
            },
            stickyTracking: !1,
            threshold: 0
        }), yn = m(gn, {
            type: "column",
            pointAttrToOptions: {
                stroke: "borderColor",
                "stroke-width": "borderWidth",
                fill: "color",
                r: "borderRadius"
            },
            cropShoulder: 0,
            trackerGroups: ["group", "dataLabelsGroup"],
            negStacks: !0,
            init: function() {
                gn.prototype.init.apply(this, arguments);
                var e = this,
                    t = e.chart;
                t.hasRendered && Vt(t.series, function(t) {
                    t.type === e.type && (t.isDirty = !0)
                })
            },
            getColumnMetrics: function() {
                var e = this,
                    t = e.options,
                    n = e.xAxis,
                    r = e.yAxis,
                    i = n.reversed,
                    s, o = {},
                    u, a = 0;
                t.grouping === !1 ? a = 1 : Vt(e.chart.series, function(t) {
                    var n = t.options,
                        i = t.yAxis;
                    t.type === e.type && t.visible && r.len === i.len && r.pos === i.pos && (n.stacking ? (s = t.stackKey, o[s] === I && (o[s] = a++), u = o[s]) : n.grouping !== !1 && (u = a++), t.columnIndex = u)
                });
                var n = $(J(n.transA) * (n.ordinalSlope || t.pointRange || n.closestPointRange || 1), n.len),
                    f = n * t.groupPadding,
                    c = (n - 2 * f) / a,
                    h = t.pointWidth,
                    t = l(h) ? (c - h) / 2 : c * t.pointPadding,
                    h = p(h, c - 2 * t);
                return e.columnMetrics = {
                    width: h,
                    offset: t + (f + ((i ? a - (e.columnIndex || 0) : e.columnIndex) || 0) * c - n / 2) * (i ? -1 : 1)
                }
            },
            translate: function() {
                var e = this.chart,
                    t = this.options,
                    n = t.borderWidth,
                    r = this.yAxis,
                    i = this.translatedThreshold = r.getThreshold(t.threshold),
                    s = p(t.minPointLength, 5),
                    t = this.getColumnMetrics(),
                    o = t.width,
                    u = this.barW = X(V(o, 1 + 2 * n)),
                    a = this.pointXOffset = t.offset,
                    f = -(n % 2 ? .5 : 0),
                    l = n % 2 ? .5 : 1;
                e.renderer.isVML && e.inverted && (l += 1), gn.prototype.translate.apply(this), Vt(this.points, function(e) {
                    var t = p(e.yBottom, i),
                        n = $(V(-999 - t, e.plotY), r.len + 999 + t),
                        c = e.plotX + a,
                        h = u,
                        d = $(n, t),
                        v, n = V(n, t) - d;
                    J(n) < s && s && (n = s, d = z(J(d - i) > s ? t - s : i - (r.translate(e.y, 0, 1, 0, 1) <= i ? s : 0))), e.barX = c, e.pointWidth = o, t = J(c) < .5, h = z(c + h) + f, c = z(c) + f, h -= c, v = J(d) < .5, n = z(d + n) + l, d = z(d) + l, n -= d, t && (c += 1, h -= 1), v && (d -= 1, n += 1), e.shapeType = "rect", e.shapeArgs = {
                        x: c,
                        y: d,
                        width: h,
                        height: n
                    }
                })
            },
            getSymbol: wt,
            drawLegendSymbol: fn.drawRectangle,
            drawGraph: wt,
            drawPoints: function() {
                var e = this,
                    n = this.chart,
                    r = e.options,
                    i = n.renderer,
                    s = n.options.animationLimit || 250,
                    o;
                Vt(e.points, function(u) {
                    var a = u.plotY,
                        f = u.graphic;
                    a !== I && !isNaN(a) && u.y !== null ? (o = u.shapeArgs, f ? (tn(f), f[n.pointCount < s ? "animate" : "attr"](t(o))) : u.graphic = i[u.shapeType](o).attr(u.pointAttr[u.selected ? "select" : ""]).add(e.group).shadow(r.shadow, null, r.stacking && !r.borderRadius)) : f && (u.graphic = f.destroy())
                })
            },
            drawTracker: Ut.drawTrackerPoint,
            animate: function(e) {
                var t = this.yAxis,
                    n = this.options,
                    r = this.chart.inverted,
                    i = {};
                ut && (e ? (i.scaleY = .001, e = $(t.pos + t.len, V(t.pos, t.toPixels(n.threshold))), r ? i.translateX = e - t.len : i.translateY = e, this.group.attr(i)) : (i.scaleY = 1, i[r ? "translateX" : "translateY"] = t.pos, this.group.animate(i, this.options.animation), this.animate = null))
            },
            remove: function() {
                var e = this,
                    t = e.chart;
                t.hasRendered && Vt(t.series, function(t) {
                    t.type === e.type && (t.isDirty = !0)
                }), gn.prototype.remove.apply(e, arguments)
            }
        }), qt.column = yn, nn.bar = t(nn.column), yn = m(yn, {
            type: "bar",
            inverted: !0
        }), qt.bar = yn, nn.scatter = t(Rt, {
            lineWidth: 0,
            tooltip: {
                headerFormat: '<span style="font-size: 10px; color:{series.color}">{series.name}</span><br/>',
                pointFormat: "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>",
                followPointer: !0
            },
            stickyTracking: !1
        }), yn = m(gn, {
            type: "scatter",
            sorted: !1,
            requireSorting: !1,
            noSharedTooltip: !0,
            trackerGroups: ["markerGroup"],
            takeOrdinalPosition: !1,
            drawTracker: Ut.drawTrackerPoint,
            drawGraph: function() {
                this.options.lineWidth && gn.prototype.drawGraph.call(this)
            },
            setTooltipPoints: wt
        }), qt.scatter = yn, nn.pie = t(Rt, {
            borderColor: "#FFFFFF",
            borderWidth: 1,
            center: [null, null],
            clip: !1,
            colorByPoint: !0,
            dataLabels: {
                distance: 30,
                enabled: !0,
                formatter: function() {
                    return this.point.name
                }
            },
            ignoreHiddenPoint: !0,
            legendType: "point",
            marker: null,
            size: null,
            showInLegend: !1,
            slicedOffset: 10,
            states: {
                hover: {
                    brightness: .1,
                    shadow: !1
                }
            },
            stickyTracking: !1,
            tooltip: {
                followPointer: !0
            }
        }), Rt = {
            type: "pie",
            isCartesian: !1,
            pointClass: m(mn, {
                init: function() {
                    mn.prototype.init.apply(this, arguments);
                    var t = this,
                        n;
                    return t.y < 0 && (t.y = null), e(t, {
                        visible: t.visible !== !1,
                        name: p(t.name, "Slice")
                    }), n = function(e) {
                        t.slice(e.type === "select")
                    }, Qt(t, "select", n), Qt(t, "unselect", n), t
                },
                setVisible: function(e) {
                    var t = this,
                        n = t.series,
                        r = n.chart,
                        i;
                    t.visible = t.options.visible = e = e === I ? !t.visible : e, n.options.data[Xt(t, n.data)] = t.options, i = e ? "show" : "hide", Vt(["graphic", "dataLabel", "connector", "shadowGroup"], function(e) {
                        t[e] && t[e][i]()
                    }), t.legendItem && r.legend.colorizeItem(t, e), !n.isDirty && n.options.ignoreHiddenPoint && (n.isDirty = !0, r.redraw())
                },
                slice: function(e, t, n) {
                    var r = this.series;
                    M(n, r.chart), p(t, !0), this.sliced = this.options.sliced = e = l(e) ? e : !this.sliced, r.options.data[Xt(this, r.data)] = this.options, e = e ? this.slicedTranslation : {
                        translateX: 0,
                        translateY: 0
                    }, this.graphic.animate(e), this.shadowGroup && this.shadowGroup.animate(e)
                }
            }),
            requireSorting: !1,
            noSharedTooltip: !0,
            trackerGroups: ["group", "dataLabelsGroup"],
            axisTypes: [],
            pointAttrToOptions: {
                stroke: "borderColor",
                "stroke-width": "borderWidth",
                fill: "color"
            },
            getColor: wt,
            animate: function(e) {
                var t = this,
                    n = t.points,
                    r = t.startAngleRad;
                e || (Vt(n, function(e) {
                    var n = e.graphic,
                        e = e.shapeArgs;
                    n && (n.attr({
                        r: t.center[3] / 2,
                        start: r,
                        end: r
                    }), n.animate({
                        r: e.r,
                        start: e.start,
                        end: e.end
                    }, t.options.animation))
                }), t.animate = null)
            },
            setData: function(e, t) {
                gn.prototype.setData.call(this, e, !1), this.processData(), this.generatePoints(), p(t, !0) && this.chart.redraw()
            },
            generatePoints: function() {
                var e, t = 0,
                    n, r, i, s = this.options.ignoreHiddenPoint;
                gn.prototype.generatePoints.call(this), n = this.points, r = n.length;
                for (e = 0; e < r; e++)
                    i = n[e], t += s && !i.visible ? 0 : i.y;
                this.total = t;
                for (e = 0; e < r; e++)
                    i = n[e], i.percentage = t > 0 ? i.y / t * 100 : 0, i.total = t
            },
            translate: function(e) {
                this.generatePoints();
                var t = 0,
                    n = this.options,
                    r = n.slicedOffset,
                    i = r + n.borderWidth,
                    s, o, u, a = n.startAngle || 0,
                    f = this.startAngleRad = G / 180 * (a - 90),
                    a = (this.endAngleRad = G / 180 * ((n.endAngle || a + 360) - 90)) - f,
                    l = this.points,
                    c = n.dataLabels.distance,
                    n = n.ignoreHiddenPoint,
                    h, p = l.length,
                    d;
                e || (this.center = e = this.getCenter()), this.getX = function(t, n) {
                    return u = U.asin((t - e[1]) / (e[2] / 2 + c)), e[0] + (n ? -1 : 1) * K(u) * (e[2] / 2 + c)
                };
                for (h = 0; h < p; h++) {
                    d = l[h], s = f + t * a;
                    if (!n || d.visible)
                        t += d.percentage / 100;
                    o = f + t * a, d.shapeType = "arc", d.shapeArgs = {
                        x: e[0],
                        y: e[1],
                        r: e[2] / 2,
                        innerR: e[3] / 2,
                        start: z(s * 1e3) / 1e3,
                        end: z(o * 1e3) / 1e3
                    }, u = (o + s) / 2, u > .75 * a && (u -= 2 * G), d.slicedTranslation = {
                        translateX: z(K(u) * r),
                        translateY: z(Q(u) * r)
                    }, s = K(u) * e[2] / 2, o = Q(u) * e[2] / 2, d.tooltipPos = [e[0] + s * .7, e[1] + o * .7], d.half = u < -G / 2 || u > G / 2 ? 1 : 0, d.angle = u, i = $(i, c / 2), d.labelPos = [e[0] + s + K(u) * c, e[1] + o + Q(u) * c, e[0] + s + K(u) * i, e[1] + o + Q(u) * i, e[0] + s, e[1] + o, c < 0 ? "center" : d.half ? "right" : "left", u]
                }
            },
            setTooltipPoints: wt,
            drawGraph: null,
            drawPoints: function() {
                var t = this,
                    n = t.chart.renderer,
                    r, i, s = t.options.shadow,
                    o, u;
                s && !t.shadowGroup && (t.shadowGroup = n.g("shadow").add(t.group)), Vt(t.points, function(a) {
                    i = a.graphic, u = a.shapeArgs, o = a.shadowGroup, s && !o && (o = a.shadowGroup = n.g("shadow").add(t.shadowGroup)), r = a.sliced ? a.slicedTranslation : {
                        translateX: 0,
                        translateY: 0
                    }, o && o.attr(r), i ? i.animate(e(u, r)) : a.graphic = i = n.arc(u).setRadialReference(t.center).attr(a.pointAttr[a.selected ? "select" : ""]).attr({
                        "stroke-linejoin": "round"
                    }).attr(r).add(t.group).shadow(s, o), a.visible !== void 0 && a.setVisible(a.visible)
                })
            },
            sortByAngle: function(e, t) {
                e.sort(function(e, n) {
                    return e.angle !== void 0 && (n.angle - e.angle) * t
                })
            },
            drawTracker: Ut.drawTrackerPoint,
            drawLegendSymbol: fn.drawRectangle,
            getCenter: ln.getCenter,
            getSymbol: wt
        }, Rt = m(gn, Rt), qt.pie = Rt, gn.prototype.drawDataLabels = function() {
            var n = this,
                r = n.options,
                i = r.cursor,
                s = r.dataLabels,
                r = n.points,
                o, u, a, f;
            if (s.enabled || n._hasPointLabels)
                n.dlProcessOptions && n.dlProcessOptions(s), f = n.plotGroup("dataLabelsGroup", "data-labels", n.visible ? "visible" : "hidden", s.zIndex || 6), u = s, Vt(r, function(r) {
                    var c, h = r.dataLabel,
                        d, v, m = r.connector,
                        g = !0;
                    o = r.options && r.options.dataLabels, c = p(o && o.enabled, u.enabled);
                    if (h && !c)
                        r.dataLabel = h.destroy();
                    else if (c) {
                        s = t(u, o), c = s.rotation, d = r.getLabelConfig(), a = s.format ? w(s.format, d) : s.formatter.call(d, s), s.style.color = p(s.color, s.style.color, n.color, "black");
                        if (h) {
                            if (l(a))
                                h.attr({
                                    text: a
                                }), g = !1;
                            else if (r.dataLabel = h = h.destroy(), m)
                                r.connector = m.destroy()
                        } else if (l(a)) {
                            h = {
                                fill: s.backgroundColor,
                                stroke: s.borderColor,
                                "stroke-width": s.borderWidth,
                                r: s.borderRadius || 0,
                                rotation: c,
                                padding: s.padding,
                                zIndex: 1
                            };
                            for (v in h)
                                h[v] === I && delete h[v];
                            h = r.dataLabel = n.chart.renderer[c ? "text" : "label"](a, 0, -999, null, null, null, s.useHTML).attr(h).css(e(s.style, i && {
                                cursor: i
                            })).add(f).shadow(s.shadow)
                        }
                        h && n.alignDataLabel(r, h, s, null, g)
                    }
                })
        }, gn.prototype.alignDataLabel = function(t, n, r, i, s) {
            var o = this.chart,
                u = o.inverted,
                a = p(t.plotX, -999),
                f = p(t.plotY, -999),
                l = n.getBBox();
            if (t = this.visible && (t.series.forceDL || o.isInsidePlot(t.plotX, t.plotY, u)))
                i = e({
                    x: u ? o.plotWidth - f : a,
                    y: z(u ? o.plotHeight - a : f),
                    width: 0,
                    height: 0
                }, i), e(r, {
                    width: l.width,
                    height: l.height
                }), r.rotation ? (u = {
                    align: r.align,
                    x: i.x + r.x + i.width / 2,
                    y: i.y + r.y + i.height / 2
                }, n[s ? "attr" : "animate"](u)) : (n.align(r, null, i), u = n.alignAttr, p(r.overflow, "justify") === "justify" ? this.justifyDataLabel(n, r, u, l, i, s) : p(r.crop, !0) && (t = o.isInsidePlot(u.x, u.y) && o.isInsidePlot(u.x + l.width, u.y + l.height)));
            t || (n.attr({
                y: -999
            }), n.placed = !1)
        }, gn.prototype.justifyDataLabel = function(e, t, n, r, i, s) {
            var o = this.chart,
                u = t.align,
                a = t.verticalAlign,
                f, l;
            f = n.x, f < 0 && (u === "right" ? t.align = "left" : t.x = -f, l = !0), f = n.x + r.width, f > o.plotWidth && (u === "left" ? t.align = "right" : t.x = o.plotWidth - f, l = !0), f = n.y, f < 0 && (a === "bottom" ? t.verticalAlign = "top" : t.y = -f, l = !0), f = n.y + r.height, f > o.plotHeight && (a === "top" ? t.verticalAlign = "bottom" : t.y = o.plotHeight - f, l = !0), l && (e.placed = !s, e.align(t, null, i))
        }, qt.pie && (qt.pie.prototype.drawDataLabels = function() {
            var e = this,
                t = e.data,
                n, r = e.chart,
                i = e.options.dataLabels,
                s = p(i.connectorPadding, 10),
                o = p(i.connectorWidth, 1),
                u = r.plotWidth,
                r = r.plotHeight,
                a, f, l = p(i.softConnector, !0),
                c = i.distance,
                h = e.center,
                d = h[2] / 2,
                v = h[1],
                m = c > 0,
                g, y, b, w, E = [
                    [],
                    []
                ],
                S, x, T, N, k, L = [0, 0, 0, 0],
                A = function(e, t) {
                    return t.y - e.y
                };
            if (e.visible && (i.enabled || e._hasPointLabels)) {
                gn.prototype.drawDataLabels.apply(e), Vt(t, function(e) {
                    e.dataLabel && e.visible && E[e.half].push(e)
                });
                for (N = 0; !w && t[N];)
                    w = t[N] && t[N].dataLabel && (t[N].dataLabel.getBBox().height || 21), N++;
                for (N = 2; N--;) {
                    var t = [],
                        O = [],
                        M = E[N],
                        _ = M.length,
                        D;
                    e.sortByAngle(M, N - .5);
                    if (c > 0) {
                        for (k = v - d - c; k <= v + d + c; k += w)
                            t.push(k);
                        y = t.length;
                        if (_ > y) {
                            n = [].concat(M), n.sort(A);
                            for (k = _; k--;)
                                n[k].rank = k;
                            for (k = _; k--;)
                                M[k].rank >= y && M.splice(k, 1);
                            _ = M.length
                        }
                        for (k = 0; k < _; k++) {
                            n = M[k], b = n.labelPos, n = 9999;
                            var P, H;
                            for (H = 0; H < y; H++)
                                P = J(t[H] - b[1]), P < n && (n = P, D = H);
                            if (D < k && t[k] !== null)
                                D = k;
                            else
                                for (y < _ - k + D && t[k] !== null && (D = y - _ + k); t[D] === null;)
                                    D++;
                            O.push({
                                i: D,
                                y: t[D]
                            }), t[D] = null
                        }
                        O.sort(A)
                    }
                    for (k = 0; k < _; k++) {
                        n = M[k], b = n.labelPos, g = n.dataLabel, T = n.visible === !1 ? "hidden" : "visible", n = b[1];
                        if (c > 0) {
                            if (y = O.pop(), D = y.i, x = y.y, n > x && t[D + 1] !== null || n < x && t[D - 1] !== null)
                                x = n
                        } else
                            x = n;
                        S = i.justify ? h[0] + (N ? -1 : 1) * (d + c) : e.getX(D === 0 || D === t.length - 1 ? n : x, N), g._attr = {
                            visibility: T,
                            align: b[6]
                        }, g._pos = {
                            x: S + i.x + ({
                                left: s,
                                right: -s
                            }[b[6]] || 0),
                            y: x + i.y - 10
                        }, g.connX = S, g.connY = x, this.options.size === null && (y = g.width, S - y < s ? L[3] = V(z(y - S + s), L[3]) : S + y > u - s && (L[1] = V(z(S + y - u + s), L[1])), x - w / 2 < 0 ? L[0] = V(z(-x + w / 2), L[0]) : x + w / 2 > r && (L[2] = V(z(x + w / 2 - r), L[2])))
                    }
                }
                if (C(L) === 0 || this.verifyDataLabelOverflow(L))
                    this.placeDataLabels(), m && o && Vt(this.points, function(t) {
                        a = t.connector, b = t.labelPos, (g = t.dataLabel) && g._pos ? (T = g._attr.visibility, S = g.connX, x = g.connY, f = l ? ["M", S + (b[6] === "left" ? 5 : -5), x, "C", S, x, 2 * b[2] - b[4], 2 * b[3] - b[5], b[2], b[3], "L", b[4], b[5]] : ["M", S + (b[6] === "left" ? 5 : -5), x, "L", b[2], b[3], "L", b[4], b[5]], a ? (a.animate({
                            d: f
                        }), a.attr("visibility", T)) : t.connector = a = e.chart.renderer.path(f).attr({
                            "stroke-width": o,
                            stroke: i.connectorColor || t.color || "#606060",
                            visibility: T
                        }).add(e.group)) : a && (t.connector = a.destroy())
                    })
            }
        }, qt.pie.prototype.placeDataLabels = function() {
            Vt(this.points, function(e) {
                var e = e.dataLabel,
                    t;
                e && ((t = e._pos) ? (e.attr(e._attr), e[e.moved ? "animate" : "attr"](t), e.moved = !0) : e && e.attr({
                    y: -999
                }))
            })
        }, qt.pie.prototype.alignDataLabel = wt, qt.pie.prototype.verifyDataLabelOverflow = function(e) {
            var t = this.center,
                n = this.options,
                r = n.center,
                i = n = n.minSize || 80,
                s;
            return r[0] !== null ? i = V(t[2] - V(e[1], e[3]), n) : (i = V(t[2] - e[1] - e[3], n), t[0] += (e[3] - e[1]) / 2), r[1] !== null ? i = V($(i, t[2] - V(e[0], e[2])), n) : (i = V($(i, t[2] - e[0] - e[2]), n), t[1] += (e[0] - e[2]) / 2), i < t[2] ? (t[2] = i, this.translate(t), Vt(this.points, function(e) {
                e.dataLabel && (e.dataLabel._pos = null)
            }), this.drawDataLabels && this.drawDataLabels()) : s = !0, s
        }), qt.column && (qt.column.prototype.alignDataLabel = function(e, n, r, i, s) {
            var o = this.chart,
                u = o.inverted,
                a = e.dlBox || e.shapeArgs,
                f = e.below || e.plotY > p(this.translatedThreshold, o.plotSizeY),
                l = p(r.inside, !!this.options.stacking);
            a && (i = t(a), u && (i = {
                x: o.plotWidth - i.y - i.height,
                y: o.plotHeight - i.x - i.width,
                width: i.height,
                height: i.width
            }), !l) && (u ? (i.x += f ? 0 : i.width, i.width = 0) : (i.y += f ? i.height : 0, i.height = 0)), r.align = p(r.align, !u || l ? "center" : f ? "right" : "left"), r.verticalAlign = p(r.verticalAlign, u || l ? "middle" : f ? "top" : "bottom"), gn.prototype.alignDataLabel.call(this, e, n, r, i, s)
        }), e(Highcharts, {
            Axis: H,
            Chart: F,
            Color: un,
            Point: mn,
            Tick: P,
            Tooltip: j,
            Renderer: lt,
            Series: gn,
            SVGElement: D,
            SVGRenderer: an,
            arrayMin: N,
            arrayMax: C,
            charts: Et,
            dateFormat: mt,
            format: w,
            pathAnim: yt,
            getOptions: function() {
                return vt
            },
            hasBidiBug: at,
            isTouchDevice: st,
            numberFormat: g,
            seriesTypes: qt,
            setOptions: function(e) {
                return vt = t(!0, vt, e), _(), vt
            },
            addEvent: Qt,
            removeEvent: Gt,
            createElement: v,
            discardElement: L,
            css: d,
            each: Vt,
            extend: e,
            map: Kt,
            merge: t,
            pick: p,
            splat: h,
            extendClass: m,
            pInt: n,
            wrap: b,
            svg: ut,
            canvas: ft,
            vml: !ut && !ft,
            product: "Highcharts",
            version: "3.0.9"
        })
    }(), define("highcharts", function() {}),
    function(e) {
        e.fn.timeline = function(t) {
            return this.each(function() {
                var n = e(this),
                    r, i, s, o, u, a = t.displayInterval || 10,
                    f, l = 1,
                    c, h = 0,
                    p = !1,
                    d = 0,
                    v = !1,
                    m = t.minuteExpanded,
                    g = t.expandedMaxMinute,
                    y = {},
                    b = t.expandedMinutes,
                    w = t.minuteInfos,
                    E = {
                        1: "HT",
                        2: "FT",
                        3: "EXT1",
                        4: "EXT2",
                        5: "PEN"
                    };
                if (b)
                    var S = function() {
                            var e = ['<div class="timeline-minutes">'];
                            for (var t in b) {
                                var n = b[t];
                                for (var r in n) {
                                    var i = n[r],
                                        s = w[i],
                                        o = 0 == r % a || s.isEndOfPeriod,
                                        u = x(i),
                                        f = '<div class="{0} {6} {7} {8}"data-period="{1}"data-minute="{2}"data-expanded-minute="{3}"title="{4}\'"style="left: {5}px">{4}</div>'.format(o ? "timeline-minute" : "timeline-mark ", s.period, s.minute, s.expandedMinute, s.isEndOfPeriod ? E[t] : s.minuteString, u, s.expandedMinute <= m ? "has-been-played" : "", g == s.expandedMinute ? "is-current-minute" : "", s.isEndOfPeriod ? "is-end-of-period" : "");
                                    e.push(f)
                                }
                            }
                            return e.push("</div>"), e.join("")
                        },
                        x = function(e) {
                            return f * (e / g)
                        },
                        T = function(e) {
                            var t = parseInt(g * (e / f), 10);
                            return t = Math.min(t, g), t = Math.max(t, 0), t
                        },
                        N = function() {
                            return e('<div class="timeline-handle" data-handle-id="' + d++ +'"></div>')
                        };
                var C = function() {
                        var e = S();
                        F.html(e)
                    },
                    k = function() {
                        var t = Math.max(y[0].expandedMinute, y[1].expandedMinute),
                            u = Math.min(y[0].expandedMinute, y[1].expandedMinute),
                            a = t == r.attr("data-expanded-minute") ? r : i;
                        if (3 != l || t == m && 0 == u)
                            s && (s.addClass("hidden"), o.addClass("hidden"), n.removeClass("live-indicator-shown"));
                        else {
                            s = n.find(".live-indicator"), 0 == s.length && (s = e('<div class="live-indicator"></div>').appendTo(n), o = n.parents(".timeline").find(".follow-live").on("click", function() {
                                D(r, 0), D(i, m), L(), s.addClass("hidden"), o.addClass("hidden"), M()
                            }));
                            var f = x(m) - 10;
                            s.removeClass("hidden").css("width", f + "px"), o.removeClass("hidden"), n.addClass("live-indicator-shown")
                        }
                    },
                    L = function() {
                        u || (u = e('<div class="range-background"></div>').appendTo(n));
                        var t = A(r),
                            s = A(i),
                            o = Math.min(t, s),
                            a = Math.abs(t - s);
                        u.css("left", o).width(a + "px")
                    },
                    A = function(e) {
                        var t = e.css("left");
                        return parseInt(t.replace("px"), 10)
                    },
                    O = function() {
                        r = N(), i = N();
                        var t = n.find(".timeline-handles");
                        t.append(r).append(i), n.find(".timeline-handle").draggable({
                            containment: this.el,
                            axis: "x",
                            drag: _.bind(function(t, n) {
                                p = !0;
                                var r = T(n.position.left);
                                D(e(n.helper[0]), r, !0)
                            }, this),
                            stop: _.bind(function(t, n) {
                                console.log("jquery.timeline: stop");
                                var r = T(n.position.left);
                                D(e(n.helper[0]), r), k(), L(), M()
                            }, this)
                        })
                    },
                    M = function() {
                        t.onChange && t.onChange(y)
                    },
                    D = function(e, t, n) {
                        var r = Math.min(t, m),
                            i = x(r),
                            s = e.outerWidth();
                        i = f - s <= i - s ? f - s : i;
                        var o = w[r];
                        o || (console.log(w), console.log(r));
                        var u = o.minuteString;
                        e.html('<span class="minute-text">' + u + "</span>"), n || (e.css("left", i + "px").attr("data-on-right", 50 < r).attr("data-expanded-minute", r).attr("data-period", o.period).attr("data-minute", o.minute), y[e.attr("data-handle-id")] = o), H()
                    },
                    P = function(e) {
                        return parseInt(e.attr("data-expanded-minute"), 10)
                    },
                    H = function() {
                        var e = P(r),
                            t = P(i);
                        h = Math.min(e, t), c = Math.max(e, t), v = c == m
                    },
                    B = function(e, t) {
                        D(r, e), D(i, t), L()
                    },
                    j = function(e, t) {
                        l = t.statusCode, g = t.expandedMaxMinute, b = t.expandedMinutes, m = Math.min(t.expandedMaxMinute, t.minuteExpanded), w = t.minuteInfos;
                        if (!c || v)
                            c = m;
                        B(h, c), L(), k(), C()
                    },
                    F = n.find(".minutes-container");
                f = 964, O(), n.on("refresh", j)
            })
        }
    }(jQuery), define("lib/jquery.timeline", function() {}), define("views/MatchCentreTimelineView", ["views/BaseView", "commentaryCreator", "highcharts", "lib/helpers/MatchCentreHelper", "lib/jquery.timeline"], function(e, t, n, r) {
    var i = e.extend({
        el: "#match-centre-timeline",
        template: "match-centre-timeline",
        formationIndex: 0,
        events: {},
        defaults: {
            mode: "team",
            currentStatName: "ratings",
            filters: {},
            minMinute: 0,
            maxMinute: 90,
            minLimit: 0,
            maxLimit: 90,
            maxLimitExpanded: 90,
            timelineWidth: 980
        },
        initialize: function(e) {
            console.log("MatchCentreTimelineView initialize start"), this.eventTypeMappings = e.eventTypeMappings, this.formationList = e.formationList, this.bindTo(this.model, "change", _.bind(function() {
                this.onModelChange()
            }, this)), console.log("MatchCentreTimelineView initialize end")
        },
        setCommentaryCreator: function() {
            this.commentaryCreator || (this.commentaryCreator = new t(this.model.get("playerIdNameDictionary"), this.formationList))
        },
        bindCustomEvents: function() {
            if (!this.customEventsBound) {
                var e = this;
                this.$el.on("player-mode-on", function(t, n) {
                    console.log("MatchCenterTimelineView player-mode-on");
                    if (!n.home || !n.away)
                        return;
                    e.mode = "player", e.currentPlayers = n, e.filters["data-player-id"] = [n.home.playerId, n.away.playerId], e.onModelChange()
                }), this.$el.on("team-mode-on", function(t) {
                    console.log("MatchCenterTimelineView team-mode-on"), e.mode = "team", e.filters = {}, e.onModelChange()
                }), this.$el.on("match-centre-stat-changed", function(t, n) {
                    console.log("MatchCenterTimelineView match-centre-stat-changed"), e.currentStatName = n, e.onModelChange()
                }), this.customEventsBound = !0
            }
        },
        onModelChange: function() {
            this.expandedMinutes = this.model.get("expandedMinutes"), this.minuteInfos = r.getMinuteInfosFromExpandedMinutes(this.expandedMinutes), this.expandedMaxMinute = this.model.get("expandedMaxMinute"), this.minuteExpanded = this.model.get("minuteExpanded"), this.setCommentaryCreator(), this.setupTimeline();
            var e = this.getTimelineInfo();
            this.bindCustomEvents(), setTimeout(_.bind(function() {
                this.renderEvents()
            }, this), 0), setTimeout(_.bind(function() {
                this.drawPerformanceLines()
            }, this), 0), this.$timeline.trigger("refresh", [e])
        },
        setupTimeline: function() {
            if (this.$timeline)
                return;
            var e = this,
                t = this.$el.find(".timeline-control"),
                n = this.getTimelineInfo();
            t.timeline(_.extend({}, {
                onChange: function(t) {
                    e.currentRange = t, e.rangeChanged()
                }
            }, n)), this.$timeline = t
        },
        getTimelineInfo: function() {
            return {
                statusCode: this.model.get("statusCode"),
                expandedMaxMinute: this.expandedMaxMinute,
                expandedMinutes: this.expandedMinutes,
                minuteInfos: this.minuteInfos,
                minuteExpanded: this.minuteExpanded
            }
        },
        modelChanged: function() {
            renderEvents(), drawPerformanceLines()
        },
        renderEvents: function() {
            this.renderEventsForTeam("home"), this.renderEventsForTeam("away")
        },
        renderEventsForTeam: function(e) {
            var t = this.prepareEvents2(e);
            NG.renderDustTemplate("match-centre-timeline-events", {
                events: t
            }, _.bind(function(t) {
                this.$el.find('.timeline-events[data-field="{0}"]'.format(e)).html(t), this.setEventVisibilities()
            }, this))
        },
        prepareEvents2: function(e) {
            var t = _.filter(this.model[e].get("incidentEvents"), function(e) {
                    return !e.isOwnGoal
                }),
                n = "home" == e ? "away" : "home",
                i = _.filter(this.model[n].get("incidentEvents"), function(e) {
                    return e.isOwnGoal
                }),
                s = _.union(t, i),
                o = [],
                u = 0;
            return s = _.sortBy(s, function(e) {
                return e.expandedMinute
            }), _.each(s, _.bind(function(e) {
                if (e.period) {
                    var t = this.expandedMinutes[e.period.value],
                        n = 0,
                        i = {};
                    if (t) {
                        var a = t[e.minute];
                        i = this.minuteInfos[a], n = r.getLeftFromMinute(a, e.second, this.expandedMaxMinute)
                    }
                    0 != n && n <= u + 1.5 && (n = Math.min(100, Math.max(u + 1.5, n + 1.5))), o.push(_.extend({}, e, {
                        left: n,
                        satisfiers: r.getKeyIncidentEventSatisfiers(e, this.eventTypeMappings),
                        text: this.commentaryCreator.getSentence(e, s),
                        minuteInfo: i
                    })), u = n
                }
            }, this)), o
        },
        prepareEvents: function(e) {
            var t = e.get("incidentEvents");
            _.each(t, _.bind(function(e) {
                if (e.period) {
                    var t = this.expandedMinutes[e.period.value];
                    if (t) {
                        var n = t[e.minute];
                        e.left = r.getLeftFromMinute(n, e.second, this.expandedMaxMinute)
                    } else
                        e.left = 0
                }
            }, this))
        },
        onRender: function() {},
        drawPerformanceLines: function() {
            if (!this.currentStatName && !this.mode)
                return;
            this.performanceChart || this.createPerformanceLines();
            var e = this.prepareLinesData();
            if (!this.currentStatName && !this.mode)
                return;
            setTimeout(_.bind(function() {
                var t = this.performanceChart.redraw;
                this.performanceChart.redraw = function() {}, this.clearPerformanceLines(), this.addPerformanceLine(e.home), this.addPerformanceLine(e.away), this.performanceChart.redraw = t, this.performanceChart.redraw()
            }, this), 0)
        },
        addPerformanceLineForTeam: function(e, t) {
            var n = this.$el.find(".timeline-stat-performance2 [data-field={0}]".format(t)),
                r = e[t].data;
            if (!r)
                return;
            var i = this.prepareStatsForTimeline(r, t);
            NG.renderDustTemplate("match-centre-timeline-stats", i, _.bind(function(e) {
                n.html(e)
            }, this))
        },
        prepareStatsForTimeline: function(e, t) {
            var n = [],
                i = 0,
                s = this;
            _.each(e, function(e, t) {
                var o = r.getLeftFromMinute(t, 0, s.expandedMaxMinute),
                    u = s.minuteInfos[t];
                i = Math.max(i, e), n.push(_.extend({}, {
                    left: o,
                    value: e
                }, u))
            });
            var o = 100 / i;
            return _.each(n, function(e) {
                e.eventHeight = o, e.height = o * e.value, "home" == t ? e.top = 100 - e.height : e.bottom = 100 - e.height
            }), {
                stats: n,
                maxNoOfEventsInExpandedMinute: i
            }
        },
        prepareLinesData: function() {
            return {
                home: this.prepareLineDataForField("home"),
                away: this.prepareLineDataForField("away")
            }
        },
        getStatValuesForLine: function(e) {
            var t = [];
            if (!e)
                return t;
            if (!e[this.currentStatName])
                return t;
            var n;
            for (var r = 0; r <= this.expandedMaxMinute; r++)
                e[this.currentStatName][r] ? (n = e[this.currentStatName][r], t.push({
                    x: r,
                    y: n
                })) : "ratings" == this.currentStatName && null != n ? t.push({
                    x: r,
                    y: n
                }) : t.push({
                    x: r,
                    y: 0,
                    color: "#000"
                });
            return t
        },
        turnChartOptionsForRatingOn: function() {
            var e = this.performanceChart.options;
            this.performanceChart = new Highcharts.Chart(e)
        },
        turnChartOptionsForRatingOff: function() {
            var e = this.performanceChart.options;
            e.yAxis[0].min = null, e.yAxis[0].max = null, this.performanceChart = new Highcharts.Chart(e)
        },
        prepareLineDataForField: function(e) {
            var t = "home" == e ? "#3399CC" : "#C0392B";
            return "ratings" == this.currentStatName ? this.turnChartOptionsForRatingOn() : this.turnChartOptionsForRatingOff(), "team" == this.mode ? {
                name: this.model[e].get("name"),
                color: t,
                data: this.getStatValuesForLine(this.model[e].get("stats"))
            } : {
                name: this.currentPlayers[e].name,
                color: t,
                data: this.getStatValuesForLine(this.currentPlayers[e].stats)
            }
        },
        addPerformanceLine: function(e) {
            this.performanceChart.addSeries(e)
        },
        clearPerformanceLines: function() {
            while (0 != this.performanceChart.series.length)
                this.performanceChart.series[0].remove()
        },
        createPerformanceLines: function() {
            var e = this;
            this.performanceChart = new Highcharts.Chart({
                chart: {
                    renderTo: this.$el.find(".timeline-stat-performance")[0],
                    type: "spline",
                    backgroundColor: "transparent",
                    width: 964,
                    height: 66,
                    margin: 0
                },
                enableMouseTracking: !1,
                title: {
                    text: ""
                },
                legend: {
                    enabled: !1
                },
                xAxis: {
                    lineWidth: 0,
                    minorGridLineWidth: 0,
                    gridLineWidth: 0,
                    lineColor: "transparent",
                    labels: {
                        enabled: !1
                    },
                    minorTickLength: 0,
                    tickLength: 0
                },
                yAxis: {
                    title: {
                        text: ""
                    },
                    lineWidth: 0,
                    minorGridLineWidth: 0,
                    gridLineWidth: 0,
                    lineColor: "transparent",
                    labels: {
                        enabled: !1
                    },
                    minorTickLength: 0,
                    tickLength: 0
                },
                tooltip: {
                    shared: !0,
                    backgroundColor: "#222222",
                    borderColor: "#444",
                    useHTML: !0,
                    style: {
                        padding: 10,
                        color: "#d0d0d0",
                        fontSize: 16,
                        fontWeight: "bold",
                        fontFamily: "Helvetica, Arial, sans-serif",
                        borderColor: "#273C29",
                        zIndex: 99999
                    },
                    formatter: function() {
                        if (!this.points || 2 != this.points.length)
                            return;
                        if (!this.points[0].series || !this.points[1].series)
                            return;
                        var t = this.x,
                            n = this.points[0].series.name,
                            r = this.points[1].series.name,
                            i = this.points[0].series.color,
                            s = this.points[1].series.color,
                            o = this.points[0].y % 1 === 0 ? this.points[0].y : NG.roundNumberAsString(this.points[0].y, 2),
                            u = this.points[1].y % 1 === 0 ? this.points[1].y : NG.roundNumberAsString(this.points[1].y, 2),
                            a = u < o ? 16 : 13,
                            f = o < u ? 16 : 13,
                            l = e.minuteInfos[t],
                            c = '<div class="timeline-lines-detail"><div class="timeline-lines-detail-minute">' + l.minuteString + "'</div>" + '<span class="home-timeline-value">' + '<span>{2} <span class="value" style="color: {0}; font-size: {3}px;">{1}</span></span>'.format(i, o, n, a) + "</span>" + " - " + '<span class="away-timeline-value">' + '<span><span class="value" style="color: {0}; font-size: {3}px;">{1}</span> {2}</span> '.format(s, u, r, f) + "</span>" + "</div>";
                        return c
                    }
                },
                credits: {
                    enabled: !1
                },
                plotOptions: {
                    spline: {
                        lineWidth: 2,
                        states: {
                            hover: {
                                lineWidth: 5
                            }
                        },
                        marker: {
                            enabled: !1
                        },
                        pointInterval: 36e5,
                        pointStart: Date.UTC(2009, 9, 6, 0, 0, 0)
                    }
                }
            })
        },
        rangeChanged: function() {
            this.setEventVisibilities(), this.$el.trigger("minutes-range-changed", [this.currentRange])
        },
        setEventVisibilities: function() {
            if (this.currentRange) {
                var e = this.currentRange[0],
                    t = this.currentRange[1];
                this.minMinute = Math.min(e.minute, t.minute), this.maxMinute = Math.max(e.minute, t.minute)
            } else
                this.minMinute = 0, this.maxMinute = this.model.get("expandedMaxMinute");
            var n = this,
                r = this.$el.find(".timeline-event");
            r.each(function() {
                var e = $(this);
                try {
                    e.removeClass("disabled"), n.satisfiesCurrentFilters(e) || e.addClass("disabled")
                } catch (t) {}
            })
        },
        satisfiesCurrentFilters: function(e) {
            var t = this.satisfiesMinuteRange(e),
                n = this.satisfiesTeamPlayerFilters(e);
            return t && n
        },
        satisfiesTeamPlayerFilters: function(e) {
            var t = !0;
            for (var n in this.filters) {
                var r = this.filters[n],
                    i = e.attr(n);
                i ? t = t && _.contains(r, parseInt(i, 10)) : t = !1
            }
            return t
        },
        satisfiesMinuteRange: function(e) {
            var t = e.attr("data-minute"),
                n = parseInt(t, 10);
            e.removeClass("disabled");
            var r = n < this.minMinute,
                i = this.maxMinute < n;
            return !r && !i
        }
    });
    return i
}), define("views/MatchCentreCommentaryView", ["backbone", "views/BaseView", "commentaryCreator", "lib/helpers/MatchCentreHelper"], function(e, t, n, r) {
    var i = t.extend({
        template: "match-centre-commentary",
        defaults: {
            pageSize: 20,
            currentPage: 0,
            expanded: !1,
            commentaryItems: {}
        },
        events: {
            "click .pager-link a": "pageChanged",
            "click .show-more-commentaries": "showMore",
            "click .commentary-item:first-child": "commentaryItemClicked",
            "click #collapsable-toggle": "commentaryItemClicked",
            "click .page-navigation-item": "pageNavigationItemClicked"
        },
        initialize: function(e) {
            this.mode = e.mode, this.selfRenderOnly = e.selfRenderOnly, this.eventTypeMappings = e.eventTypeMappings, this.formationList = e.formationList, this.selfRenderOnly && this.model.on("change", _.bind(function() {
                this.onModelChange()
            }, this)), this.setPageName()
        },
        onModelChange: function() {
            this.commentaryEvents = null, this.commentaryItems = [], this.expandedMinutes = this.model.get("expandedMinutes"), this.minuteInfos = r.getMinuteInfosFromExpandedMinutes(this.expandedMinutes), this.setCommentaryCreator(), this.render()
        },
        showMore: function(e) {
            this.$el.trigger("show-more-clicked")
        },
        setCommentaryCreator: function() {
            this.commentaryCreator || (this.commentaryCreator = new n(this.model.get("playerIdNameDictionary"), this.formationList))
        },
        pageChanged: function(e) {
            e.preventDefault(), e.stopPropagation();
            var t = $(e.currentTarget),
                n = t.attr("href");
            return this.$el.find(".pager-link a").removeClass("selected"), t.addClass("selected"), this.currentPage = parseInt(n, 10), this.render(), !1
        },
        renderPageInfo: function() {
            this.$el.find(".current-page").html(this.currentPage + 1), this.$el.find(".total-pages").html(this.pageCount + 1)
        },
        pageNavigationItemClicked: function(e) {
            e.preventDefault(), e.stopPropagation();
            var t = $(e.currentTarget),
                n = t.attr("data-page");
            return "first-page" == n && (this.currentPage = 0), "last-page" == n && (this.currentPage = this.pageCount), "prev-page" == n && (this.currentPage = Math.max(0, this.currentPage - 1)), "next-page" == n && (this.currentPage = Math.min(this.pageCount, this.currentPage + 1)), this.setPageName(), this.render(), !1
        },
        setPageName: function() {
            var e = 0 == this.currentPage ? "first-page" : this.pageCount == this.currentPage ? "last-page" : "middle-page";
            this.$el.attr("data-page-name", e).attr("data-page-number", this.currentPage)
        },
        templateContext: function() {
            return this.commentaryItems[this.currentPage] || this.generatePageCommentaries(), {
                currentPage: this.currentPage,
                pageSize: this.pageCount,
                showPager: this.mode != "collapsable",
                showMore: this.mode == "collapsable",
                events: this.commentaryItems[this.currentPage]
            }
        },
        ensureCommentaryEventsAreUpdated: function() {
            this.commentaryEvents || (this.commentaryEvents = _.clone(this.model.get("events")), this.commentaryEvents = _.filter(this.commentaryEvents, _.bind(function(e) {
                return this.eventIsIncludedForCommentary(e)
            }, this)), this.commentaryEvents = _.sortBy(this.commentaryEvents, function(e) {
                var t = e.second || 0;
                return -parseInt(e.expandedMinute * 60 + t, 10)
            }))
        },
        generatePageCommentaries: function() {
            this.ensureCommentaryEventsAreUpdated(), this.pageCount = parseInt(this.commentaryEvents.length / this.pageSize, 10);
            var e = this.commentaryEvents.slice(this.currentPage * this.pageSize, (this.currentPage + 1) * this.pageSize);
            this.commentaryItems[this.currentPage] = this.setCommentaryTexts(e)
        },
        setCommentaryTexts: function(e) {
            return _.each(e, _.bind(function(t) {
                t.teamId && (t.field = this.model.home.get("teamId") == t.teamId ? 1 : 2), t.satisfiers = r.getKeyIncidentEventSatisfiers(t, this.eventTypeMappings), t.text = this.commentaryCreator.getSentence(t, e), t.minuteInfo = 5 != t.period.value ? this.minuteInfos[t.expandedMinute] : {
                    minuteString: "Pen"
                }
            }, this)), e = _.sortBy(e, function(e) {
                return -parseInt(e.expandedMinute * 60 + e.second, 10)
            }), e
        },
        includedSatisfierTypes: [],
        excludedSatisfierTypes: ["shortPassAccurate", "shortPassInaccurate"],
        excludedEventTypes: [1],
        includedEventTypes: [30, 32, 13, 14, 15, 16, 6, 1e4, 10, 17, 18, 19],
        eventIsIncludedForCommentary: function(e) {
            var t = -1 != this.includedEventTypes.indexOf(e.type.value),
                n = this,
                r = !1;
            _.each(e.satisfiedEventsTypes, function(e) {
                var t = n.eventTypeMappings[e];
                r = r || -1 != n.includedSatisfierTypes.indexOf(t)
            });
            var i = -1 != [30, 32].indexOf(e.type.value) && e.teamId == this.model.away.get("teamId");
            return (t || r) && !i
        },
        onRender: function() {
            this.applyMode(), this.renderPageInfo();
            var e = this.$el.height();
            this.$el.css("min-height", e)
        },
        applyMode: function() {
            this.mode ? (this.$el.attr("data-mode", this.mode), _.bind(this.modes[this.mode], this)()) : this.$el.addClass("full")
        },
        commentaryItemClicked: function() {
            "collapsable" == this.mode && this.toggleCollapse()
        },
        toggleCollapse: function() {
            this.isExpanded = !this.isExpanded, this.$el.toggleClass("collapsed");
            if (this.isExpanded) {
                var e = this.$el.height();
                this.$el.css("min-height", e)
            } else
                this.$el.css("min-height", "")
        },
        modes: {
            collapsable: function() {
                this.isExpanded ? this.$el.removeClass("collapsed") : this.$el.addClass("collapsed"), this.$el.addClass("iconize iconize-icon-right ui-state-transparent-default")
            }
        },
        validate: function() {
            return !0
        }
    });
    return i
}), define("views/MatchCentreView", ["views/BaseView", "models/MatchCentreModel", "views/MatchCentreStadiumView", "views/MatchCentreStatsView", "views/MatchCentreTimelineView", "views/MatchCentreCommentaryView", "lib/dust.ws"], function(e, t, n, r, i, s) {
    var o = e.extend({
        isActive: !0,
        el: "#match-centre",
        template: "match-centre",
        events: {
            'click .player[data-has-stat="true"]': "selectPlayerElement",
            "click #back-to-team": "setTeamMode",
            "click .match-centre-stat": "statSelected"
        },
        defaults: {
            selectedPlayers: {}
        },
        initialize: function(e) {
            this.eventTypeMappings = e.eventTypeMappings, this.formationList = e.formationList, this.render()
        },
        onModelChange: function() {
            console.log(this.templateContext()), console.log("onModelChange:MatchCentre"), this.$el.attr("data-status-code", this.model.get("statusCode")), this.$el.attr("data-period-code", this.model.get("periodCode"))
        },
        onRender: function() {
            this.attachSubViews()
        },
        attachSubViews: function() {
            if (this.subViewsAttached)
                return;
            this.subViewsAttached = !0, this.$stats = this.$el.find("#match-centre-stats"), this.$timeline = this.$el.find("#match-centre-timeline"), this.$stadium = this.$el.find("#stadium"), this.$commentary = this.$el.find("#match-centre-commentary-summary"), this.appendSubview(new n({
                $el: this.$stadium,
                model: this.model,
                eventTypeMappings: this.eventTypeMappings
            })), this.appendSubview(new r({
                $el: this.$stats,
                model: this.model
            })), this.appendSubview(new i({
                $el: this.$timeline,
                model: this.model,
                eventTypeMappings: this.eventTypeMappings,
                formationList: this.formationList
            })), this.appendSubview(new s({
                el: "#match-centre-commentary-summary",
                $el: this.$commentary,
                model: this.model,
                eventTypeMappings: this.eventTypeMappings,
                formationList: this.formationList,
                mode: "collapsable",
                selfRenderOnly: !0
            })), this.renderSubviews(_.bind(function() {
                this.bindCustomEvents(), this.model.set("initialize", !0), this.fetchModel()
            }, this))
        },
        fetchModel: function() {
            var e = this.model.get("timeoutInSeconds"),
                t = this;
            this.liveTimeoutId && clearTimeout(this.liveTimeoutId), 0 < e && (this.liveTimeoutId = setTimeout(_.bind(function() {
                this.model.fetch({
                    success: function() {
                        ({}) == t.model.home && {} == t.model.away ? t.model.trigger("fetched-with-error") : (t.model.trigger("fetched-with-success"), t.fetchModel())
                    }
                })
            }), e * 1e3))
        },
        startAutoFetch2: function() {
            var e = this.model.get("timeoutInSeconds");
            0 < e ? this.liveIntervalId = setInterval(_.bind(function() {
                this.model.fetch()
            }), 1e3) : this.liveIntervalId && clearInterval(this.liveIntervalId)
        },
        bindCustomEvents: function() {
            if (this.customEventsBound)
                return;
            this.customEventsBound = !0, this.$bindTo(this.$stadium, "rendered", _.bind(function(e, t) {
                console.log("MatchCentreView $stadium rendered + trigger $stats:refresh"), this.$stats.trigger("refresh", [t])
            }, this)), this.$bindTo(this.$stats, "player-stats-updated-from-stats", _.bind(function(e, t) {
                console.log("MatchCentreView $stats player-stats-updated + trigger $stadium:player-stats-updated"), this.$stadium.trigger("player-stats-updated", [t])
            }, this)), this.$bindTo(this.$timeline, "minutes-range-changed", _.bind(function(e, t) {
                console.log("MatchCentreView $timeline minutes-range-changed + trigger $stadium,$stats,$el:minutes-range-changed"), this.$stats.trigger("minutes-range-changed-for-stats", [t]), this.$stadium.trigger("minutes-range-changed-for-stadium", [t]), this.$el.trigger("minutes-range-changed-for-match-centre", [t])
            }, this)), this.$bindTo(this.$stats, "match-centre-stat-changed", _.bind(function(e, t) {
                console.log("MatchCentreView $stats match-centre-stat-changed + trigger $timeline:match-centre-stat-changed"), this.$timeline.trigger("match-centre-stat-changed", [t])
            }, this)), this.$bindTo(this.$commentary, "show-more-clicked", _.bind(function(e) {
                console.log("MatchCentreView $commentary show-more-clicked + trigger $el:comments-summary-show-more"), this.$el.trigger("comments-summary-show-more")
            }, this)), this.$bindTo(this.$stats, "team-rating-changed-from-stats", _.bind(function(e, t) {
                console.log("MatchCentreView $stats team-rating-changed + trigger $el:team-rating-changed"), this.$el.trigger("team-rating-changed", [t])
            }, this)), this.$el.on("team-mode-selected", _.bind(function() {
                console.log("MatchCentreView team-mode-selected"), this.setTeamMode()
            }, this))
        },
        setDefaultComparisionMode: function() {
            this.setSelectedPlayer(this.model.home.getDefaultPlayer(), !0), this.setSelectedPlayer(this.model.away.getDefaultPlayer(), !0)
        },
        statSelected: function(e) {
            var t = $(e.currentTarget);
            if ("0" == t.attr("data-sum"))
                return;
            var n = t.attr("data-for");
            this.$stats.trigger("match-centre-stat-changed", [n])
        },
        setTeamMode: function() {
            this.$el.attr("data-comparision-mode", "team"), this.$stats.trigger("team-mode-on"), this.$timeline.trigger("team-mode-on"), this.$stadium.trigger("team-mode-on")
        },
        getTeamFormation: function(e) {
            var t = e.get("formations");
            if (!t || t.length < 0)
                return;
            return t[0]
        },
        setSelectedPlayer: function(e, t) {
            t || this.$el.attr("data-comparision-mode", "player"), this.selectedPlayers[e.field] = e, this.markPlayerAsSelected(e), this.$stats.trigger("player-selected", [e, t]), this.$stadium.trigger("player-selected", [e])
        },
        selectPlayerElement: function(e) {
            var t = $(e.currentTarget),
                n = t.attr("data-player-id"),
                r = t.parent("[data-field]").attr("data-field"),
                i = this.model[r].getPlayerWithId(n);
            this.setSelectedPlayer(i), setTimeout(_.bind(function() {
                this.$stadium.trigger("player-mode-on", [i]), this.$timeline.trigger("player-mode-on", [this.selectedPlayers]), this.ensureBothTeamsHaveSelectedPlayers()
            }, this), 0)
        },
        ensureBothTeamsHaveSelectedPlayers: function() {
            this.ensureSelectedPlayerIsMarked("home"), this.ensureSelectedPlayerIsMarked("away")
        },
        ensureSelectedPlayerIsMarked: function(e) {
            var t = this.$el.find('[data-field="{0}"] .player.selected'.format(e));
            if (0 == t.length) {
                var n = this.model[e].getDefaultPlayer(),
                    r = this.$el.find('[data-player-id="{0}"]'.format(n.playerId));
                r.click()
            }
        },
        markPlayerAsSelected: function(e) {
            var t = this.$el.find('[data-player-id="{0}"]'.format(e.playerId));
            this.$el.find('[data-field="{0}"] .player'.format(e.field)).removeClass("selected"), t.addClass("selected")
        }
    });
    return o
});
var base2 = {
    name: "base2",
    version: "1.0",
    exports: "Base,Package,Abstract,Module,Enumerable,Map,Collection,RegGrp,Undefined,Null,This,True,False,assignID,detect,global",
    namespace: ""
};
new function(_no_shrink_) {
    function assignID(e) {
        return e.base2ID || (e.base2ID = "b2_" + _counter++), e.base2ID
    }

    function _extendModule(e, t) {
        var n = e.prototype,
            r = e.toString().slice(1, -1);
        for (var i in t) {
            var s = t[i],
                o = "";
            i.charAt(0) == "@" ? detect(i.slice(1)) && _extendModule(e, s) : n[i] || (i == i.toUpperCase() ? o = "var " + i + "=" + r + "." + i + ";" : typeof s == "function" && s.call && (o = "var " + i + "=base2.lang.bind('" + i + "'," + r + ");", n[i] = _moduleMethod(e, i), n[i]._module = e), e.namespace.indexOf(o) == -1 && (e.namespace += o))
        }
    }

    function _staticModuleMethod(e, t) {
        return function() {
            return e[t].apply(e, arguments)
        }
    }

    function _moduleMethod(e, t) {
        return function() {
            var n = _slice.call(arguments);
            return n.unshift(this), e[t].apply(e, n)
        }
    }

    function assert(e, t, n) {
        if (!e)
            throw new(n || Error)(t || "Assertion failed.")
    }

    function assertArity(e, t, n) {
        t == null && (t = e.callee.length);
        if (e.length < t)
            throw new SyntaxError(n || "Not enough arguments.")
    }

    function assertType(e, t, n) {
        if (t && (typeof t == "function" ? !instanceOf(e, t) : typeOf(e) != t))
            throw new TypeError(n || "Invalid type.")
    }

    function copy(e) {
        var t = {};
        for (var n in e)
            t[n] = e[n];
        return t
    }

    function pcopy(e) {
        return _dummy.prototype = e, new _dummy
    }

    function _dummy() {}

    function base(e, t) {
        return e.base.apply(e, t)
    }

    function extend(e, t) {
        if (e && t) {
            if (arguments.length > 2) {
                var n = t;
                t = {}, t[n] = arguments[2]
            }
            var r = global[typeof t == "function" ? "Function" : "Object"].prototype;
            if (base2.__prototyping) {
                var i = _HIDDEN.length,
                    n;
                while (n = _HIDDEN[--i]) {
                    var s = t[n];
                    s != r[n] && (_BASE.test(s) ? _override(e, n, s) : e[n] = s)
                }
            }
            for (n in t)
                if (r[n] === undefined) {
                    var s = t[n];
                    if (n.charAt(0) == "@")
                        detect(n.slice(1)) && extend(e, s);
                    else {
                        var o = e[n];
                        o && typeof s == "function" ? s != o && (_BASE.test(s) ? _override(e, n, s) : (s.ancestor = o, e[n] = s)) : e[n] = s
                    }
                }
        }
        return e
    }

    function _ancestorOf(e, t) {
        while (t) {
            if (!t.ancestor)
                return !1;
            t = t.ancestor;
            if (t == e)
                return !0
        }
        return !1
    }

    function _override(e, t, n) {
        function s() {
            var e = this.base;
            this.base = i ? i[t] : r;
            var s = n.apply(this, arguments);
            return this.base = e, s
        }

        var r = e[t],
            i = base2.__prototyping;
        i && r != i[t] && (i = null), s.method = n, s.ancestor = r, e[t] = s, s.toString = K(n + "")
    }

    function forEach(e, t, n, r) {
        if (e == null)
            return;
        if (!r)
            if (typeof e == "function" && e.call)
                r = Function;
            else {
                if (typeof e.forEach == "function" && e.forEach != arguments.callee) {
                    e.forEach(t, n);
                    return
                }
                if (typeof e.length == "number") {
                    _Array_forEach(e, t, n);
                    return
                }
            }
        _Function_forEach(r || Object, e, t, n)
    }

    function _Array_forEach(e, t, n) {
        e == null && (e = global);
        var r = e.length || 0,
            i;
        if (typeof e == "string")
            for (i = 0; i < r; i++)
                t.call(n, e.charAt(i), i, e);
        else
            for (i = 0; i < r; i++)
                i in e && t.call(n, e[i], i, e)
    }

    function _Function_forEach(e, t, n, r) {
        var i = function() {
            this.i = 1
        };
        i.prototype = {
            i: 1
        };
        var s = 0;
        for (var o in new i)
            s++;
        _Function_forEach = s > 1 ? function(e, t, n, r) {
            var i = {};
            for (var s in t)
                !i[s] && e.prototype[s] === undefined && (i[s] = !0, n.call(r, t[s], s, t))
        } : function(e, t, n, r) {
            for (var i in t)
                e.prototype[i] === undefined && n.call(r, t[i], i, t)
        }, _Function_forEach(e, t, n, r)
    }

    function instanceOf(e, t) {
        if (typeof t != "function")
            throw new TypeError("Invalid 'instanceOf' operand.");
        if (e == null)
            return !1;
        if (e.constructor == t)
            return !0;
        if (t.ancestorOf)
            return t.ancestorOf(e.constructor);
        if (e instanceof t)
            return !0;
        if (Base.ancestorOf == t.ancestorOf)
            return !1;
        if (Base.ancestorOf == e.constructor.ancestorOf)
            return t == Object;
        switch (t) {
            case Array:
                return typeof e == "object" && !!e.join && !!e.splice;
            case Function:
                return typeOf(e) == "function";
            case RegExp:
                return typeof e.constructor.$1 == "string";
            case Date:
                return !!e.getTimezoneOffset;
            case String:
            case Number:
            case Boolean:
                return typeOf(e) == typeof t.prototype.valueOf();
            case Object:
                return !0
        }
        return !1
    }

    function typeOf(e) {
        var t = typeof e;
        switch (t) {
            case "object":
                return e == null ? "null" : typeof e.constructor == "undefined" ? _MSIE_NATIVE_FUNCTION.test(e) ? "function" : t : typeof e.constructor.prototype.valueOf();
            case "function":
                return typeof e.call == "function" ? t : "object";
            default:
                return t
        }
    }

    function _createObject2(e, t, n, r) {
        var i = Module.extend(),
            s = i.toString().slice(1, -1);
        forEach.csv(n, function(t) {
            i[t] = unbind(e.prototype[t]), i.namespace += format("var %1=%2.%1;", t, s)
        }), forEach(_slice.call(arguments, 3), i.implement, i);
        var o = function() {
            return i(this.constructor == i ? t.apply(null, arguments) : arguments[0])
        };
        o.prototype = i.prototype;
        for (var u in i)
            u != "prototype" && e[u] && (i[u] = e[u], delete i.prototype[u]), o[u] = i[u];
        return o.ancestor = Object, delete o.extend, o.namespace = o.namespace.replace(/(var (\w+)=)[^,;]+,([^\)]+)\)/g, "$1$3.$2"), o
    }

    function trim(e) {
        return String(e).replace(_LTRIM, "").replace(_RTRIM, "")
    }

    function csv(e) {
        return e ? (e + "").split(/\s*,\s*/) : []
    }

    function format(e) {
        var t = arguments,
            n = new RegExp("%([1-" + (arguments.length - 1) + "])", "g");
        return (e + "").replace(n, function(e, n) {
            return t[n]
        })
    }

    function match(e, t) {
        return (e + "").match(t) || []
    }

    function rescape(e) {
        return (e + "").replace(_RESCAPE, "\\$1")
    }

    function I(e) {
        return e
    }

    function II(e, t) {
        return t
    }

    function K(e) {
        return function() {
            return e
        }
    }

    function bind(e, t) {
        var n = typeof e != "function";
        if (arguments.length > 2) {
            var r = _slice.call(arguments, 2);
            return function() {
                return (n ? t[e] : e).apply(t, r.concat.apply(r, arguments))
            }
        }
        return function() {
            return (n ? t[e] : e).apply(t, arguments)
        }
    }

    function compose() {
        var e = _slice.call(arguments);
        return function() {
            var t = e.length,
                n = e[--t].apply(this, arguments);
            while (t--)
                n = e[t].call(this, n);
            return n
        }
    }

    function delegate(e, t) {
        return function() {
            var n = _slice.call(arguments);
            return n.unshift(this), e.apply(t, n)
        }
    }

    function flip(e) {
        return function() {
            return e.apply(this, Array2.swap(arguments, 0, 1))
        }
    }

    function not(e) {
        return function() {
            return !e.apply(this, arguments)
        }
    }

    function partial(e) {
        var t = _slice.call(arguments, 1);
        return function() {
            var n = t.concat(),
                r = 0,
                i = 0;
            while (r < t.length && i < arguments.length)
                n[r] === undefined && (n[r] = arguments[i++]), r++;
            while (i < arguments.length)
                n[r++] = arguments[i++];
            return Array2.contains(n, undefined) ? (n.unshift(e), partial.apply(null, n)) : e.apply(this, n)
        }
    }

    function unbind(e) {
        return function(t) {
            return e.apply(t, _slice.call(arguments, 1))
        }
    }

    function detect() {
        var e = NaN,
            t = global.java ? !0 : !1;
        if (global.navigator) {
            var n = /MSIE[\d.]+/g,
                r = document.createElement("span"),
                i = navigator.userAgent.replace(/([a-z])[\s\/](\d)/gi, "$1$2");
            e || (i = i.replace(n, "")), n.test(i) && (i = i.match(n)[0] + " " + i.replace(n, "")), base2.userAgent = navigator.platform + " " + i.replace(/like \w+/gi, ""), t &= navigator.javaEnabled()
        }
        var s = {};
        return detect = function(n) {
            if (s[n] == null) {
                var i = !1,
                    o = n,
                    u = o.charAt(0) == "!";
                u && (o = o.slice(1));
                if (o.charAt(0) == "(")
                    try {
                        i = (new Function("element,jscript,java,global", "return !!" + o))(r, e, t, global)
                    } catch (a) {} else
                    i = (new RegExp("(" + o + ")", "i")).test(base2.userAgent);
                s[n] = !!(u ^ i)
            }
            return s[n]
        }, detect(arguments[0])
    }

    var Undefined = K(),
        Null = K(null),
        True = K(!0),
        False = K(!1),
        This = function() {
            return this
        },
        global = This(),
        base2 = global.base2,
        _FORMAT = /%([1-9])/g,
        _LTRIM = /^\s\s*/,
        _RTRIM = /\s\s*$/,
        _RESCAPE = /([\/()[\]{}|*+-.,^$?\\])/g,
        _BASE = /try/.test(detect) ? /\bbase\b/ : /.*/,
        _HIDDEN = ["constructor", "toString", "valueOf"],
        _MSIE_NATIVE_FUNCTION = detect("(jscript)") ? new RegExp("^" + rescape(isNaN).replace(/isNaN/, "\\w+") + "$") : {
            test: False
        },
        _counter = 1,
        _slice = Array.prototype.slice;
    _Function_forEach();
    var _subclass = function(e, t) {
            function i() {
                if (!base2.__prototyping) {
                    if (this.constructor != arguments.callee && !this.__constructing)
                        return extend(arguments[0], n);
                    this.__constructing = !0, r.apply(this, arguments), delete this.__constructing
                }
                return this
            }

            base2.__prototyping = this.prototype;
            var n = new this;
            e && extend(n, e), delete base2.__prototyping;
            var r = n.constructor;
            n.constructor = i;
            for (var s in Base)
                i[s] = this[s];
            return i.ancestor = this, i.base = Undefined, t && extend(i, t), i.prototype = n, i.init && i.init(), i["#implements"] = [], i["#implemented_by"] = [], i
        },
        Base = _subclass.call(Object, {
            constructor: function() {
                arguments.length > 0 && this.extend(arguments[0])
            },
            base: function() {},
            extend: delegate(extend)
        }, Base = {
            ancestorOf: function(e) {
                return _ancestorOf(this, e)
            },
            extend: _subclass,
            forEach: function(e, t, n) {
                _Function_forEach(this, e, t, n)
            },
            implement: function(e) {
                return typeof e == "function" && (_ancestorOf(Base, e) && (this["#implements"].push(e), e["#implemented_by"].push(this)), e = e.prototype), extend(this.prototype, e), this
            }
        }),
        Package = Base.extend({
            constructor: function(e, t) {
                function s(e) {
                    e = e.split(".");
                    var t = base2,
                        n = 0;
                    while (t && e[n] != null)
                        t = t[e[n++]];
                    return t
                }

                this.extend(t), this.init && this.init(), this.name && this.name != "base2" && (this.parent || (this.parent = base2), this.parent.addName(this.name, this), this.namespace = format("var %1=%2;", this.name, String2.slice(this, 1, -1)));
                if (e) {
                    var n = base2.JavaScript ? base2.JavaScript.namespace : "";
                    e.imports = Array2.reduce(csv(this.imports), function(e, t) {
                        var n = s(t) || s("JavaScript." + t);
                        return assert(n, format("Object not found: '%1'.", t), ReferenceError), e += n.namespace
                    }, "var base2=(function(){return this.base2})();" + base2.namespace + n) + lang.namespace, e.exports = Array2.reduce(csv(this.exports), function(e, t) {
                        var n = this.name + "." + t;
                        return this.namespace += "var " + t + "=" + n + ";", e += "if(!" + n + ")" + n + "=" + t + ";"
                    }, "", this) + "this._label_" + this.name + "();";
                    var r = this,
                        i = String2.slice(this, 1, -1);
                    e["_label_" + this.name] = function() {
                        Package.forEach(r, function(e, t) {
                            e && e.ancestorOf == Base.ancestorOf && (e.toString = K(format("[%1.%2]", i, t)), e.prototype.toString == Base.prototype.toString && (e.prototype.toString = K(format("[object %1.%2]", i, t))))
                        })
                    }
                }
            },
            exports: "",
            imports: "",
            name: "",
            namespace: "",
            parent: null,
            addName: function(e, t) {
                this[e] || (this[e] = t, this.exports += "," + e, this.namespace += format("var %1=%2.%1;", e, this.name))
            },
            addPackage: function(e) {
                this.addName(e, new Package(null, {
                    name: e,
                    parent: this
                }))
            },
            toString: function() {
                return format("[%1]", this.parent ? String2.slice(this.parent, 1, -1) + "." + this.name : this.name)
            }
        }),
        Abstract = Base.extend({
            constructor: function() {
                throw new TypeError("Abstract class cannot be instantiated.")
            }
        }),
        _moduleCount = 0,
        Module = Abstract.extend(null, {
            namespace: "",
            extend: function(e, t) {
                var n = this.base(),
                    r = _moduleCount++;
                return n.namespace = "", n.partial = this.partial, n.toString = K("[base2.Module[" + r + "]]"), Module[r] = n, n.implement(this), e && n.implement(e), t && (extend(n, t), n.init && n.init()), n
            },
            forEach: function(e, t) {
                _Function_forEach(Module, this.prototype, function(n, r) {
                    typeOf(n) == "function" && e.call(t, this[r], r, this)
                }, this)
            },
            implement: function(e) {
                var t = this,
                    n = t.toString().slice(1, -1);
                if (typeof e == "function") {
                    _ancestorOf(e, t) || this.base(e);
                    if (_ancestorOf(Module, e)) {
                        for (var r in e)
                            if (t[r] === undefined) {
                                var i = e[r];
                                typeof i == "function" && i.call && e.prototype[r] && (i = _staticModuleMethod(e, r)), t[r] = i
                            }
                        t.namespace += e.namespace.replace(/base2\.Module\[\d+\]/g, n)
                    }
                } else
                    extend(t, e), _extendModule(t, e);
                return t
            },
            partial: function() {
                var e = Module.extend(),
                    t = e.toString().slice(1, -1);
                return e.namespace = this.namespace.replace(/(\w+)=b[^\)]+\)/g, "$1=" + t + ".$1"), this.forEach(function(t, n) {
                    e[n] = partial(bind(t, e))
                }), e
            }
        }),
        Enumerable = Module.extend({
            every: function(e, t, n) {
                var r = !0;
                try {
                    forEach(e, function(i, s) {
                        r = t.call(n, i, s, e);
                        if (!r)
                            throw StopIteration
                    })
                } catch (i) {
                    if (i != StopIteration)
                        throw i
                }
                return !!r
            },
            filter: function(e, t, n) {
                var r = 0;
                return this.reduce(e, function(s, o, u) {
                    return t.call(n, o, u, e) && (s[r++] = o), s
                }, [])
            },
            invoke: function(e, t) {
                var n = _slice.call(arguments, 2);
                return this.map(e, typeof t == "function" ? function(e) {
                    return e == null ? undefined : t.apply(e, n)
                } : function(e) {
                    return e == null ? undefined : e[t].apply(e, n)
                })
            },
            map: function(e, t, n) {
                var r = [],
                    i = 0;
                return forEach(e, function(s, o) {
                    r[i++] = t.call(n, s, o, e)
                }), r
            },
            pluck: function(e, t) {
                return this.map(e, function(e) {
                    return e == null ? undefined : e[t]
                })
            },
            reduce: function(e, t, n, r) {
                var i = arguments.length > 2;
                return forEach(e, function(s, o) {
                    i ? n = t.call(r, n, s, o, e) : (n = s, i = !0)
                }), n
            },
            some: function(e, t, n) {
                return !this.every(e, not(t), n)
            }
        }),
        _HASH = "#",
        Map = Base.extend({
            constructor: function(e) {
                e && this.merge(e)
            },
            clear: function() {
                for (var e in this)
                    e.indexOf(_HASH) == 0 && delete this[e]
            },
            copy: function() {
                base2.__prototyping = !0;
                var e = new this.constructor;
                delete base2.__prototyping;
                for (var t in this)
                    this[t] !== e[t] && (e[t] = this[t]);
                return e
            },
            forEach: function(e, t) {
                for (var n in this)
                    n.indexOf(_HASH) == 0 && e.call(t, this[n], n.slice(1), this)
            },
            get: function(e) {
                return this[_HASH + e]
            },
            getKeys: function() {
                return this.map(II)
            },
            getValues: function() {
                return this.map(I)
            },
            has: function(e) {
                return _HASH + e in this
            },
            merge: function(e) {
                var t = flip(this.put);
                return forEach(arguments, function(e) {
                    forEach(e, t, this)
                }, this), this
            },
            put: function(e, t) {
                this[_HASH + e] = t
            },
            remove: function(e) {
                delete this[_HASH + e]
            },
            size: function() {
                var e = 0;
                for (var t in this)
                    t.indexOf(_HASH) == 0 && e++;
                return e
            },
            union: function(e) {
                return this.merge.apply(this.copy(), arguments)
            }
        });
    Map.implement(Enumerable), Map.prototype.filter = function(e, t) {
        return this.reduce(function(n, r, i) {
            return e.call(t, r, i, this) || n.remove(i), n
        }, this.copy(), this)
    };
    var _KEYS = "~",
        Collection = Map.extend({
            constructor: function(e) {
                this[_KEYS] = new Array2, this.base(e)
            },
            add: function(e, t) {
                assert(!this.has(e), "Duplicate key '" + e + "'."), this.put.apply(this, arguments)
            },
            clear: function() {
                this.base(), this[_KEYS].length = 0
            },
            copy: function() {
                var e = this.base();
                return e[_KEYS] = this[_KEYS].copy(), e
            },
            forEach: function(e, t) {
                var n = this[_KEYS],
                    r = n.length;
                for (var i = 0; i < r; i++)
                    e.call(t, this[_HASH + n[i]], n[i], this)
            },
            getAt: function(e) {
                var t = this[_KEYS].item(e);
                return t === undefined ? undefined : this[_HASH + t]
            },
            getKeys: function() {
                return this[_KEYS].copy()
            },
            indexOf: function(e) {
                return this[_KEYS].indexOf(String(e))
            },
            insertAt: function(e, t, n) {
                assert(this[_KEYS].item(e) !== undefined, "Index out of bounds."), assert(!this.has(t), "Duplicate key '" + t + "'."), this[_KEYS].insertAt(e, String(t)), this[_HASH + t] = null, this.put.apply(this, _slice.call(arguments, 1))
            },
            item: function(e) {
                return this[typeof e == "number" ? "getAt" : "get"](e)
            },
            put: function(e, t) {
                this.has(e) || this[_KEYS].push(String(e));
                var n = this.constructor;
                n.Item && !instanceOf(t, n.Item) && (t = n.create.apply(n, arguments)), this[_HASH + e] = t
            },
            putAt: function(e, t) {
                arguments[0] = this[_KEYS].item(e), assert(arguments[0] !== undefined, "Index out of bounds."), this.put.apply(this, arguments)
            },
            remove: function(e) {
                this.has(e) && (this[_KEYS].remove(String(e)), delete this[_HASH + e])
            },
            removeAt: function(e) {
                var t = this[_KEYS].item(e);
                t !== undefined && (this[_KEYS].removeAt(e), delete this[_HASH + t])
            },
            reverse: function() {
                return this[_KEYS].reverse(), this
            },
            size: function() {
                return this[_KEYS].length
            },
            slice: function(e, t) {
                var n = this.copy();
                if (arguments.length > 0) {
                    var r = this[_KEYS],
                        i = r;
                    n[_KEYS] = Array2(_slice.apply(r, arguments)), n[_KEYS].length && (i = i.slice(0, e), arguments.length > 1 && (i = i.concat(r.slice(t))));
                    for (var s = 0; s < i.length; s++)
                        delete n[_HASH + i[s]]
                }
                return n
            },
            sort: function(e) {
                return e ? this[_KEYS].sort(bind(function(t, n) {
                    return e(this[_HASH + t], this[_HASH + n], t, n)
                }, this)) : this[_KEYS].sort(), this
            },
            toString: function() {
                return "(" + (this[_KEYS] || "") + ")"
            }
        }, {
            Item: null,
            create: function(e, t) {
                return this.Item ? new this.Item(e, t) : t
            },
            extend: function(e, t) {
                var n = this.base(e);
                return n.create = this.create, t && extend(n, t), n.Item ? typeof n.Item != "function" && (n.Item = (this.Item || Base).extend(n.Item)) : n.Item = this.Item, n.init && n.init(), n
            }
        }),
        _RG_BACK_REF = /\\(\d+)/g,
        _RG_ESCAPE_CHARS = /\\./g,
        _RG_ESCAPE_BRACKETS = /\(\?[:=!]|\[[^\]]+\]/g,
        _RG_BRACKETS = /\(/g,
        _RG_LOOKUP = /\$(\d+)/,
        _RG_LOOKUP_SIMPLE = /^\$\d+$/,
        RegGrp = Collection.extend({
            constructor: function(e, t) {
                this.base(e), this.ignoreCase = !!t
            },
            ignoreCase: !1,
            exec: function(e, t) {
                e += "";
                var n = this,
                    r = this[_KEYS];
                return r.length ? (t == RegGrp.IGNORE && (t = 0), e.replace(new RegExp(this, this.ignoreCase ? "gi" : "g"), function(e) {
                    var i, s = 1,
                        o = 0;
                    while (i = n[_HASH + r[o++]]) {
                        var u = s + i.length + 1;
                        if (arguments[s]) {
                            var a = t == null ? i.replacement : t;
                            switch (typeof a) {
                                case "function":
                                    return a.apply(n, _slice.call(arguments, s, u));
                                case "number":
                                    return arguments[s + a];
                                default:
                                    return a
                            }
                        }
                        s = u
                    }
                    return e
                })) : e
            },
            insertAt: function(e, t, n) {
                return instanceOf(t, RegExp) && (arguments[1] = t.source), base(this, arguments)
            },
            test: function(e) {
                return this.exec(e) != e
            },
            toString: function() {
                var e = 1;
                return "(" + this.map(function(t) {
                        var n = (t + "").replace(_RG_BACK_REF, function(t, n) {
                            return "\\" + (e + Number(n))
                        });
                        return e += t.length + 1, n
                    }).join(")|(") + ")"
            }
        }, {
            IGNORE: "$0",
            init: function() {
                forEach("add,get,has,put,remove".split(","), function(e) {
                    _override(this, e, function(e) {
                        return instanceOf(e, RegExp) && (arguments[0] = e.source), base(this, arguments)
                    })
                }, this.prototype)
            },
            Item: {
                constructor: function(e, t) {
                    t == null ? t = RegGrp.IGNORE : t.replacement != null ? t = t.replacement : typeof t != "function" && (t = String(t));
                    if (typeof t == "string" && _RG_LOOKUP.test(t))
                        if (_RG_LOOKUP_SIMPLE.test(t))
                            t = parseInt(t.slice(1));
                        else {
                            var n = '"';
                            t = t.replace(/\\/g, "\\\\").replace(/"/g, "\\x22").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\$(\d+)/g, n + "+(arguments[$1]||" + n + n + ")+" + n).replace(/(['"])\1\+(.*)\+\1\1$/, "$1"), t = new Function("return " + n + t + n)
                        }
                    this.length = RegGrp.count(e), this.replacement = t, this.toString = K(e + "")
                },
                length: 0,
                replacement: ""
            },
            count: function(e) {
                return e = (e + "").replace(_RG_ESCAPE_CHARS, "").replace(_RG_ESCAPE_BRACKETS, ""), match(e, _RG_BRACKETS).length
            }
        }),
        lang = {
            name: "lang",
            version: base2.version,
            exports: "assert,assertArity,assertType,base,bind,copy,extend,forEach,format,instanceOf,match,pcopy,rescape,trim,typeOf",
            namespace: ""
        };
    typeof StopIteration == "undefined" && (StopIteration = new Error("StopIteration")), forEach.csv = function(e, t, n) {
        forEach(csv(e), t, n)
    }, forEach.detect = function(e, t, n) {
        forEach(e, function(r, i) {
            i.charAt(0) == "@" ? detect(i.slice(1)) && forEach(r, arguments.callee) : t.call(n, r, i, e)
        })
    };
    var JavaScript = {
        name: "JavaScript",
        version: base2.version,
        exports: "Array2,Date2,Function2,String2",
        namespace: "",
        bind: function(e) {
            var t = global;
            return global = e, forEach.csv(this.exports, function(t) {
                var n = t.slice(0, -1);
                extend(e[n], this[t]), this[t](e[n].prototype)
            }, this), global = t, e
        }
    };
    (new Date).getYear() > 1900 && (Date.prototype.getYear = function() {
        return this.getFullYear() - 1900
    }, Date.prototype.setYear = function(e) {
        return this.setFullYear(e + 1900)
    });
    var _testDate = new Date(Date.UTC(2006, 1, 20));
    _testDate.setUTCDate(15), _testDate.getUTCHours() != 0 && forEach.csv("FullYear,Month,Date,Hours,Minutes,Seconds,Milliseconds", function(e) {
        extend(Date.prototype, "setUTC" + e, function() {
            var e = base(this, arguments);
            return e >= 57722401e3 && (e -= 36e5, this.setTime(e)), e
        })
    }), Function.prototype.prototype = {}, "".replace(/^/, K("$$")) == "$" && extend(String.prototype, "replace", function(e, t) {
        if (typeof t == "function") {
            var n = t;
            t = function() {
                return String(n.apply(null, arguments)).split("$").join("$$")
            }
        }
        return this.base(e, t)
    });
    var Array2 = _createObject2(Array, Array, "concat,join,pop,push,reverse,shift,slice,sort,splice,unshift", Enumerable, {
        combine: function(e, t) {
            return t || (t = e), Array2.reduce(e, function(e, n, r) {
                return e[n] = t[r], e
            }, {})
        },
        contains: function(e, t) {
            return Array2.indexOf(e, t) != -1
        },
        copy: function(e) {
            var t = _slice.call(e);
            return t.swap || Array2(t), t
        },
        flatten: function(e) {
            var t = 0;
            return Array2.reduce(e, function(e, n) {
                return Array2.like(n) ? Array2.reduce(n, arguments.callee, e) : e[t++] = n, e
            }, [])
        },
        forEach: _Array_forEach,
        indexOf: function(e, t, n) {
            var r = e.length;
            n == null ? n = 0 : n < 0 && (n = Math.max(0, r + n));
            for (var i = n; i < r; i++)
                if (e[i] === t)
                    return i;
            return -1
        },
        insertAt: function(e, t, n) {
            return Array2.splice(e, t, 0, n), n
        },
        item: function(e, t) {
            return t < 0 && (t += e.length), e[t]
        },
        lastIndexOf: function(e, t, n) {
            var r = e.length;
            n == null ? n = r - 1 : n < 0 && (n = Math.max(0, r + n));
            for (var i = n; i >= 0; i--)
                if (e[i] === t)
                    return i;
            return -1
        },
        map: function(e, t, n) {
            var r = [];
            return Array2.forEach(e, function(i, s) {
                r[s] = t.call(n, i, s, e)
            }), r
        },
        remove: function(e, t) {
            var n = Array2.indexOf(e, t);
            n != -1 && Array2.removeAt(e, n)
        },
        removeAt: function(e, t) {
            Array2.splice(e, t, 1)
        },
        swap: function(e, t, n) {
            t < 0 && (t += e.length), n < 0 && (n += e.length);
            var r = e[t];
            return e[t] = e[n], e[n] = r, e
        }
    });
    Array2.reduce = Enumerable.reduce, Array2.like = function(e) {
        return typeOf(e) == "object" && typeof e.length == "number"
    }, Enumerable["#implemented_by"].pop(), Enumerable["#implemented_by"].push(Array2);
    var _DATE_PATTERN = /^((-\d+|\d{4,})(-(\d{2})(-(\d{2}))?)?)?T((\d{2})(:(\d{2})(:(\d{2})(\.(\d{1,3})(\d)?\d*)?)?)?)?(([+-])(\d{2})(:(\d{2}))?|Z)?$/,
        _DATE_PARTS = {
            FullYear: 2,
            Month: 4,
            Date: 6,
            Hours: 8,
            Minutes: 10,
            Seconds: 12,
            Milliseconds: 14
        },
        _TIMEZONE_PARTS = {
            Hectomicroseconds: 15,
            UTC: 16,
            Sign: 17,
            Hours: 18,
            Minutes: 20
        },
        _TRIM_ZEROES = /(((00)?:0+)?:0+)?\.0+$/,
        _TRIM_TIMEZONE = /(T[0-9:.]+)$/,
        Date2 = _createObject2(Date, function(e, t, n, r, i, s, o) {
            switch (arguments.length) {
                case 0:
                    return new Date;
                case 1:
                    return typeof e == "number" ? new Date(e) : Date2.parse(e);
                default:
                    return new Date(e, t, arguments.length == 2 ? 1 : n, r || 0, i || 0, s || 0, o || 0)
            }
        }, "", {
            toISOString: function(e) {
                var t = "####-##-##T##:##:##.###";
                for (var n in _DATE_PARTS)
                    t = t.replace(/#+/, function(t) {
                        var r = e["getUTC" + n]();
                        return n == "Month" && r++, ("000" + r).slice(-t.length)
                    });
                return t.replace(_TRIM_ZEROES, "").replace(_TRIM_TIMEZONE, "$1Z")
            }
        });
    delete Date2.forEach, Date2.now = function() {
        return (new Date).valueOf()
    }, Date2.parse = function(e, t) {
        arguments.length > 1 && assertType(t, "number", "default date should be of type 'number'.");
        var n = match(e, _DATE_PATTERN);
        if (n.length) {
            n[_DATE_PARTS.Month] && n[_DATE_PARTS.Month] --, n[_TIMEZONE_PARTS.Hectomicroseconds] >= 5 && n[_DATE_PARTS.Milliseconds] ++;
            var r = new Date(t || 0),
                i = n[_TIMEZONE_PARTS.UTC] || n[_TIMEZONE_PARTS.Hours] ? "UTC" : "";
            for (var s in _DATE_PARTS) {
                var o = n[_DATE_PARTS[s]];
                if (!o)
                    continue;
                r["set" + i + s](o);
                if (r["get" + i + s]() != n[_DATE_PARTS[s]])
                    return NaN
            }
            if (n[_TIMEZONE_PARTS.Hours]) {
                var u = Number(n[_TIMEZONE_PARTS.Sign] + n[_TIMEZONE_PARTS.Hours]),
                    a = Number(n[_TIMEZONE_PARTS.Sign] + (n[_TIMEZONE_PARTS.Minutes] || 0));
                r.setUTCMinutes(r.getUTCMinutes() + u * 60 + a)
            }
            return r.valueOf()
        }
        return Date.parse(e)
    };
    var String2 = _createObject2(String, function(e) {
        return new String(arguments.length == 0 ? "" : e)
    }, "charAt,charCodeAt,concat,indexOf,lastIndexOf,match,replace,search,slice,split,substr,substring,toLowerCase,toUpperCase", {
        csv: csv,
        format: format,
        rescape: rescape,
        trim: trim
    });
    delete String2.forEach;
    var Function2 = _createObject2(Function, Function, "", {
        I: I,
        II: II,
        K: K,
        bind: bind,
        compose: compose,
        delegate: delegate,
        flip: flip,
        not: not,
        partial: partial,
        unbind: unbind
    });
    base2 = global.base2 = new Package(this, base2);
    var exports = this.exports;
    lang = new Package(this, lang), exports += this.exports, JavaScript = new Package(this, JavaScript), eval(exports + this.exports), lang.base = base, lang.extend = extend
}, define("canvas/base2", function() {});
var nextgame = {};
nextgame.degreesToRadians = function(e) {
    return Math.PI / 180 * e
}, nextgame.radiansToDegrees = function(e) {
    return e * (180 / Math.PI)
}, nextgame.getContextById = function(e) {
    return nextgame.getCanvasContext($("#" + e)[0])
}, nextgame.getCanvasContext = function(e) {
    return e.getContext == undefined ? G_vmlCanvasManager.initElement(e).getContext("2d") : e.getContext("2d")
}, nextgame.lineWidthPixelsUsed = function(e) {
    return Math.round(e / 2) * 2
}, nextgame.canvasSupported = function() {
    return document.createElement("canvas").getContext !== undefined
}, nextgame.hsl = function(e, t, n, r) {
    this.h = e, this.s = t, this.l = n, this.opacity = r
}, nextgame.hsl.hueForHeatmap = function(e) {
    return this.h = Math.round((1 - e) * 240)
}, nextgame.hsl.prototype.toStringForHeatmap = function(e) {
    return this.h = nextgame.hsl.hueForHeatmap(e), this.toString()
}, nextgame.hsl.prototype.toString = function() {
    function e() {
        return that.h + ", " + that.s + "%, " + that.l + "%"
    }

    return that = this, isNaN(that.opacity) ? "hsl(" + e() + ")" : "hsla(" + e() + ", " + that.opacity + ")"
}, nextgame.hsl.prototype.changeHue = function(e) {
    return new nextgame.hsl(this.h + e, this.s, this.l, this.opacity)
}, nextgame.hsl.prototype.changeSaturation = function(e) {
    return new nextgame.hsl(this.h, this.s + e, this.l, this.opacity)
}, nextgame.hsl.prototype.changeLightness = function(e) {
    return new nextgame.hsl(this.h, this.s, this.l + e, this.opacity)
}, nextgame.hsl.prototype.changeOpacity = function(e) {
    return new nextgame.hsl(this.h, this.s, this.l, this.opacity + e)
}, nextgame.rgba = function(e, t, n, r) {
    function c() {
        return o + ", " + u + ", " + a
    }

    var i, s, o, u, a, f, l = function() {
        this.init(e, t, n, r)
    };
    l.prototype = {
        init: function(e, t, n, r) {
            return o = e || 0, u = t || 0, a = n || 0, f = r || 1, this
        },
        setAlpha: function(e) {
            return f = e, this
        },
        toRgbaString: function() {
            return "rgba(" + c() + ", " + f + ")"
        },
        toRgbString: function() {
            return "rgb(" + c() + ")"
        }
    };
    var s = new l;
    return s
}, define("canvas/nextgame", ["canvas/base2"], function() {}), nextgame.statistics = {}, nextgame.statistics.base = base2.Base.extend({
    constructor: function(e) {
        this.init(e)
    },
    init: function(e) {
        var t = e.context,
            n = parseFloat(t.canvas.width),
            r = parseFloat(t.canvas.height),
            i = e.extraOptions;
        this.getContext = function() {
            return t
        }, this.getExtraOptions = function() {
            return i
        }, this.getCanvasHeight = function(e) {
            return isNaN(e) ? r : r * e / 100
        }, this.getCanvasWidth = function(e) {
            return isNaN(e) ? n : n * e / 100
        }, this.pitch = e.pitch, this.type = e.type || "percentage", this.showValues = "value" == this.type, this.shapes = new nextgame.shapes({
            context: t
        }), this.homeFillStyle = nextgame.rgba(0, 139, 224, 1), this.homeStrokeStyle = nextgame.rgba(0, 139, 224, 1), this.fillStyleConceded = nextgame.rgba(170, 170, 170, 1), this.awayFillStyle = nextgame.rgba(235, 91, 21), this.awayStrokeStyle = nextgame.rgba(235, 91, 21)
    },
    drawText: function(e, t, n) {
        t == undefined && (t = {
            x: 0,
            y: 0
        }), n == undefined && (n = "25px"), isNaN(n) || (n += "px");
        var r = this.getContext();
        r.font = "bold " + n + " 'arial'", r.lineWidth = 1, r.save(), r.fillStyle = "rgb(255, 255, 255)", r.fillText(e.toString() + (this.showValues ? "" : "%"), t.x, t.y), r.restore()
    },
    relativePointToAbsolute: function(e, t) {
        var n = this.getCanvasWidth(e),
            r = this.getCanvasHeight(100 - t);
        return {
            x: n,
            y: r
        }
    },
    fontSizeRelativeToCanvasHeight: function(e) {
        return e || (e = 8), Math.round(this.getCanvasHeight() / e)
    },
    setForOrAgainstFillAndStrokeStyle: function(e, t) {
        t === undefined && (t = 1);
        if (e) {
            this.getContext().fillStyle = this.awayFillStyle.setAlpha(t).toRgbaString(), this.getContext().strokeStyle = this.awayStrokeStyle.setAlpha(t).toRgbaString();
            return
        }
        var n = t + .1;
        this.getContext().fillStyle = this.homeFillStyle.setAlpha(n).toRgbaString(), this.getContext().strokeStyle = this.homeStrokeStyle.setAlpha(n).toRgbaString()
    },
    clearCanvas: function() {
        this.getContext().clearRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight())
    }
}), nextgame.statistics.playerPositionAverage = nextgame.statistics.base.extend({
    draw: function(e) {
        function c(e) {
            var t = [];
            for (var n = 0; n < e.length; n++) {
                var r = {};
                r.Id = e[n][0], r.X = e[n][1], r.Y = e[n][2], r.Name = e[n][3][0], r.ShirtNo = e[n][3][1], r.Position = e[n][3][2], r.Rating = e[n][3][3], t.unshift(r)
            }
            return t
        }

        function v(e, t) {
            e.data("ShirtNo", t.ShirtNo), e.find("#playerName").text(t.Name), e.find("#shirtNumber").text(t.ShirtNo), e.find("#position").text(t.Position), e.find("#rating").text(t.Rating)
        }

        this.clearCanvas();
        var t = c(e.value),
            n = e.field === "away",
            r = this.getContext(),
            i = this.pitch.getLengthRatio() * 3.5,
            s, o = t.length,
            u, a, f, l = [];
        this.setForOrAgainstFillAndStrokeStyle(n), r.clearRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight()), r.save(), r.lineWidth = 1, r.textBaseline = "middle", r.textAlign = "center", r.font = "12px 'arial'", s = r.lineWidth + i;
        for (u = 0; u < o; u++)
            a = t[u], f = this.relativePointToAbsolute(n ? 100 - a.X : a.X, n ? 100 - a.Y : a.Y), r.beginPath(), r.moveTo(f.x + i, f.y), r.arc(f.x, f.y, i, 0, Math.PI * 2, !1), r.closePath(), l.push({
                details: a,
                start: {
                    x: f.x - s,
                    y: f.y - s
                },
                end: {
                    x: f.x + s,
                    y: f.y + s
                }
            }), r.fill(), r.stroke(), r.save(), r.fillStyle = "#333", r.fillText(a.ShirtNo, f.x, f.y), r.restore();
        r.restore();
        var h = $(r.canvas),
            p = $("#averagePlayerPositionDetails"),
            d = null;
        h.mousemove(function(e) {
            var t = e.pageX - $(this).offset().left,
                n = e.pageY - $(this).offset().top,
                r = $(this);
            for (u = 0; u < o; u++) {
                var i = l[u];
                if (i.start.x <= t && t <= i.end.x && i.start.y <= n && n <= i.end.y) {
                    if (d === null) {
                        d = p.clone(), d.attr("id", ""), d.css({
                            position: "absolute",
                            top: i.end.y,
                            left: i.end.x
                        }), v(d, i.details), d.show(), r.after(d);
                        return
                    }
                    if (d.data("ShirtNo") !== i.details.ShirtNo) {
                        v(d, i.details);
                        return
                    }
                    return
                }
            }
            d !== null && (d.remove(), d = null)
        })
    }
}), nextgame.statistics.eventColors = {
    1: "#67962E",
    13: "#2980b9",
    14: "#2980b9",
    15: "#2980b9",
    16: "#2980b9",
    3: "#d35400",
    8: "#f1c40f"
}, nextgame.statistics.heatmaps = nextgame.statistics.base.extend({
    draw: function(e) {
        this.clearCanvas(), e && e.heatmap && e.heatmapData && (console.log(e), e.heatmap.store.setDataSet(e.heatmapData))
    }
}), nextgame.statistics.events = nextgame.statistics.base.extend({
    eventColors: {
        1: "#67962E",
        13: "#2980b9",
        14: "#2980b9",
        15: "#2980b9",
        16: "#2980b9",
        3: "#d35400",
        8: "#f1c40f"
    },
    defaultEventColor: "#000",
    setEventStrokeStyle: function(e, t, n) {
        var r = this.getEventColor(t);
        e.strokeStyle = n ? "#226889" : "#932E24", e.fillStyle = t.isSelected ? n ? "#3399CC" : "#C0392B" : "#333", e.globalAlpha = 1, e.globalCompositeOperation = t.isSelected ? "source-over" : "destination-over"
    },
    getEventColor: function(e) {
        if (!e.type)
            return this.defaultEventColor;
        var t = nextgame.statistics.eventColors[e.type.value];
        return t ? t : this.defaultEventColor
    },
    getDestinationCoordinatesForEvent: function(e, t) {
        if (-1 != [13, 14, 15, 16].indexOf(e.type.value) || t) {
            var n, r;
            e.blockedX && e.blockedY && (n = 100 - e.blockedX, r = 100 - e.blockedY), e.endX && e.endY && (n = e.endX, r = e.endY), e.goalMouthY && (n = 0, r = e.goalMouthY);
            if (undefined != r && undefined != n) {
                e.isOwnGoal && (n = 100 - n);
                var i = this.relativePointToAbsolute(1 == e.field ? 100 - n : n, 1 == e.field ? 100 - r : r);
                return i
            }
        }
    },
    drawEventDestinationLine: function(e, t) {
        var n = t.details ? t.details : t,
            r = t.details;
        if (!n.isSelected)
            return;
        r && (e.beginPath(), e.moveTo(t.start.x + this.selectedRadius, t.start.y + this.selectedRadius), e.lineWidth = 2, this.setEventStrokeStyle(e, n, 1 == n.field));
        var i = this.getDestinationCoordinatesForEvent(n, r);
        i && (e.lineTo(i.x, i.y), e.arc(i.x, i.y, this.selectedRadius / 2, 0, Math.PI * 2, !1)), r && (e.fill(), e.stroke(), e.save(), e.restore(), e.closePath())
    },
    draw: function(e) {
        function w(e, t) {
            for (var n in t)
                if ("qualifiers" == n) {
                    var r = [];
                    for (var i = 0; i < t.qualifiers.length; i++)
                        t.qualifiers[i].qualifier.type && r.push('<li class="qualifier">' + t.qualifiers[i].qualifier.type.value + " = " + t.qualifiers[i].value + "</li>");
                    e.find(".qualifiers ul").html(r.join(""))
                } else
                    e.find("." + n + " span").text(t[n]);
            e.find(".player-picture img").attr("src", "http://164.177.157.12/img/players/" + t.playerId + ".jpg")
        }

        this.clearCanvas();
        var t = e.value;
        if (!t)
            return;
        var n = this.getContext(),
            r = new nextgame.shapes({
                context: n
            }),
            i = this.pitch.getLengthRatio() * 1,
            s = this.pitch.getLengthRatio() * 1,
            o, u = t.length,
            a = this.getExtraOptions(),
            f, l, c = [],
            h = this,
            p = this.getCanvasWidth(),
            d = this.getCanvasHeight();
        this.selectedRadius = s, this.detailsAreaIsSet || (a && (this.$homeDetails = a.$homeDetails, this.$awayDetails = a.$awayDetails, this.onEventSelect = a.onEventSelect), this.detailsAreaIsSet = !0), n.clearRect(0, 0, p, d), n.save(), n.lineWidth = 2, n.textBaseline = "middle", n.textAlign = "center", n.font = "12px 'arial'", n.strokeStyle = "#222";
        var v = {
            home: !1,
            away: !1
        };
        for (f = 0; f < u; f++) {
            var m = t[f];
            if (!m.isSelected)
                continue;
            var g = m.isSelected ? s : i;
            o = n.lineWidth + g;
            var y = m.field == nextgame.statistics.fieldType.away;
            this.setEventStrokeStyle(n, m, !y), l = this.relativePointToAbsolute(y ? 100 - m.x : m.x, y ? 100 - m.y : m.y), n.beginPath(), n.moveTo(l.x + g, l.y), n.arc(l.x, l.y, g, 0, Math.PI * 2, !1), this.drawEventDestinationLine(n, m), n.closePath(), c.push({
                details: m,
                start: {
                    x: l.x - o,
                    y: l.y - o
                },
                end: {
                    x: l.x + o,
                    y: l.y + o
                }
            }), n.fill(), n.stroke(), n.save(), n.restore(), m.isSelected && !v && (w(y ? h.$awayDetails : h.$homeDetails, m), v = !0)
        }
        n.restore();
        var b = $(n.canvas);
        this.$canvas = b, b.unbind("click").bind("click", function(e) {
            var t = e.pageX - $(this).offset().left,
                r = e.pageY - $(this).offset().top,
                i = $(this);
            for (f = 0; f < u; f++) {
                var s = c[f];
                if (!s)
                    continue;
                if (s.start.x <= t && t <= s.end.x && s.start.y <= r && r <= s.end.y) {
                    h.onEventSelect && (h.onEventSelect(s.details), 1 == s.details.type.value && h.drawEventDestinationLine(n, s));
                    return
                }
                h.onEventSelect && h.onEventSelect()
            }
        })
    }
}), nextgame.statistics.fieldType = {
    home: 1,
    away: 2
}, nextgame.statistics.matchEventType = {
    Pass: 1,
    TakeOn: 3,
    Freekick: 4,
    CornerAwarded: 6,
    Tackle: 7,
    Interception: 8,
    Save: 10,
    Clearance: 12,
    AttemptSaved: 15,
    Goal: 16,
    Aerial: 44,
    Challenge: 45,
    BallRecovery: 49,
    Dispossesed: 50,
    Error: 51,
    BadBallTouch: 61
}, nextgame.statistics.matchGoalsTimeLineBar = function(e) {
    function u() {
        var e = '<span class="match-events-goals-path-index" data-index="{0}" style="width: {2}%;">{1}</span>',
            n = "",
            r = 100 / t.length;
        for (var i = 0; i < t.length; i++)
            n += e.format(i + 1, i + 1, r);
        $("#match-events-goals-path").html(n)
    }

    function a() {
        var e = o == s ? n : r,
            t = '<span class="ui-icon {0}"></span>'.format(e);
        $("#match-events-goals-path-control").html(t)
    }

    function f() {
        $(".match-events-goals-path-index").bind("click", function() {
            var e = $(this).attr("data-index");
            $(document).triggerHandler("match-events-goals-path-item-selected", [e])
        }), $("#match-events-goals-path-control").bind("click", function() {
            o == i ? o = s : o = i, a(), $(document).triggerHandler("match-events-goals-path-control-updated", [o])
        })
    }

    var t = e,
        n = "ui-icon-pause",
        r = "ui-icon-play",
        i = 0,
        s = 1,
        o = s;
    u(), a(), f()
}, nextgame.statistics.matchGoalsTimeLineView = function(e) {
    var t = [];
    if (e)
        for (var n = 0; n < e.length; n++) {
            var r = e[n];
            t.push('<div class="match-events-goals-timeline-goal" data-goal-index="{0}">'.format(n)), t.push("{0} {1}' {2}".format(WS.TeamEmblemUrl(r.TeamId), r.Minute, r.PlayerName)), t.push("</div>")
        }
    return t.join("")
}, nextgame.statistics.matchGoals = nextgame.statistics.base.extend({
    draw: function(e) {
        function f(e, t) {
            if (!e)
                return !1;
            for (var n = 0; n < e.length; n++)
                if (e[n].Id == t)
                    return !0;
            return !1
        }

        function l() {
            for (var e = 0; e < s.length; e++)
                clearInterval(s[e]);
            s = []
        }

        function c(e, t) {
            function b(t, f) {
                if (t.length <= f)
                    return;
                var l = t[f],
                    p = !i && e.TeamId != l.TeamId || i && e.TeamId == l.TeamId;
                n.setForOrAgainstFillAndStrokeStyle(l.Field), a = n.relativePointToAbsolute(1 == l.Field ? 100 - l.X : l.X, 1 == l.Field ? 100 - l.Y : l.Y), r.beginPath(), r.moveTo(a.x + s, a.y), r.arc(a.x, a.y, s, 0, Math.PI * 2, !1), r.closePath(), c.push({
                    details: l,
                    start: {
                        x: a.x - o,
                        y: a.y - o
                    },
                    end: {
                        x: a.x + o,
                        y: a.y + o
                    }
                }), r.fill(), r.stroke(), r.save(), r.fillStyle = "#333", r.fillText(u + 1, a.x, a.y);
                if (nextgame.statistics.matchEventType.Goal != l.Type) {
                    var v = e.GoalPathItems[f + 1],
                        m = n.relativePointToAbsolute(1 == v.Field ? 100 - v.X : v.X, 1 == v.Field ? 100 - v.Y : v.Y);
                    g.drawArrowLine(a.x, a.y, m.x, m.y)
                } else {
                    var y = 1 == e.Field && !i || 0 == e.Field && i ? 0 : n.getCanvasWidth();
                    g.drawArrowLine(a.x, a.y, y, n.getCanvasHeight() / 2)
                }
                r.restore(), h(d, l)
            }

            var r = n.getContext(),
                i = !1,
                s = n.pitch.getLengthRatio(),
                o, u, a, c = [];
            l();
            var p = $(r.canvas),
                d = $("#goal-path-item-details"),
                v = null,
                m = e.GoalPathItems[e.GoalPathItems.length - 1];
            i = f(m.Qualifiers, 28);
            var g = new nextgame.shapes({
                context: r
            });
            r.clearRect(0, 0, n.getCanvasWidth(), n.getCanvasHeight()), r.save(), r.lineWidth = 2, r.textBaseline = "middle", r.textAlign = "center", r.font = "12px 'arial'", nextgame.statistics.matchGoalsTimeLineBar(e.GoalPathItems), t = t ? t : 0;
            for (var y = 0; y < e.GoalPathItems.length; y++)
                o = y == t ? 2 * r.lineWidth + s : r.lineWidth + s, b(e.GoalPathItems, y);
            r.restore(), p.mousemove(function(e) {
                var t = e.pageX - $(this).offset().left,
                    n = e.pageY - $(this).offset().top,
                    r = $(this);
                for (u = 0; u < c.length; u++) {
                    var i = c[u];
                    if (i.start.x <= t && t <= i.end.x && i.start.y <= n && n <= i.end.y) {
                        if (d === null) {
                            h(d, i.details);
                            return
                        }
                        if (d.data("PlayerId") !== i.details.PlayerId) {
                            h(d, i.details);
                            return
                        }
                        return
                    }
                }
            })
        }

        function h(e, t) {
            e.find("#playerId").text(t.PlayerId), e.find("#playerName").text(t.PlayerName), e.find("#teamId").text(t.TeamId), e.find("#type").text("{0}({1})".format(NG.getDisplayNameByValue(nextgame.statistics.matchEventType, t.Type), t.Type)), e.find("#minute").text(t.Minute), e.find("#eventOrder").text(t.EventOrder), e.find("#player-avatar").html(WS.PlayerPictureUrl(t.PlayerId, t.PlayerName, "height: 80px; width: 60px; margin: 0 auto;"))
        }

        function p(e) {
            var t = [];
            if (e)
                for (var n = 0; n < e.length; n++) {
                    var r = e[n],
                        i = {
                            TeamId: r[0],
                            PlayerId: r[1],
                            PlayerName: r[2],
                            Field: r[3],
                            Minute: r[4],
                            GoalPathItems: []
                        },
                        s = r[5];
                    for (var o = 0; o < s.length; o++) {
                        var u = s[o],
                            a = {
                                TeamId: u[0],
                                Field: u[1],
                                PlayerId: u[2],
                                PlayerName: u[3],
                                Type: u[4],
                                X: u[5],
                                Y: u[6],
                                Minute: u[7],
                                EventOrder: o,
                                Qualifiers: []
                            },
                            f = u[8];
                        if (f)
                            for (var l = 0; l < f.length; l++) {
                                var c = f[l];
                                a.Qualifiers.push({
                                    Id: c[0],
                                    Value: 1 < c.length ? c[1] : null
                                })
                            }
                        i.GoalPathItems.push(a)
                    }
                    t.push(i)
                }
            return t
        }

        var t = p(e.value),
            n = this,
            r = 0,
            i = 1,
            s = [],
            o = 0,
            u = 0;
        if (0 == t.length)
            return;
        var a = nextgame.statistics.matchGoalsTimeLineView(t);
        $("#match-events-goals-timeline").html(a), $("#match-events-goals-timeline .match-events-goals-timeline-goal:first-child").addClass("selected"), $(".match-events-goals-timeline-goal").bind("click", function() {
            var e = $(this).attr("data-goal-index");
            $(".match-events-goals-timeline-goal").removeClass("selected"), $(this).addClass("selected"), c(t[e]), o = e
        }), $(document).bind("match-events-goals-path-control-updated", function(e, n) {
            r == n ? l() : c(t[o])
        }), $(document).bind("match-events-goals-path-item-selected", function(e, n) {
            c(t[o], n)
        }), c(t[o])
    }
}), nextgame.statistics.heatmap = nextgame.statistics.base.extend({
    draw: function(e) {
        var t = this.getContext();
        t.save(), t.clearRect(t.canvas.width, t.canvas.height), t.fillStyle = "hsla(220, 100%, 50%, 0)";
        var n = new HeatMap($(t.canvas).attr("id"), 6);
        for (var r = 0; r < e.touches.length; r++) {
            var i = e.touches[r],
                s = i[0] * e.scale,
                o = i[1] * e.scale,
                u = this.relativePointToAbsolute(s, o);
            n.push(u.x, u.y, i[2] * e.scale / 2 + 1)
        }
        n.spread(1), n.render(function(e) {
            var t = (1 - e) * 220;
            return "hsla(" + t + ", 100%, 60%, 0.7)"
        }), t.restore()
    }
}), nextgame.statistics.touchZones = nextgame.statistics.base.extend({
    model: function(e) {
        return TouchZonesGridModel(e)
    },
    draw: function(e) {
        function l(e, s, a) {
            var f = s / 100,
                l = a / 100,
                c = r - r * (s + a) / 100,
                h = r - r * a / 100;
            t.setForOrAgainstFillAndStrokeStyle(), n.fillRect(e, c, o + i / 100, r * f), n.strokeRect(e, c, o + i / 100, r * f), t.setForOrAgainstFillAndStrokeStyle(!0), n.fillRect(e, h, o + i / 100, r * l), n.strokeRect(e, h, o + i / 100, r * l);
            var p = 1 * t.pitch.getLengthRatio(),
                d = c - u / 2 - p;
            d < u && (d = u / 2 + p), n.textAlign = "center", t.drawText(s + a, {
                x: e + o / 2,
                y: d
            }, u)
        }

        e = this.prepareData(e);
        var t = this,
            n = this.getContext(),
            r = this.getCanvasHeight(),
            i = this.getCanvasWidth(),
            s = this.pitch.yards(5),
            o = i / 3 - s * 2,
            u = this.fontSizeRelativeToCanvasHeight(9);
        n.save(), t.clearCanvas(), n.textAlign = "center", n.textBaseline = "top";
        var a = this.relativePointToAbsolute(33, 0),
            f = this.relativePointToAbsolute(67, 0);
        l(s, e.forStats.defense, e.againstStats.attack), l(a.x + s, e.forStats.midfield, e.againstStats.midfield), l(f.x + s, e.forStats.attack, e.againstStats.defense);
        var c = new CvsGraphCtx(n.canvas);
        c.setPenColor("#333"), c.move(33, 0), c.line(33, 100, "dotted"), c.move(67, 0), c.line(67, 100, "dotted");
        var h = this.getCanvasHeight() / 2,
            p = this.getCanvasWidth() / 6;
        n.beginPath(), n.closePath(), n.restore()
    }
}), nextgame.statistics.touchZones2 = nextgame.statistics.touchZones.extend({
    draw: function(e, t) {
        function c(e, t, i) {
            var o = n.relativePointToAbsolute(t, 100),
                u = n.relativePointToAbsolute(i, 0),
                a = e / 100;
            r.fillStyle = s === !1 ? n.homeFillStyle.setAlpha(a).toRgbaString() : n.awayFillStyle.setAlpha(a).toRgbaString(), r.fillRect(o.x, o.y, u.x - o.x, u.y - o.y)
        }

        function h() {
            r.lineWidth = 2, r.strokeStyle = "rgba(255, 255, 255, 0.8)";
            var e = whoCan(r);
            e.dashLength = 3, e.dashSpaceLength = 2, e.dashedLine(function(t) {
                t.translate(e.width() / 3, 0), t.rotate(nextgame.degreesToRadians(90))
            }, e.width()), e.dashedLine(function(t) {
                t.translate(e.width() / 3 * 2, 0), t.rotate(nextgame.degreesToRadians(90))
            }, e.width())
        }

        var n = this,
            r = n.getContext(),
            i = n.pitch.getContext(),
            s = "away" == e.field;
        e = n.model(e.value), r.clearRect(0, 0, r.canvas.width, r.canvas.height), r.save(), n.setForOrAgainstFillAndStrokeStyle(s);
        var o = e.forStats.defense + e.againstStats.attack,
            u = e.forStats.midfield + e.againstStats.midfield,
            a = e.forStats.attack + e.againstStats.defense,
            f = o + u + a;
        c(NG.percentage(o, f, 1, 1), 0, 33), c(NG.percentage(u, f, 1, 1), 33, 67), c(NG.percentage(a, f, 1, 1), 67, 100), r.textAlign = "center", r.textBaseline = "middle";
        var l = t.labels ? t.labels : ["Defensive Third", "Middle Third", "Attacking Third"];
        this.showValues = !1, this.drawText(o, n.relativePointToAbsolute(17, 50), 40), this.showValues = !0, this.drawText(l[0], n.relativePointToAbsolute(17, 35), 11), this.showValues = !1, this.drawText(u, n.relativePointToAbsolute(50, 50), 40), this.showValues = !0, this.drawText(l[1], n.relativePointToAbsolute(50, 35), 11), this.showValues = !1, this.drawText(a, n.relativePointToAbsolute(84, 50), 40), this.showValues = !0, this.drawText(l[2], n.relativePointToAbsolute(84, 35), 11), r.restore(), h()
    }
}), nextgame.statistics.attemptZones = nextgame.statistics.base.extend({
    init: function(e) {
        this.matrix = e.matrix === undefined ? new nextgame.canvas.transformationMatrix(1, 0, 0, 1, 0, 0) : e.matrix, this.maxBarHeight = e.maxBarHeight || 39, this.base(e)
    },
    draw: function(e) {
        function E(e) {
            var t = e.value;
            return e.sixYard = NG.roundNumber(100 * t[0] / NG.roundNumber(t.sum())), e.eighteenYard = NG.roundNumber(100 * t[1] / NG.roundNumber(t.sum())), e.other = NG.roundNumber(100 * t[2] / NG.roundNumber(t.sum())), e
        }

        function S(e) {
            var s = e.percentage,
                o = e.yardsFromHalf,
                u = m.pointToTransformedPoint(i.yards(e.yardsFromGoal), i.yardsW(e.yardsFromHalf), i.length, i.width),
                a = i.width / 8,
                f = u.y * (s / 100) - r.lineWidth * 2,
                l = Math.floor(i.yards(4));
            r.save(), r.translate(u.x, u.y), r.transform(m.xScale, m.xShear, m.yShear, m.yScale, 0, 0);
            var c = f / 2,
                h = r.createLinearGradient(0, -c, 1, c);
            h.addColorStop(1, "rgba(0,0,0,1)"), h.addColorStop(0, "rgba(0,0,0,0)"), r.fillStyle = h, r.fillRect(-l / 2, -c, l, c), r.restore(), n.setForOrAgainstFillAndStrokeStyle(t, .8);
            var p = l * m.xScale;
            r.fillRect(u.x - p / 2, u.y - f, p, f), r.strokeRect(u.x - p / 2, u.y - f, p, f), x(s, {
                x: u.x,
                y: u.y - f
            }, a), r.restore()
        }

        function x(e, t, i) {
            r.font = i + "px 'verdana'", r.textAlign = "center", r.textBaseline = "bottom", t.y < i && (t.y = i), n.drawText(e, t, i)
        }

        e = E(e);
        var t = "away" == e.field,
            n = this,
            r = this.getContext(),
            i = this.pitch,
            s = i.getContext(),
            o = i.getSixYards(),
            u = o / 6,
            a = nextgame.lineWidthPixelsUsed(i.getLineWidth()),
            f = a / 2,
            l = n.pitch.length - a,
            c = n.pitch.width - a,
            h = l / 2 - i.yards(18),
            p = c / 2 - i.yards(22),
            d = l / 2 - i.yards(6),
            v = c / 2 - i.yards(10),
            m = n.matrix;
        r.clearRect(0, 0, r.canvas.width, r.canvas.height);
        var g = function(e, t, n, r) {
                this.percentage = e, this.yardsFromHalf = t, this.textLines = n, this.yardsFromGoal = r, this.xYards = 0
            },
            y = [new g(e.sixYard, this.maxBarHeight, ["6 Yard", "Box"], 3), new g(e.eighteenYard, this.maxBarHeight, ["18 Yard", "Box"], 12), new g(e.other, this.maxBarHeight, ["Outside 18", "Yard Box"], 21)];
        for (var b = 0, w = y.length; b < w; b++) {
            var g = y[b];
            S(g)
        }
    }
}), nextgame.statistics.attemptZones2 = nextgame.statistics.base.extend({
    draw: function(e) {
        function t(e) {
            return e.against ? e.against : e.filter ? e.filter.data.against : "0"
        }

        function b(e, t, n, s) {
            r.save(), typeof e == "function" && e(), r.beginPath();
            for (i = 0; i < t; i += n + s)
                v + i + n < t && (r.moveTo(i, 0), r.lineTo(i + n, 0));
            r.moveTo(i, 0), r.closePath(), r.stroke(), r.restore()
        }

        function E(e) {
            return e.toString().length
        }

        function S(e) {
            var t = e.value;
            return 0 == NG.roundNumber(t.sum()) ? {
                sixYard: 0,
                eighteenYard: 0,
                other: 0,
                sum: 1
            } : (e.sixYard = n.showValues ? t[0] : NG.roundNumber(100 * t[0] / NG.roundNumber(t.sum())), e.eighteenYard = n.showValues ? t[1] : NG.roundNumber(100 * t[1] / NG.roundNumber(t.sum())), e.other = n.showValues ? t[2] : NG.roundNumber(100 * t[2] / NG.roundNumber(t.sum())), e.sum = e.sixYard + e.eighteenYard + e.other, e)
        }

        function x(e, t) {
            return {
                x: o(e),
                y: o(t)
            }
        }

        var n = this,
            r = n.getContext(),
            s = n.pitch,
            o = n.pitch.yards,
            u = new nextgame.shapes({
                context: r
            }),
            a = "away" == e.field,
            f = t(e) === "1",
            l = nextgame.lineWidthPixelsUsed(n.pitch.getLineWidth()),
            c = a ? n.awayFillStyle : n.homeFillStyle;
        f && (c = n.fillStyleConceded);
        var h = n.relativePointToAbsolute(0, 50).y;
        n.showValues = !1, e = S(e), n.clearCanvas(), r.save(), r.translate(.5, 0), r.scale(-1, 1), r.fillStyle = c.setAlpha(e.sixYard / e.sum).toRgbaString(), r.fillRect(-o(6) - s.goalHeight, h - o(10), o(6) - l, o(20) - l);
        var p = h - o(22) + l / 2,
            d = o(44) - l;
        r.fillStyle = c.setAlpha(e.eighteenYard / e.sum).toRgbaString(), u.drawCShape(-o(18) - s.goalHeight, p, o(18) - l, d, o(12), o(12)), r.fillStyle = c.setAlpha(e.other / e.sum).toRgbaString(), u.drawCShape(-o(57.5) - s.goalHeight, h - o(37) + l / 2, o(57.5) - l, o(74) - l, o(39.5), o(15)), r.restore(), r.beginPath(), r.closePath(), r.strokeStyle = "#FFF";
        var v = l,
            m = o(18) + l / 2,
            g = p - 1,
            y = p - l / 2 - .5;
        r.lineWidth = 2, r.strokeStyle = "rgba(255, 255, 255, 0.8)";
        var w = whoCan(r);
        w.dashLength = 3, w.dashSpaceLength = 2, w.dashedLine(function() {
            r.translate(l * 2, h - o(10))
        }, o(6)), w.dashedLine(function() {
            r.translate(o(6) + l, h - o(10) - l / 2), r.rotate(nextgame.degreesToRadians(90))
        }, o(21) - l), w.dashedLine(function() {
            r.translate(l * 2, h + o(10))
        }, o(6)), w.dashedLine(function() {
            r.translate(l * 2, g + .5)
        }, o(18)), w.dashedLine(function() {
            r.translate(o(18) + l, p), r.rotate(nextgame.degreesToRadians(90))
        }, o(44)), w.dashedLine(function() {
            r.translate(l * 2, p + d + .5)
        }, o(18)), w.dashedLine(function() {
            r.translate(o(58) - l / 2, 0), r.rotate(nextgame.degreesToRadians(90))
        }, o(49)), r.save(), r.textBaseline = "middle", n.showValues = !1, n.drawText(e.sixYard, {
            x: s.goalHeight + o(1),
            y: h - o(6)
        }), n.showValues = !0, n.drawText("6 yard box", {
            x: s.goalHeight + o(11 + E(e.sixYard) * 2),
            y: h - o(6)
        }, 11), n.showValues = !1, n.drawText(e.eighteenYard, {
            x: s.goalHeight + o(8),
            y: h + o(2)
        }), n.showValues = !0, n.drawText("18 yard box", {
            x: s.goalHeight + o(18 + E(e.eighteenYard) * 2),
            y: h + o(2)
        }, 11), n.showValues = !1, n.drawText(e.other, {
            x: s.goalHeight + o(23),
            y: h + o(10)
        }), n.showValues = !0, n.drawText("Out of box", {
            x: s.goalHeight + o(33 + E(e.other) * 2),
            y: h + o(10)
        }, 11), r.restore()
    }
}), nextgame.statistics.draw3DPitch = function(e, t, n) {
    function d(e) {
        var t = r.yards(8),
            n = r.width / 2 - t / 2,
            i = c.pointToTransformedPoint(0, n, r.length, r.width),
            s = c.pointToTransformedPoint(0, n + t, r.length, r.width);
        e.lineWidth = 2, e.moveTo(i.x, i.y), e.lineTo(i.x, i.y - r.yards(6)), e.lineTo(s.x, s.y - r.yards(6)), e.lineTo(s.x, s.y), e.stroke(), e.beginPath(), e.closePath()
    }

    var r = new nextgame.pitch({
            length: t,
            width: n,
            goalHeight: 0,
            context: e,
            drawCenterCircle: nextgame.canvasSupported(),
            drawPenaltyArcs: nextgame.canvasSupported(),
            drawCornerCircles: !1
        }),
        i = t;
    t = n, n = i;
    var s = nextgame.degreesToRadians(30),
        o = Math.tan(s),
        u = 4,
        a = 1.3,
        f = r.width * .15,
        l = 40,
        c = new nextgame.canvas.transformationMatrix(u, 0, -o, a, o * r.yardsW(47), f);
    e.clearRect(0, 0, 2e3, 2e3);
    var h = r.yardsW(7) * Math.tan(s) * u,
        p = {
            width: r.length,
            height: r.width
        };
    return $(e.canvas).parent().css(p), $(e.canvas).attr(p), e.lineWidth = 1, e.strokeStyle = e.fillStyle = "rgba(255, 255, 255, 0.8)", e.save(), c.setTransform(e), r.drawStripes(), r.draw(), e.restore(), d(e), {
        pitch: r,
        matrix: c,
        canvasDimensions: p,
        maxBarHeight: l
    }
}, nextgame.statistics.attemptDirections = nextgame.statistics.base.extend({
    draw: function(e) {
        function h() {
            var e = r.length / 2,
                t, n, i;
            o.save(), t = o.lineWidth = 2, o.strokeStyle = "#FFF", a.dashLength = 3, a.dashSpaceLength = 2, i = f ? r.length / 2 : 0, n = r.width / 2 - t / 2, a.dashedLine(function(e) {
                e.translate(i, n - r.yardsW(10))
            }, e), a.dashedLine(function(e) {
                e.translate(i, n + r.yardsW(10))
            }, e), o.restore()
        }

        function p(e) {
            var t = {},
                n = e.value;
            return t.left = s.showValues ? n[0] : NG.roundNumber(100 * n[0] / NG.roundNumber(n.sum())), t.center = s.showValues ? n[1] : NG.roundNumber(100 * n[1] / NG.roundNumber(n.sum())), t.right = s.showValues ? n[2] : NG.roundNumber(100 * n[2] / NG.roundNumber(n.sum())), t.sum = sum(t), t
        }

        function d(e, t, n, r, i, u) {
            i = s.showValues ? i : 100;
            var a = 0,
                c = s.getCanvasWidth(6),
                h = s.getCanvasWidth(4),
                p = s.relativePointToAbsolute(t, n),
                d = 26,
                v = n;
            if (r !== l.horizontal) {
                var m = new nextgame.shapes.rightAngleTriangle(s.getCanvasHeight() / 2 - s.getCanvasHeight(25), s.getCanvasWidth() - p.x - s.getCanvasHeight(19));
                m.solve(), d = m.c / s.getCanvasWidth() * 100, r === l.upDiagaonal ? (v = n + 1, a = m.B * -1) : (a = m.B, v = n - 4)
            }
            o.save(), o.lineJoin = "round", f ? (o.scale(1, 1), o.translate(0, 0)) : (o.translate(o.canvas.width, 0), o.scale(-1, 1));
            var g = (s.getCanvasWidth(d) - h) * e / i,
                y = s.getCanvasWidth(d) - g - h;
            o.translate(p.x, p.y), o.rotate(nextgame.degreesToRadians(a)), o.translate(y, -c / 2), s.shapes.drawArrow(g, c, h, s.getCanvasWidth(8)), o.restore(), o.save();
            var b;
            if (r === l.horizontal)
                f ? o.translate(p.x + y, 0) : o.translate(s.getCanvasWidth() - (p.x + y), 0), b = s.relativePointToAbsolute(f ? -2 : 2, v);
            else {
                var w = new nextgame.shapes.rightAngleTriangle(null, null, g + h, null, 90 - Math.abs(a));
                w.solve();
                var E = new nextgame.shapes.rightAngleTriangle(null, null, c / 2, null, Math.abs(a));
                E.solve();
                var n = r === l.downDiagaonal ? 90 : 10,
                    t = f ? 69 : 31;
                b = s.relativePointToAbsolute(t, n);
                var S = m.a - w.a - Math.abs(E.a);
                f ? b.x += S : b.x -= S;
                var x = (m.b - w.b) / 2;
                b.y += r === l.upDiagaonal ? -x : x
            }
            o.translate(b.x, b.y), o.textBaseline = "middle", o.textAlign = f ? "right" : "left", s.showValues = !1, s.drawText(e, null, s.fontSizeRelativeToCanvasHeight()), s.showValues = !0;
            var T = f ? {
                x: -50,
                y: 0
            } : {
                x: 50,
                y: 0
            };
            s.drawText(u, T, 11), o.restore()
        }

        var t = e.against ? e.against : e.filter ? e.filter.data.against ? e.filter.data.against : "0" : "0",
            n = t === "1",
            r = this.pitch,
            i = "away" === e.field,
            s = this,
            o = this.getContext(),
            u, a = whoCan(o),
            f = !1,
            l = {
                horizontal: 0,
                upDiagaonal: -1,
                downDiagaonal: 1
            },
            c = {
                Left: 0,
                Right: 1
            };
        i ? u = n ? c.Right : c.Left : u = n ? c.Left : c.Right, u === c.Right && (f = !0), s.showValues = !1, e = p(e), o.clearRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight()), o.lineWidth = 1, o.lineJoin = "miter", o.textAlign = "right", n ? (o.fillStyle = "#AAA", o.strokeStyle = "#AAA") : s.setForOrAgainstFillAndStrokeStyle(i), d(e.right, 70, f ? 7 : 93, f ? l.upDiagaonal : l.downDiagaonal, e.sum, "Right side"), d(e.center, 62, 50, l.horizontal, e.sum, "Middle"), d(e.left, 70, f ? 93 : 7, f ? l.downDiagaonal : l.upDiagaonal, e.sum, "Left side"), h()
    }
}), nextgame.statistics.touchChannels = nextgame.statistics.base.extend({
    draw: function(e) {
        function a() {
            r.save(), r.strokeStyle = "#FFF", r.lineWidth = 2;
            var e = u.length / 2,
                n = t ? 0 : e,
                i = whoCan(r);
            i.dashLength = 3, i.dashSpaceLength = 2, i.dashedLine(function() {
                r.translate(n, u.width / 3)
            }, e), i.dashedLine(function() {
                r.translate(n, u.width / 3 * 2)
            }, e), r.restore()
        }

        function f(e) {
            var t = {},
                n = e.value;
            return t.left = NG.roundNumber(100 * n[0] / NG.roundNumber(n.sum())), t.center = NG.roundNumber(100 * n[1] / NG.roundNumber(n.sum())), t.right = NG.roundNumber(100 * n[2] / NG.roundNumber(n.sum())), t
        }

        function l(e, n, r) {
            var i, s = (33 - o) / 2;
            switch (n) {
                case "left":
                    i = (t ? 33 : 100) - s;
                    break;
                case "center":
                    i = 66 - s;
                    break;
                case "right":
                    i = (t ? 100 : 33) - s
            }
            c(e, i, 1), h(e, i, r)
        }

        function c(e, i, s) {
            var u = n.getCanvasWidth(45 * e / 100) - r.lineWidth;
            if (e > 0) {
                r.save(), t && (r.translate(r.canvas.width, 0), r.scale(-1, 1));
                var a = n.relativePointToAbsolute(50, i);
                r.translate(a.x, a.y), r.lineWidth = 2, r.lineJoin = "round", n.shapes.drawArrow(u, n.getCanvasHeight(o), n.getCanvasWidth(5), n.getCanvasHeight(21.5)), r.restore()
            }
        }

        function h(e, i, u) {
            var a = n.fontSizeRelativeToCanvasHeight();
            r.save(), r.textBaseline = "middle", r.textAlign = t ? "left" : "right";
            var f = t ? n.relativePointToAbsolute(100 - s + 3, i - o / 2) : n.relativePointToAbsolute(s - 3, i - o / 2);
            r.translate(f.x, f.y), n.showValues = !1, n.drawText(e, undefined, a), n.showValues = !0;
            var l = t ? {
                x: 50,
                y: 0
            } : {
                x: -50,
                y: 0
            };
            n.drawText(u, l, 11), r.restore()
        }

        var t = "away" == e.field;
        e = f(e);
        var n = this,
            r = this.getContext(),
            i = this.getCanvasWidth(),
            s = 50,
            o = 14.5,
            u = this.pitch;
        r.clearRect(0, 0, this.getCanvasWidth(), this.getCanvasHeight()), r.textAlign = "right", r.strokeStyle = "#CCC", n.setForOrAgainstFillAndStrokeStyle(t), l(e.left, "left", "Left side"), l(e.center, "center", "Middle"), l(e.right, "right", "Right side"), a()
    }
}), nextgame.heatmapGradient = function(e) {
    this.width = e.width, this.height = e.height, this.context = e.context, this.draw = function() {
        var e = this.context,
            t = e.createLinearGradient(0, 0, this.width, 0);
        for (var n = 0; n <= 1; n += .1) {
            var r = new nextgame.hsl(0, 100, 60);
            t.addColorStop(n, r.toStringForHeatmap(n))
        }
        e.fillStyle = t, e.fillRect(0, 0, this.width, this.height)
    }
}, nextgame.shapes = function(e) {
    var t;
    this.init = function() {
        t = e.context
    }, this.drawArrow = function(e, n, r, i) {
        var s = (i - n) / 2;
        t.beginPath(), t.moveTo(0, 0), t.lineTo(e, 0), t.lineTo(e, -s), t.lineTo(e + r, n / 2), t.lineTo(e, n + s), t.lineTo(e, n), t.lineTo(0, n), t.closePath(), t.stroke(), t.fill(), t.beginPath(), t.closePath()
    }, this.drawCShape = function(e, n, r, i, s, o) {
        t.save(), t.translate(e, n), t.beginPath(), t.moveTo(0, 0), t.lineTo(r, 0), t.lineTo(r, o), t.lineTo(s, o), t.lineTo(s, i - o), t.lineTo(r, i - o), t.lineTo(r, i), t.lineTo(0, i), t.lineTo(0, 0), t.closePath(), t.fill(), t.restore()
    }, this.drawArrowLine = function(e, n, r, i) {
        var s = 10,
            o = Math.atan2(i - n, r - e);
        t.strokeStyle = "rgb(255, 255, 255)", t.beginPath(), t.moveTo(e, n), t.lineTo(r, i), t.lineTo(r - s * Math.cos(o - Math.PI / 6), i - s * Math.sin(o - Math.PI / 6)), t.moveTo(r, i), t.lineTo(r - s * Math.cos(o + Math.PI / 6), i - s * Math.sin(o + Math.PI / 6)), t.closePath(), t.stroke()
    }, this.init()
}, nextgame.shapes.rightAngleTriangle = function(e, t, n, r, i) {
    function o(e) {
        return typeof e == "number"
    }

    var s = this;
    this.a = e, this.b = t, this.c = n, this.A = nextgame.degreesToRadians(r), this.B = nextgame.degreesToRadians(i), this.C = 90, this.solve = function() {
        o(this.a) && o(this.b) ? (this.c = Math.sqrt(e * e + t * t), this.B = Math.atan(e / t) * 180 / Math.PI) : o(this.c) && o(this.B) && (this.a = this.c * Math.cos(this.B), this.b = Math.sqrt(Math.pow(this.c, 2) - Math.pow(this.a, 2)))
    }, this.draw = function(e) {
        o(this.a) && o(this.b) && (e.beginPath(), e.moveTo(0, 0), e.lineTo(Math.abs(this.b), 0), e.lineTo(Math.abs(this.b), Math.abs(this.a)), e.closePath(), e.stroke())
    }
}, define("canvas/nextgame.statistics", ["canvas/nextgame"], function() {}), nextgame == undefined && (nextgame = {}), nextgame.pitch = base2.Base.extend({
    constructor: function(e) {
        var t = e.context;
        this.getContext = function() {
            return t
        }, this.length = e.length, this.width = e.width, this.drawCenterCircle = e.drawCenterCircle != undefined ? e.drawCenterCircle : !0, this.drawPenaltyArcs = e.drawPenaltyArcs != undefined ? e.drawPenaltyArcs : !0, this.drawCornerCircles = e.drawCornerCircles != undefined ? e.drawCornerCircles : !0, this.initialGoalHeight = e.goalHeight;
        var n = this.length / 115,
            r = this.width / 74,
            i = 6 * n,
            s = t.lineWidth;
        this.initialGoalHeight == undefined ? this.goalHeight = 0 : this.goalHeight = this.initialGoalHeight, this.getLengthRatio = function() {
            return n
        }, this.getWidthRatio = function() {
            return r
        }, this.getSixYards = function() {
            return i
        }, this.getLineWidth = function() {
            return s
        }, this.totalLength = function() {
            return this.length + this.goalHeight * 2
        }, this.totalWidth = function() {
            return this.width + s
        }, this.yards = function(e) {
            return n * e
        }, this.yardsW = function(e) {
            return r * e
        }, this.eighteenYardBoxWidth = function() {
            return 44 * n
        }
    },
    drawWithDefaults: function() {
        var e = this.getContext(),
            t = nextgame.pitch.getDefaults();
        e.translate(this.goalHeight + 1, 1), e.lineWidth = t.lineWidth, e.strokeStyle = t.strokeStyle, e.fillStyle = t.fillStyle, this.drawStripes(), this.draw()
    },
    draw: function() {
        function m() {
            var t = new Image;
            t.src = "/img/wsblack.png", t.onload = function() {
                var n = this.width,
                    r = this.height,
                    i = Math.min(120, that.length / 4),
                    s = r * (i / n),
                    o = that.width - s - 4,
                    u = that.length - i - 4;
                e.drawImage(t, u, o, i, s)
            }
        }

        function g() {
            e.strokeRect(0, 0, that.length, that.width)
        }

        function y() {
            e.moveTo(o, 0), e.lineTo(o, that.width), e.moveTo(o + h, s), that.drawCenterCircle && e.arc(o, s, h, 0, nextgame.degreesToRadians(360), !1)
        }

        function b() {
            T(), w(), E(), S()
        }

        function w() {
            p > 0 && (e.moveTo(0, u), e.lineTo(-p, u), e.lineTo(-p, a), e.lineTo(0, a))
        }

        function E() {
            x(f)
        }

        function S() {
            x(d)
        }

        function x(t) {
            var n = u - t;
            e.moveTo(0, n), e.lineTo(t, n), e.lineTo(t, that.width - n), e.lineTo(0, that.width - n)
        }

        function T() {
            if (!that.drawPenaltyArcs)
                return;
            e.moveTo(l, s), e.arc(c, s, h, nextgame.degreesToRadians(0), nextgame.degreesToRadians(52.5), !1), e.moveTo(l, s), e.arc(c, s, h, nextgame.degreesToRadians(0), nextgame.degreesToRadians(306.5), !0)
        }

        function N() {
            var t = f / 4;
            e.beginPath(), e.moveTo(c, s), e.arc(c, s, v, 0, nextgame.degreesToRadians(360), !1), e.moveTo(c, s), e.arc(that.length - c, s, v, 0, nextgame.degreesToRadians(360), !1), e.moveTo(c, s), e.arc(o, s, v, 0, nextgame.degreesToRadians(360), !1), e.fill(), e.closePath(), that.drawCornerCircles && (e.beginPath(), e.moveTo(t, 0), e.arc(0, 0, t, 0, nextgame.degreesToRadians(90), !1), e.moveTo(that.length, t), e.arc(that.length, 0, t, nextgame.degreesToRadians(90), nextgame.degreesToRadians(180), !1), e.moveTo(0, that.width - t), e.arc(0, that.width, t, nextgame.degreesToRadians(270), nextgame.degreesToRadians(360), !1), e.moveTo(that.length - t, that.width), e.arc(that.length, that.width, t, nextgame.degreesToRadians(180), nextgame.degreesToRadians(270), !1), e.closePath(), e.stroke())
        }

        that = this;
        var e = this.getContext(),
            t = e.lineWidth;
        that.getLineWidth = function() {
            return t
        };
        var n = this.getLengthRatio(),
            r = this.getWidthRatio(),
            i = 8 * n,
            s = this.width / 2,
            o = this.length / 2,
            u = s - i / 2,
            a = s + i / 2,
            f = this.getSixYards(),
            l = 22 * n,
            c = f * 2,
            h = 10 * n,
            p = that.goalHeight,
            d = f * 3,
            v = .5 * n;
        g(), y(), b(), e.save(), e.translate(that.length, that.width), e.rotate(nextgame.degreesToRadians(180)), b(), e.restore(), e.stroke(), N(), m(), e.beginPath(), e.closePath()
    },
    drawStripes: function() {
        var e = this.getContext(),
            t = 20,
            n = this.length / t;
        e.save();
        for (var r = 0; r < t; r++)
            r % 2 > 0 ? e.fillStyle = "rgb(51, 51, 51)" : e.fillStyle = "rgb(51, 51, 51)", e.fillRect(r * n, 0, n + 1, this.width);
        e.restore()
    }
}), nextgame.pitch.getDefaults = function() {
    var e = "rgb(91, 91, 91)";
    return {
        lineWidth: 1,
        strokeStyle: e,
        fillStyle: e
    }
}, nextgame.pitch.dimension = {
    length: "length",
    width: "width"
}, define("canvas/nextgame.pitch", ["canvas/nextgame"], function() {}),
    function() {
        var e;
        window.whoCan = function(t) {
            var n = t;
            return e = function() {
                this.dashLength = 1, this.dashSpaceLength = 1
            }, e.prototype = {
                width: function() {
                    return n.canvas.width
                },
                dashedLine: function(e, t) {
                    var r = this.dashLength,
                        s = this.dashSpaceLength;
                    n.save(), typeof e == "function" && e(n), n.beginPath();
                    for (i = 0; i < t; i += r + s)
                        i + r < t && (n.moveTo(i, 0), n.lineTo(i + r, 0));
                    n.moveTo(i, 0), n.closePath(), n.stroke(), n.restore()
                }
            }, new e
        }
    }(), nextgame.canvas = {}, nextgame.canvas.drawPitchAndCreateOverlayingStatsCanvas = function(e, t, n, r) {
    r.drawPitch = r.drawPitch || function(e) {
        e.drawWithDefaults()
    };
    var i = nextgame.canvas.createCanvas(t, n).css("position", "absolute"),
        s = nextgame.canvas.createCanvas(t, n).css("position", "absolute");
    $container = $("<div></div>").css({
        width: t,
        height: n
    }).addClass("pitch-stats-container").append(i).append(s), e.append($container);
    var o = nextgame.getCanvasContext(i[0]),
        u = new nextgame.pitch({
            context: o,
            length: r.length,
            width: r.width
        });
    o.save(), o.translate(r.translateX, r.translateY), r.drawPitch(u), o.restore();
    var a = nextgame.getCanvasContext(s[0]);
    return {
        pitch: u,
        statsContext: a
    }
}, nextgame.canvas.drawFullPitchAndCreateOverlayingStatsCanvas = function(e, t, n) {
    var r = nextgame.pitch.getDefaults().lineWidth,
        i = 0,
        s = $(e).attr("id"),
        o = nextgame.lineWidthPixelsUsed(r),
        u = Math.round((r - 1) / 2),
        a = t + i * 2 + o,
        f = n + o,
        l = nextgame.canvas.createCanvas(a, f).css("position", "absolute").attr("id", s + "PitchCanvas"),
        c = $("<div></div>").css("width", a + r / 2 - 1).css("height", f + r / 2 - 1).addClass("pitch-stats-container"),
        h = nextgame.canvas.createCanvas(t - o, n - o);
    h.css("margin-top", o).css("margin-left", i + o).attr("id", s + "StatsCanvas").css("position", "absolute"), c.append(l), c.append(h), e.append(c);
    var p = nextgame.getCanvasContext(l[0]),
        d = new nextgame.pitch({
            context: p,
            length: t,
            width: n,
            goalHeight: i,
            name: "NormalPitch"
        }),
        v = o / 2 - 1;
    p.save(), p.translate(v, v), d.drawWithDefaults(), p.restore();
    var m = nextgame.getCanvasContext(h[0]);
    return {
        pitch: d,
        statsContext: m
    }
}, nextgame.canvas.createCanvas = function(e, t) {
    return $("<canvas></canvas>").attr("width", e).attr("height", t)
}, nextgame.canvas.transformationMatrix = function(e, t, n, r, i, s) {
    this.xScale = e, this.xShear = t, this.yShear = n, this.yScale = r, this.xTranslation = i, this.yTranslation = s, this.reset = function() {
        this.xScale = e, this.xShear = t, this.yShear = n, this.yScale = r, this.xTranslation = i, this.yTranslation = s
    }
}, nextgame.canvas.transformationMatrix.prototype.setTransform = function(e) {
    e.setTransform(this.xScale, this.xShear, this.yShear, this.yScale, this.xTranslation, this.yTranslation)
}, nextgame.canvas.transformationMatrix.prototype.transform = function(e) {
    e.transform(this.xScale, this.xShear, this.yShear, this.yScale, this.xTranslation, this.yTranslation)
}, nextgame.canvas.transformationMatrix.prototype.rotate = function(e) {
    return new nextgame.canvas.transformationMatrix(this.xScale * Math.cos(e), this.xShear + this.xScale * -Math.sin(e), this.yShear + this.yScale * Math.sin(e), this.yScale * Math.cos(e), this.xTranslation, this.yTranslation)
}, nextgame.canvas.transformationMatrix.prototype.pointToTransformedPoint = function(e, t, n, r) {
    return {
        x: t * this.yShear + this.xTranslation + e / n * this.xScale * n,
        y: e * this.xShear + this.yTranslation + t / r * this.yScale * r
    }
}, define("canvas/nextgame.canvas", ["canvas/nextgame", "canvas/nextgame.pitch"], function() {}), WS = WS || {}, WS.Canvas = function(e) {
    function s(e) {
        t = e.view, type = e.model.type;
        if (t.is3D) {
            var n = nextgame.statistics.draw3DPitch(nextgame.getContextById(t.renderTo + " .pitch-canvas"), t.width, t.height),
                s = nextgame.getContextById(t.renderTo + " .stat-canvas");
            r = n.pitch, i = new e.model.instanceType({
                context: s,
                pitch: r,
                matrix: n.matrix,
                maxBarHeight: n.maxBarHeight,
                type: type,
                extraOptions: e.extraOptions
            }), $(s.canvas).attr(n.canvasDimensions)
        } else {
            var o = null;
            typeof t.drawPitch == "function" ? o = t.drawPitch(t.renderTo) : o = nextgame.canvas.drawFullPitchAndCreateOverlayingStatsCanvas($("#" + t.renderTo), t.width, t.height), r = o.pitch, i = new e.model.instanceType({
                pitch: r,
                context: o.statsContext,
                width: t.width,
                height: t.height,
                type: type,
                extraOptions: e.extraOptions
            })
        }
    }

    var t, n, r, i;
    s(e), this.load = function(t) {
        i.draw(t, e.view)
    }, this.id = function() {
        return t.renderTo
    }
}, define("wscanvas", ["canvas/nextgame.canvas"], function() {}), define("views/ChalkboardView", ["backbone", "views/BaseView", "models/MatchCentreModel", "canvas/nextgame.statistics", "wscanvas", "commentaryCreator", "lib/helpers/MatchCentreHelper"], function(e, t, n, r, i, s, o) {
    var u = t.extend({
            el: "#chalkboard",
            template: "chalkboard",
            events: {
                "click .filterz-option": "filterzOptionChanged",
                'click .filterz-filter[data-filter-index]:not([data-sum="0"])': "filterzFilterClicked",
                "click .player": "playerClicked",
                "click .team": "selectAllPlayers"
            },
            defaults: {
                playerFilterIsOn: !1,
                currentFilter: "0",
                filterIdentifiers: {},
                currentPlayerIds: {},
                currentFilterIndices: {},
                minMinute: 0,
                maxMinute: 90,
                minLimit: 0,
                maxLimit: 90,
                filterSatisfiers: {}
            },
            initialize: function(e) {
                this.formationList = e.formationList, a.eventTypes = e.eventTypes, a.invertedEventTypes = _.invert(e.eventTypes), this.render()
            },
            setCommentaryCreator: function() {
                this.commentaryCreator || (this.commentaryCreator = new s(this.model.get("playerIdNameDictionary"), this.formationList))
            },
            onModelChange: function() {
                if (!this.isActive)
                    return;
                this.setTeam(this.model.home), this.setTeam(this.model.away), this.setCommentaryCreator(), this.setInfo(), this.refreshChalkboard();
                var e = this.getTimelineInfo();
                this.$timeline.trigger("refresh", [e]), this.setTimelineEventVisiblities()
            },
            templateContext: function() {
                return {
                    filterGroups: this.filterGroups
                }
            },
            setTeam: function(e) {
                var t = this.$el.find('.team-players[data-field="{0}"]'.format(e.get("field")));
                t.find(".team span").html(e.get("name"));
                var n = t.find(".players"),
                    r = e.get("players");
                if (!r)
                    return;
                this.setPlayers(n, r)
            },
            setPlayers: function(e, t) {
                this.playersAlive || (this.playersAlive = {});
                var n = this;
                _.each(t, _.bind(function(t) {
                    this.playersAlive[t.playerId] || (this.addPlayer(e, t), this.playersAlive[t.playerId] = 1)
                }, this))
            },
            addPlayer: function(e, t) {
                NG.renderDustTemplate("chalkboard-player", t, _.bind(function(t) {
                    e.append(t)
                }, this))
            },
            formationPositionOrder: ["GK", "DR", "DC", "DL", "DMR", "DMC", "DML", "MR", "MC", "ML", "AMR", "MC", "AML", "FWR", "FW", "FWL", "Sub"],
            filterzOptionChanged: function(e) {
                this.selectedEventIdentifier = null, this.hideEventDetails();
                var t = $(e.currentTarget),
                    n = t.attr("data-filter-index");
                this.selectOption(t), this.resetFiltersView(n), this.setCurrentFilter(n), this.selectAllPlayers()
            },
            selectOption: function(e) {
                $(".filterz-option a", this.$el).removeClass("selected"), e.find("a").addClass("selected")
            },
            resetFiltersView: function(e) {
                this.$filterGroups.removeClass("selected"), this.$filterGroups.filter('[data-filter-index="{0}"]'.format(e)).addClass("selected"), this.$el.find('.filterz-filter:not([data-filter-index="all"])').removeClass("selected"), this.$el.removeClass("filterz-filter-on")
            },
            setCurrentFilter: function(e) {
                this.currentFilter = e, this.currentFilterIndices = {}
            },
            createCanvas: function() {
                if (this.eventsPanel)
                    return;
                var e = this,
                    t = {
                        view: {
                            width: 668,
                            height: 369,
                            renderTo: "chalkboard .canvas-container"
                        },
                        model: {
                            instanceType: nextgame.statistics.events
                        },
                        extraOptions: {
                            onEventSelect: function(t) {
                                t ? (e.highlightEvent(t), e.drawCanvas()) : e.selectedEventIdentifier && (e.dehighlightEvent(), e.drawCanvas())
                            }
                        }
                    };
                this.eventsPanel = new WS.Canvas(t)
            },
            dehighlightEvent: function() {
                this.selectedEventIdentifier && (this.selectedEventIdentifier = null, this.hideEventDetails())
            },
            highlightEvent: function(e) {
                var t = this.getEventIdentifier(e);
                t != this.selectedEventIdentifier && (this.selectedEventIdentifier = t, this.showEventDetails(e));
                return
            },
            dehighlightFilters: function() {
                return
            },
            hideEventDetails: function() {
                this.$playerEventDetails.removeClass("visible")
            },
            showEventDetails: function(e) {
                if (!e)
                    return;
                this.$playerEventDetails.attr("data-event-id", e.eventId), this.$playerEventDetails.find(".player-event-minute").html(e.minute), this.$playerEventDetails.find(".player-event-text").html(this.commentaryCreator.getSentence(e, this.model.get("events"))), this.$playerEventDetails.find(".player-avatar").attr("src", gImageUrl + "players/" + e.playerId + ".jpg");
                var t = this.homeTeamId == e.teamId ? e.x : 100 - e.x,
                    n = this.homeTeamId == e.teamId ? e.y : 100 - e.y,
                    r = 50 < t ? 10 : 60,
                    i = 50 < n ? 10 : 60;
                this.$playerEventDetails.addClass("visible").css("left", r + "%").css("top", i + "%")
            },
            drawCanvas: function() {
                this.eventsPanel || this.createCanvas();
                var e = this.getCurrentEvents();
                this.eventsPanel.load({
                    value: e
                }), this.setPlayerCountValues(e), this.setTimelineEvents(e)
            },
            setTimelineEvents: function(e) {
                this.setTimelineEventsForTeam(e, this.homeTeamId), this.setTimelineEventsForTeam(e, this.awayTeamId)
            },
            setTimelineEventsForTeam: function(e, t) {
                var n = _.filter(e, function(e) {
                        return e.teamId == t && e.isSelected
                    }),
                    r = this.homeTeamId == t ? "home" : "away",
                    i = this.prepareEventsForTimeline(n, r);
                NG.renderDustTemplate("chalkboard-timeline-events", i, _.bind(function(e) {
                    this.$el.find('.timeline-events[data-field="{0}"]'.format(r)).html(e)
                }, this))
            },
            prepareEventsForTimeline: function(e, t) {
                var n = [],
                    r = {},
                    i = 0,
                    s = this;
                _.each(e, _.bind(function(e) {
                    r[e.expandedMinute] || (r[e.expandedMinute] = []), r[e.expandedMinute].push(e)
                }));
                for (var u in r) {
                    var a = o.getLeftFromMinute(u, 0, this.expandedMaxLimit),
                        f = this.minuteInfos[u],
                        l = r[u];
                    i = Math.max(i, l.length), n.push(_.extend({}, {
                        left: a,
                        events: l
                    }, f))
                }
                var c = Math.min(8, 44 / i);
                return _.each(n, function(e) {
                    e.eventHeight = c, e.eventWidth = c, e.height = c * e.events.length, "home" == t ? e.top = 44 - e.height : e.bottom = 44 - e.height
                }), {
                    events: n,
                    maxNoOfEventsInExpandedMinute: i
                }
            },
            getCurrentFilterEvents: function() {
                var e = _.union(this.groupedFilters[this.currentFilter].home, this.groupedFilters[this.currentFilter].away);
                return e
            },
            getCurrentEvents: function() {
                if (this.groupedFilters && this.groupedFilters[this.currentFilter]) {
                    var e = this.getCurrentFilterEvents(),
                        t = this,
                        n = [];
                    return _.each(e, function(e) {
                        var r = t.eventIsInCurrentTimeRange(e),
                            i = t.eventIsInSelectedPlayers(e),
                            s = t.eventIsInSelectedEventTypes(e),
                            o = t.eventIsHighlighted(e);
                        e.isSelected = !t.selectedEventIdentifier && r && i && s || o, n.push(e)
                    }), n
                }
                return this.model.get("events")
            },
            eventIsHighlighted: function(e) {
                var t = this.getEventIdentifier(e);
                return this.selectedEventIdentifier ? this.selectedEventIdentifier == t : !1
            },
            eventIsInSelectedPlayers: function(e) {
                var t = !0;
                return $.isEmptyObject(this.currentPlayerIds) || (t = this.currentPlayerIds[e.playerId]), t
            },
            getSatisfiedEventFilterIndicesForEvent: function(e) {
                var t = {};
                for (var n in this.filterSatisfiers) {
                    var r = this.filterSatisfiers[n];
                    r(e) && (t[n] = 1)
                }
                return t
            },
            eventIsInSelectedEventTypes: function(e) {
                var t = !0;
                if (!$.isEmptyObject(this.currentFilterIndices))
                    for (var n in this.currentFilterIndices) {
                        var r = this.currentFilterIndices[n],
                            i = !1;
                        for (var s in r) {
                            var o = this.filterSatisfiers[s];
                            if (o) {
                                var u = o(e);
                                i = i || u
                            }
                        }
                        t = t && i
                    }
                return t
            },
            eventIsInCurrentTimeRange: function(e) {
                return this.expandedMinMinute <= e.expandedMinute && e.expandedMinute <= this.expandedMaxMinute
            },
            getEventIdentifier: function(e) {
                return e.teamId ? "{0}_{1}".format(e.teamId, e.eventId) : null
            },
            getTimelineInfo: function() {
                return {
                    statusCode: this.model.get("statusCode"),
                    expandedMaxMinute: this.expandedMaxMinute,
                    expandedMinutes: this.expandedMinutes,
                    minuteInfos: this.minuteInfos,
                    minuteExpanded: this.minuteExpanded
                }
            },
            setInfo: function() {
                this.maxMinute = this.model.get("maxMinute"), this.maxLimit = Math.max(90, this.maxMinute), this.homeTeamId = this.model.get("home").teamId, this.awayTeamId = this.model.get("away").teamId, this.expandedMinutes = this.model.get("expandedMinutes"), this.expandedMinMinute = 0, this.expandedMaxLimit = this.model.get("expandedMaxMinute"), this.expandedMaxMinute = this.model.get("expandedMaxMinute"), this.minuteInfos = o.getMinuteInfosFromExpandedMinutes(this.expandedMinutes), this.minuteExpanded = this.model.get("minuteExpanded")
            },
            setupTimeline: function() {
                if (this.$timeline)
                    return;
                var e = this,
                    t = this.$el.find(".timeline-control"),
                    n = this.getTimelineInfo();
                t.timeline(_.extend({}, {
                    onChange: function(t) {
                        e.currentRange = t, e.rangeChanged()
                    }
                }, n)), this.$timeline = t
            },
            refreshChalkboard: function() {
                this.$playerEventDetails = this.$el.find("#player-event-details"), this.$filterGroups = this.$el.find(".filterz-filter-group"), this.$pitchContainer = this.$el.find(".pitch-stats-container", this.$el), this.timelineWidth = 964, this.groupEventsByFilterz(), this.setupTimeline(), this.drawCanvas();
                var e = this.getTimelineInfo();
                this.$timeline.trigger("refresh", [e]), this.$el.attr("data-initialized") || this.$el.find("#event-type-filters .filterz-option:first-child").click()
            },
            onRender: function() {},
            rangeChanged: function() {
                this.setMinuteRanges(), this.groupEventsByFilterz(), this.drawCanvas()
            },
            setTimelineEventVisiblities: function() {
                var e = this;
                this.$el.find(".chalkboard-timeline-event").each(function() {
                    var e = $(this),
                        t = e.attr("data-expanded-minute");
                    t = parseInt(t, 10), this.expandedMinMinute <= t && t <= t ? e.removeClass("hidden") : e.addClass("hidden")
                })
            },
            getMinuteFromLeft: function(e) {
                if (!e)
                    return;
                if (e.replace) {
                    -1 != e.indexOf("px") && (e = e.replace("px", ""));
                    if (-1 != e.indexOf("%")) {
                        var t = e.replace("%", "");
                        e = t * this.timelineWidth / 100
                    }
                }
                return parseInt(this.maxLimit * (e / this.timelineWidth), 10)
            },
            getHandleMinute: function(e) {
                var t = e.css("left");
                return this.getMinuteFromLeft(t)
            },
            setMinuteRanges: function() {
                var e = this.currentRange[0],
                    t = this.currentRange[1];
                this.expandedMinMinute = Math.min(e.expandedMinute, t.expandedMinute), this.expandedMaxMinute = Math.max(e.expandedMinute, t.expandedMinute)
            },
            setMinuteFiltersOn: function(e, t) {
                this.maxMinute = t, this.minMinute = e, this.maxLimit = Math.max(this.maxMinute, this.maxLimit)
            },
            filterzFilterOn: function(e) {
                this.$el.addClass("filterz-filter-on"), this.drawCanvas()
            },
            filterzFilterOff: function() {
                this.$el.removeClass("filterz-filter-on"), this.selectedEventIdentifiers = null, this.drawCanvas()
            },
            playerFilterKeyTemplate: "player_{0}",
            filterzFilterKeyTemplate: "filterz_{0}",
            filterzFilterClicked: function(e) {
                this.dehighlightEvent();
                var t = $(e.currentTarget),
                    n = t.parent(".filterz-filter-sub-group"),
                    r = t.attr("data-filter-index");
                "all" == r ? (this.uncheckAllFiltersInGroup(n), t.addClass("selected")) : (t.siblings('[data-filter-index="all"]').removeClass("selected"), t.toggleClass("selected")), this.currentFilterIndices = this.getCurrentSelection(), $.isEmptyObject(this.currentFilterIndices) ? (t.siblings('[data-filter-index="all"]').addClass("selected"), n.addClass("has-selected-stats"), this.filterzFilterOff()) : this.filterzFilterOn(r)
            },
            checkAllFiltersInGroup: function() {
                this.$el.find('[data-filter-index="{0}"] [data-filter-index="all"]'.format(this.currentFilter)).click()
            },
            uncheckAllFiltersInGroup: function(e) {
                e.find('.filterz-filter:not([data-sum="0"])').removeClass("selected")
            },
            getCurrentSelection: function() {
                var e = this,
                    t = {};
                this.ignoredFilters = {};
                var n = this.$el.find('[data-filter-index="{0}"] .filterz-filter-sub-group'.format(this.currentFilter));
                return n.each(function() {
                    var n = $(this),
                        r = n.index(),
                        i = n.find('.filterz-filter.selected:not([data-filter-index="all"])');
                    0 != i.length && (t[r] = {}, i.each(function() {
                        var n = $(this),
                            i = n.attr("data-filter-index"),
                            s = n.attr("data-ignore-parent-filter");
                        "all" != i && (t[r][i] = 1), s && (e.ignoredFilters[s] = 1)
                    }))
                }), t
            },
            playerClicked: function(e) {
                this.dehighlightEvent();
                var t = $(e.currentTarget),
                    n = parseInt(t.attr("data-player-id"), 10);
                this.togglePlayerFilter(n), t.toggleClass("selected"), t.find("input").selected(t.hasClass("selected")), this.$el.find(".team input").selected(!1), this.drawCanvas()
            },
            selectAllPlayers: function() {
                this.unmarkSelectedPlayers(), this.$el.find(".team input").selected(!0), this.playerModeOff(), this.drawCanvas()
            },
            unmarkSelectedPlayers: function() {
                this.$el.find(".player.selected").removeClass("selected"), this.$el.find(".player input").selected(!1)
            },
            togglePlayerFilter: function(e) {
                this.currentPlayerIds[e] ? delete this.currentPlayerIds[e] : this.currentPlayerIds[e] = 1, $.isEmptyObject(this.currentPlayerIds) ? this.playerModeOff() : this.playerModeOn()
            },
            playerModeOn: function() {
                this.playerFilterIsOn = !0, this.$el.addClass("player-filter-on")
            },
            playerModeOff: function() {
                this.currentPlayerIds = {}, this.playerFilterIsOn = !1, this.$el.removeClass("player-filter-on")
            },
            setSelectedEventsByPlayer: function() {
                var e = this.getCurrentFilterEvents(),
                    t = this;
                t.selectedEventIdentifiers = [], t.playerFilterIsOn && _.each(e, function(e) {
                    t.playerIsSelected(e.playerId) && t.selectedEventIdentifiers.push(t.getEventIdentifier(e))
                })
            },
            playerIsSelected: function(e) {
                return this.selectedPlayers.home == e || this.selectedPlayers.away == e
            },
            getPlayerIdsToHighlight: function() {
                var e = [];
                return this.playerFilterIsOn ? (this.selectedPlayers.home.hovered ? e.push(this.selectedPlayers.home.hovered) : this.selectedPlayers.home && e.push(this.selectedPlayers.home.selected), this.selectedPlayers.away.hovered ? e.push(this.selectedPlayers.away.hovered) : this.selectedPlayers.away.selected && e.push(this.selectedPlayers.away.selected), e) : null
            },
            selectPlayer: function(e, t) {
                this.playerFilterIsOn = !0, this.selectedPlayers[t] = e, this.setSelectedEventsByPlayer(), this.drawCanvas()
            },
            addSelectedPlayer: function(e, t) {
                this.currentPlayerIds.push(e)
            },
            removeSelectedPlayer: function(e, t) {},
            deselectPlayer: function(e, t) {
                this.playerFilterIsOn = !1, this.selectedPlayers[t] = null, this.setSelectedEventsByPlayer(), this.drawCanvas()
            },
            groupEventsByFilterz: function() {
                var e = this,
                    t = {},
                    n = 0,
                    r = this.model.get("events");
                _.each(this.filterGroups, function(n, i) {
                    var s = n.satisfier,
                        o = e.getCountForFilterSatisfier(s, r);
                    o && (t[i] = o, n.displaySatisfier && (t[i + "_d"] = e.getCountForFilterSatisfier(n.displaySatisfier, r)), _.each(n.filterSubGroups, function(n, o) {
                        _.each(n.filters, function(n, u) {
                            if (n.satisfier) {
                                var a = i + "_" + o + "_" + u,
                                    f = e.getCountForFilterSatisfier(function(e) {
                                        return (!n.ignoreParentSatisfier && s(e) || n.ignoreParentSatisfier) && n.satisfier(e)
                                    }, r);
                                t[i] && (t[a] = f, e.filterSatisfiers[a] = n.satisfier)
                            }
                        })
                    }))
                }), this.groupedFilters = t, this.setFilterCountValues(), console.log(t)
            },
            setPlayerCountValues: function(e) {
                var t = {};
                _.each(e, function(e) {
                    e.playerId && (t[e.playerId] || (t[e.playerId] = {
                        total: [],
                        selected: []
                    }), t[e.playerId].total.push(e), e.isSelected && t[e.playerId].selected.push(e))
                }), this.$el.find(".total-stat-value").html(""), this.$el.find(".selected-stat-value").html(""), this.$el.find(".has-selected-event").removeClass("has-selected-event");
                for (var n in t) {
                    var r = this.$el.find('.player[data-player-id="{0}"]'.format(n)),
                        i = t[n];
                    r.find(".total-stat-value").html(i.total.length), r.removeClass("has-selected-event").attr("data-has-events", 0 != i.total.length), r.find(".selected-stat-value").html(i.selected.length).attr("data-value", i.selected.length), r.addClass("has-selected-event")
                }
            },
            setFilterCountValues: function() {
                for (var e in this.groupedFilters) {
                    var t = this.groupedFilters[e + "_d"] ? this.groupedFilters[e + "_d"] : this.groupedFilters[e],
                        n = $('[data-filter-index="{0}"]'.format(e)),
                        r = t.home.length,
                        i = t.away.length;
                    n.find('[data-field="home"]').html(r).attr("data-value", r).removeClass("greater").addClass(i < r ? "greater" : ""), n.find('[data-field="away"]').html(i).attr("data-value", i).removeClass("greater").addClass(r < i ? "greater" : ""), n.attr("data-sum", r + i)
                }
            },
            eventIsInMinuteRange: function(e) {
                return this.expandedMinMinute <= e.expandedMinute && e.expandedMinute <= this.expandedMaxMinute
            },
            getCountForFilterSatisfier: function(e, t) {
                if (!e)
                    return null;
                var n = {
                        home: [],
                        away: []
                    },
                    r = this.model.get("home").teamId,
                    i = this.model.get("away").teamId,
                    s = this;
                return _.each(t, function(t) {
                    e(t) && s.eventIsInMinuteRange(t) && (r == t.teamId && (t.field = nextgame.statistics.fieldType.home, n.home.push(t)), i == t.teamId && (t.field = nextgame.statistics.fieldType.away, n.away.push(t)))
                }), n
            },
            filterGroups: [{
                displayName: "Shots",
                satisfier: function(e) {
                    return a.isAnyOfTypes(e, [13, 14, 15, 16])
                },
                filterSubGroups: [{
                    displayName: "Results",
                    filters: [{
                        displayName: "Goals",
                        satisfier: function(e) {
                            return a.isOfType(e, 16) && !a.hasSatisfier(e, "goalOwn")
                        }
                    }, {
                        displayName: "Shots on Target",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotOnTarget")
                        }
                    }, {
                        displayName: "Shots off Target",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotOffTarget")
                        }
                    }, {
                        displayName: "Woodworks",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotOnPost")
                        }
                    }, {
                        displayName: "Blocked",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotBlocked")
                        }
                    }, {
                        displayName: "Own",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "goalOwn")
                        }
                    }]
                }, {
                    displayName: "Zones",
                    filters: [{
                        displayName: "6-yard box",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotSixYardBox")
                        }
                    }, {
                        displayName: "Penalty Area",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotPenaltyArea")
                        }
                    }, {
                        displayName: "Outside of box",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotOboxTotal")
                        }
                    }]
                }, {
                    displayName: "Situation",
                    filters: [{
                        displayName: "Open Play",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotOpenPlay")
                        }
                    }, {
                        displayName: "Fastbreak",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotCounter")
                        }
                    }, {
                        displayName: "Set Pieces",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotSetPiece")
                        }
                    }, {
                        displayName: "Penalty",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["penaltyScored", "penaltyMissed"])
                        }
                    }, {
                        displayName: "Own Goal",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "goalOwn")
                        }
                    }]
                }, {
                    displayName: "Body Parts",
                    filters: [{
                        displayName: "Right foot",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotRightFoot")
                        }
                    }, {
                        displayName: "Left foot",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotLeftFoot")
                        }
                    }, {
                        displayName: "Head",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotHead")
                        }
                    }, {
                        displayName: "Other body parts",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "shotObp")
                        }
                    }]
                }]
            }, {
                displayName: "Passes",
                footNote: "Total Passes do not include crosses and keeper throws.",
                displaySatisfier: function(e) {
                    return a.hasAnySatisfier(e, ["passAccurate", "passInaccurate"])
                },
                satisfier: function(e) {
                    return a.isAnyOfTypes(e, [1])
                },
                filterSubGroups: [{
                    displayName: "Pass Type",
                    filters: [{
                        displayName: "Cross",
                        ignoreParentSatisfier: !0,
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["passCrossAccurate", "passCrossInaccurate"])
                        }
                    }, {
                        displayName: "Freekick",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["passFreekickAccurate", "passFreekickInaccurate"])
                        }
                    }, {
                        displayName: "Corner",
                        ignoreParentSatisfier: !0,
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passCorner")
                        }
                    }, {
                        displayName: "Through Ball",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["passThroughBallAccurate", "passThroughBallInaccurate"])
                        }
                    }, {
                        displayName: "Throw In",
                        ignoreParentSatisfier: !0,
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "throwIn")
                        }
                    }, {
                        displayName: "Key Passes",
                        ignoreParentSatisfier: !0,
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passKey")
                        }
                    }]
                }, {
                    displayName: "Length",
                    filters: [{
                        displayName: "Long",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["passLongBallAccurate", "passLongBallInaccurate"])
                        }
                    }, {
                        displayName: "Short",
                        satisfier: function(e) {
                            return !a.hasAnySatisfier(e, ["passLongBallAccurate", "passLongBallInaccurate"])
                        }
                    }]
                }, {
                    displayName: "Height",
                    filters: [{
                        displayName: "Chipped",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passChipped")
                        }
                    }, {
                        displayName: "Ground",
                        satisfier: function(e) {
                            return !a.hasSatisfier(e, "passChipped")
                        }
                    }]
                }, {
                    displayName: "Body Part",
                    filters: [{
                        displayName: "Head",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passHead")
                        }
                    }, {
                        displayName: "Feet",
                        satisfier: function(e) {
                            return a.isOfType(e, 1) && !a.hasSatisfier(e, "passHead")
                        }
                    }]
                }, {
                    displayName: "Direction",
                    filters: [{
                        displayName: "Forward",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passForward")
                        }
                    }, {
                        displayName: "Backward",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passBack")
                        }
                    }, {
                        displayName: "Left",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passLeft")
                        }
                    }, {
                        displayName: "Right",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "passRight")
                        }
                    }]
                }, {
                    displayName: "Target Zone",
                    filters: [{
                        displayName: "Defensive Third",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "defensiveThird")
                        }
                    }, {
                        displayName: "Mid Third",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "midThird")
                        }
                    }, {
                        displayName: "Final Third",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "finalThird")
                        }
                    }]
                }]
            }, {
                displayName: "Dribbles",
                satisfier: function(e) {
                    return a.isAnyOfTypes(e, [3])
                },
                filterSubGroups: [{
                    displayName: "Outcome",
                    filters: [{
                        displayName: "Successful",
                        satisfier: function(e) {
                            return a.isSuccessful(e)
                        }
                    }, {
                        displayName: "Unsuccessful",
                        satisfier: function(e) {
                            return !a.isSuccessful(e)
                        }
                    }]
                }]
            }, {
                displayName: "Tackles Attempted",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["tackleWon", "tackleLost", "challengeLost"])
                },
                filterSubGroups: [{
                    displayName: "Outcome",
                    filters: [{
                        displayName: "Successful Tackles",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["tackleWon", "tackleLost"])
                        }
                    }, {
                        displayName: "Was Dribbled",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["challengeLost"])
                        }
                    }]
                }]
            }, {
                displayName: "Interceptions",
                satisfier: function(e) {
                    return a.isAnyOfTypes(e, [8]) && a.isSuccessful(e)
                }
            }, {
                displayName: "Clearances",
                satisfier: function(e) {
                    return a.hasSatisfier(e, "clearanceTotal")
                },
                filterSubGroups: [{
                    displayName: "Outcome",
                    filters: [{
                        displayName: "Total",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "clearanceTotal")
                        }
                    }, {
                        displayName: "Off TheLine",
                        satisfier: function(e) {
                            return a.hasSatisfier(e, "clearanceOffTheLine")
                        }
                    }]
                }, {
                    displayName: "Body Part",
                    filters: [{
                        displayName: "Head",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["clearanceHead"])
                        }
                    }, {
                        displayName: "Feet",
                        satisfier: function(e) {
                            return !a.hasAnySatisfier(e, ["clearanceHead"])
                        }
                    }]
                }]
            }, {
                displayName: "Blocks",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["outfielderBlock", "passCrossBlockedDefensive", "outfielderBlockedPass"])
                },
                filterSubGroups: [{
                    displayName: "Type",
                    filters: [{
                        displayName: "Blocked Shots",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["outfielderBlock"])
                        }
                    }, {
                        displayName: "Crosses",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["passCrossBlockedDefensive", "outfielderBlockedPass"])
                        }
                    }]
                }]
            }, {
                displayName: "Offsides",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["offsideGiven"])
                }
            }, {
                displayName: "Fouls",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["foulGiven"])
                }
            }, {
                displayName: "Aerial duels",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["duelAerialWon"])
                }
            }, {
                displayName: "Touches",
                satisfier: function(e) {
                    return e.isTouch
                }
            }, {
                displayName: "Loss of possession",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["dispossessed", "turnover"])
                },
                filterSubGroups: [{
                    displayName: "Type",
                    filters: [{
                        displayName: "Dispossessed",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["dispossessed"])
                        }
                    }, {
                        displayName: "Turnover",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["turnover"])
                        }
                    }]
                }]
            }, {
                displayName: "Errors",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["errorLeadsToGoal", "errorLeadsToShot"])
                },
                filterSubGroups: [{
                    displayName: "Type",
                    filters: [{
                        displayName: "Lead to Shot",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["errorLeadsToShot"])
                        }
                    }, {
                        displayName: "Lead to Goal",
                        satisfier: function(e) {
                            return a.hasAnySatisfier(e, ["errorLeadsToGoal"])
                        }
                    }]
                }]
            }, {
                displayName: "Saves",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["keeperSaveTotal"])
                }
            }, {
                displayName: "Claims",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["keeperClaimHighWon", "keeperClaimHighLost"])
                }
            }, {
                displayName: "Punches",
                satisfier: function(e) {
                    return a.hasAnySatisfier(e, ["punches"])
                }
            }]
        }),
        a = {
            isSuccessful: function(e) {
                return e.outcomeType && 1 == e.outcomeType.value
            },
            isAnyOfTypes: function(e, t) {
                var n = !1;
                return _.each(t, function(t) {
                    n = n || a.isOfType(e, t)
                }), n
            },
            isOfType: function(e, t) {
                return e.type ? t == e.type.value : !1
            },
            hasAnySatisfier: function(e, t) {
                var n = !1;
                return _.each(t, function(t) {
                    n = n || a.hasSatisfier(e, t)
                }), n
            },
            hasSatisfier: function(e, t) {
                var n = this;
                return e.satisfiedEventsTypes ? null != _.find(e.satisfiedEventsTypes, function(e) {
                    return t == n.invertedEventTypes[e]
                }) : !1
            }
        };
    return u
}), define("views/MatchCentreHeaderView", ["views/BaseView", "commentaryCreator", "lib/helpers/MatchCentreHelper"], function(e, t, n) {
    var r = e.extend({
        el: "#match-centre-header",
        template: "match-centre-header",
        events: {
            "click .team-name": "teamSelected",
            "click #match-centre-key-incidents-background-mask": "closeIncidents",
            "click #match-centre-key-incidents a": "toggleIncidents"
        },
        defaults: {
            teamRatings: {},
            minMinute: 0
        },
        initialize: function(e) {
            this.eventTypeMappings = e.eventTypeMappings, this.formationList = e.formationList, this.bindCustomEvents(), this.model.on("change", _.bind(function() {
                this.onModelChange()
            }, this))
        },
        closeKeyIncidentsOnEscape: function(e) {
            switch (e.which) {
                case 27:
                    this.closeIncidents()
            }
        },
        onModelChange: function() {
            this.homeTeamId = this.model.home.get("teamId"), this.awayTeamId = this.model.away.get("teamId"), this.maxMinute = this.maxMinute ? this.maxMinute : this.model.get("expandedMaxMinute"), this.maxExpandedLimit = this.model.get("expandedMaxMinute"), this.expandedMinutes = this.model.get("expandedMinutes"), this.minuteInfos = n.getMinuteInfosFromExpandedMinutes(this.expandedMinutes), this.$el.attr("data-status-code", this.model.get("statusCode")), this.setCommentaryCreator(), this.setIncidents(), this.model.set("currentElapsed", this.getElapsed(), {
                silent: !0
            }), this.setGoalScorers(), this.render(), setTimeout(_.bind(this.renderTopMatchHeader, this), 0)
        },
        setGoalScorers: function() {
            var e = {
                    home: [],
                    away: []
                },
                t = _.filter(this.model.home.get("incidentEvents"), function(e) {
                    return e.type.value == 16 && !e.isOwnGoal
                }),
                n = _.filter(this.model.home.get("incidentEvents"), function(e) {
                    return e.isOwnGoal
                }),
                r = _.filter(this.model.away.get("incidentEvents"), function(e) {
                    return e.type.value == 16 && !e.isOwnGoal
                }),
                i = _.filter(this.model.away.get("incidentEvents"), function(e) {
                    return e.isOwnGoal
                });
            e.home = _.sortBy(_.union(t, i), function(e) {
                return e.expandedMinute
            }), e.away = _.sortBy(_.union(r, n), function(e) {
                return e.expandedMinute
            }), this.setEventMinuteInfos(e.home), this.setEventMinuteInfos(e.away), this.model.set("goalScorers", e, {
                silent: !0
            })
        },
        setEventMinuteInfos: function(e) {
            var t = this;
            return _.each(e, function(e) {
                e.minuteInfo = t.minuteInfos[e.expandedMinute], 5 == e.period.value && (e.minuteInfo = {
                    minuteString: "Pen",
                    isPenaltyShootOut: !0
                })
            }), e
        },
        setCommentaryCreator: function() {
            this.commentaryCreator || (this.playerIdNameDictionary = this.model.get("playerIdNameDictionary"), this.commentaryCreator = new t(this.playerIdNameDictionary, this.formationList))
        },
        toggleIncidents: function(e) {
            if (!this.hasIncidents)
                return;
            var t = this.$el.find(".match-centre-key-incidents"),
                n = this.$el.find("#match-centre-key-incidents-background-mask");
            t.toggleClass("expanded"), n.toggleClass("expanded"), this.incidentsExpanded = t.hasClass("expanded")
        },
        closeIncidents: function() {
            var e = this.$el.find(".match-centre-key-incidents"),
                t = this.$el.find("#match-centre-key-incidents-background-mask");
            e.removeClass("expanded"), t.toggleClass("expanded"), this.incidentsExpanded = !1
        },
        bindCustomEvents: function() {
            this.customEventsBound || (this.customEventsBound = !0, this.$bindTo(this.$el, "minutes-range-changed-for-match-header", _.bind(function(e, t) {
                console.log("MatchCenterHeaderView minutes-range-changed");
                if (!t)
                    return;
                var n = t[0],
                    r = t[1];
                this.minMinute = Math.min(n.expandedMinute, r.expandedMinute), this.maxMinute = Math.max(n.expandedMinute, r.expandedMinute), this.render()
            }, this)), this.$bindTo(this.$el, "team-rating-changed-for-header", _.bind(function(e, t) {
                this.teamRatings = t, this.displayTeamRatings(), console.log("done header rating change")
            }, this)), $(document).keyup(_.bind(this.closeKeyIncidentsOnEscape, this)))
        },
        displayTeamRatings: function() {
            this.displayTeamRating("home"), this.displayTeamRating("away")
        },
        displayTeamRating: function(e) {
            var t = this.$el.find('[data-field="{0}"] .team-rating'.format(e));
            t.html(this.teamRatings[e])
        },
        teamSelected: function() {
            this.$el.trigger("team-selected")
        },
        renderTopMatchHeader: function() {
            var e = $("#match-header"),
                t = this.getTopMatchHeaderData();
            NG.renderDustTemplate("match-centre-top-header", t, function(t) {
                e.html(t)
            })
        },
        unexpectedTerminationStatuses: [2, 5, 7],
        hasMatchTerminatedUnExpectedly: function() {
            return -1 != this.unexpectedTerminationStatuses.indexOf(this.model.get("statusCode"))
        },
        getTopMatchHeaderData: function() {
            return {
                homeTeamName: this.model.home.get("name"),
                homeTeamId: this.model.home.get("teamId"),
                awayTeamName: this.model.away.get("name"),
                awayTeamId: this.model.away.get("teamId"),
                score: this.model.get("score"),
                htScore: this.model.get("htScore"),
                ftScore: this.model.get("ftScore"),
                etScore: this.model.get("etScore"),
                pkScore: this.model.get("pkScore"),
                matchTerminatedUnExpectedly: this.hasMatchTerminatedUnExpectedly(),
                elapsed: this.getElapsed(),
                finished: 6 == this.model.get("statusCode"),
                startTime: this.getDateWithFormat(this.model.get("startTime"), "H:i"),
                startDate: this.getDateWithFormat(this.model.get("startDate"), "D, d-M-y")
            }
        },
        getElapsed: function() {
            var e = this.model.get("elapsed");
            if (isNaN(e))
                return e;
            var t = this.minuteInfos[this.maxExpandedLimit];
            return t.minuteText
        },
        getDateWithFormat: function(e, t) {
            var n = new Date(e);
            return n.dateFormat(t)
        },
        setIncidents: function() {
            var e = this.model.home.get("incidentEvents"),
                t = this.model.away.get("incidentEvents"),
                r = _.union(e, t);
            r = _.sortBy(r, function(e) {
                return e.expandedMinute
            });
            var i = [],
                s = -1,
                o = this;
            _.each(r, function(e) {
                if (e.type.value == 34)
                    return;
                e.playerName = o.playerIdNameDictionary[e.playerId], e.satisfiers = n.getKeyIncidentEventSatisfiers(e, o.eventTypeMappings), e.text = o.commentaryCreator.getSentence(e, r);
                var t = 34 != e.type.value ? e.expandedMinute : 0,
                    u = o.minuteInfos[t];
                5 == e.period.value && (u = {
                    minuteString: "Pen",
                    isPenaltyShootout: !0
                }, t = 99999), s < t && (i.push({
                    minuteInfo: u,
                    home: [],
                    away: []
                }), s = t), o.homeTeamId == e.teamId && !e.isOwnGoal || o.awayTeamId == e.teamId && e.isOwnGoal ? i[i.length - 1].home.push(e) : (o.awayTeamId == e.teamId && !e.isOwnGoal || o.homeTeamId == e.teamId && e.isOwnGoal) && i[i.length - 1].away.push(e)
            }), this.hasIncidents = 0 != i.length, this.model.set("hasIncidents", !0, {
                silent: !0
            }), this.model.set("incidents", r, {
                silent: !0
            }), this.model.set("incidentsByGroups", i, {
                silent: !0
            })
        },
        setTeamInfosInRange: function() {
            this.setTeamInfoInRange(this.model.home), this.setTeamInfoInRange(this.model.away)
        },
        setTeamInfoInRange: function(e) {
            var t = e.getFormation(this.minMinute, this.maxMinute, this.maxExpandedLimit, this.model.get("statusCode"));
            if (!t)
                return;
            var n = e.get("field"),
                r = this.$el.find('.match-centre-header-team[data-field="{0}"]'.format(n));
            this.setFormationNameForTeam(r, t.formationName)
        },
        setFormationNameForTeam: function(e, t) {
            var n = t.split("").join("-");
            e.find(".formation").html(n)
        },
        onRender: function() {
            console.log("header on render start"), this.setTeamInfosInRange(), this.displayTeamRatings(), this.incidentsExpanded && this.$el.find(".match-centre-key-incidents").addClass("expanded");
            var e = this.$el.height();
            this.$el.css("min-height", e), console.log("header on render end")
        }
    });
    return r
}),
    function(e) {
        var t = function() {
            var e = function(t) {
                var n = {
                    data: [],
                    heatmap: t
                };
                this.max = 1, this.get = function(e) {
                    return n[e]
                }, this.set = function(e, t) {
                    n[e] = t
                }
            };
            e.prototype = {
                addDataPoint: function(e, t) {
                    if (e < 0 || t < 0)
                        return;
                    var n = this,
                        r = n.get("heatmap"),
                        i = n.get("data");
                    i[e] || (i[e] = []), i[e][t] || (i[e][t] = 0), i[e][t] += arguments.length < 3 ? 1 : arguments[2], n.set("data", i);
                    if (n.max < i[e][t]) {
                        r.get("actx").clearRect(0, 0, r.get("width"), r.get("height")), n.setDataSet({
                            max: i[e][t],
                            data: i
                        }, !0);
                        return
                    }
                    r.drawAlpha(e, t, i[e][t], !0)
                },
                setDataSet: function(e, t) {
                    var n = this,
                        r = n.get("heatmap"),
                        i = [],
                        s = e.data,
                        o = s.length;
                    r.clear(), this.max = e.max, r.get("legend") && r.get("legend").update(e.max);
                    if (t != null && t)
                        for (var u in s) {
                            if (u === undefined)
                                continue;
                            for (var a in s[u]) {
                                if (a === undefined)
                                    continue;
                                r.drawAlpha(u, a, s[u][a], !1)
                            }
                        } else
                        while (o--) {
                            var f = s[o];
                            r.drawAlpha(f.x, f.y, f.count, !1), i[f.x] || (i[f.x] = []), i[f.x][f.y] || (i[f.x][f.y] = 0), i[f.x][f.y] = f.count
                        }
                    r.colorize(), this.set("data", s)
                },
                exportDataSet: function() {
                    var e = this,
                        t = e.get("data"),
                        n = [];
                    for (var r in t) {
                        if (r === undefined)
                            continue;
                        for (var i in t[r]) {
                            if (i === undefined)
                                continue;
                            n.push({
                                x: parseInt(r, 10),
                                y: parseInt(i, 10),
                                count: t[r][i]
                            })
                        }
                    }
                    return {
                        max: e.max,
                        data: n
                    }
                },
                generateRandomDataSet: function(e) {
                    var t = this.get("heatmap"),
                        n = t.get("width"),
                        r = t.get("height"),
                        i = {},
                        s = Math.floor(Math.random() * 1e3 + 1);
                    i.max = s;
                    var o = [];
                    while (e--)
                        o.push({
                            x: Math.floor(Math.random() * n + 1),
                            y: Math.floor(Math.random() * r + 1),
                            count: Math.floor(Math.random() * s + 1)
                        });
                    i.data = o, this.setDataSet(i)
                }
            };
            var t = function(t) {
                this.config = t;
                var n = {
                    element: null,
                    labelsEl: null,
                    gradientCfg: null,
                    ctx: null
                };
                this.get = function(e) {
                    return n[e]
                }, this.set = function(e, t) {
                    n[e] = t
                }, this.init()
            };
            t.prototype = {
                init: function() {
                    var e = this,
                        t = e.config,
                        n = t.title || "Legend",
                        r = t.position,
                        i = t.offset || 10,
                        s = t.gradient,
                        o = document.createElement("ul"),
                        u = "",
                        a, f, l, c = "";
                    e.processGradientObject(), r.indexOf("t") > -1 ? c += "top:" + i + "px;" : c += "bottom:" + i + "px;", r.indexOf("l") > -1 ? c += "left:" + i + "px;" : c += "right:" + i + "px;", f = document.createElement("div"), f.style.cssText = "border-radius:5px;position:absolute;" + c + "font-family:Helvetica; width:256px;z-index:10000000000; background:rgba(255,255,255,1);padding:10px;border:1px solid black;margin:0;", f.innerHTML = "<h3 style='padding:0;margin:0;text-align:center;font-size:16px;'>" + n + "</h3>", o.style.cssText = "position:relative;font-size:12px;display:block;list-style:none;list-style-type:none;margin:0;height:15px;", l = document.createElement("div"), l.style.cssText = ["position:relative;display:block;width:256px;height:15px;border-bottom:1px solid black; background-image:url(", e.createGradientImage(), ");"].join(""), f.appendChild(o), f.appendChild(l), e.set("element", f), e.set("labelsEl", o), e.update(1)
                },
                processGradientObject: function() {
                    var e = this,
                        t = this.config.gradient,
                        n = [];
                    for (var r in t)
                        t.hasOwnProperty(r) && n.push({
                            stop: r,
                            value: t[r]
                        });
                    n.sort(function(e, t) {
                        return e.stop - t.stop
                    }), n.unshift({
                        stop: 0,
                        value: "rgba(0,0,0,0)"
                    }), e.set("gradientArr", n)
                },
                createGradientImage: function() {
                    var e = this,
                        t = e.get("gradientArr"),
                        n = t.length,
                        r = document.createElement("canvas"),
                        i = r.getContext("2d"),
                        s;
                    r.width = "256", r.height = "15", s = i.createLinearGradient(0, 5, 256, 10);
                    for (var o = 0; o < n; o++)
                        s.addColorStop(1 / (n - 1) * o, t[o].value);
                    i.fillStyle = s, i.fillRect(0, 5, 256, 10), i.strokeStyle = "black", i.beginPath();
                    for (var o = 0; o < n; o++)
                        i.moveTo((1 / (n - 1) * o * 256 >> 0) + .5, 0), i.lineTo((1 / (n - 1) * o * 256 >> 0) + .5, o == 0 ? 15 : 5);
                    return i.moveTo(255.5, 0), i.lineTo(255.5, 15), i.moveTo(255.5, 4.5), i.lineTo(0, 4.5), i.stroke(), e.set("ctx", i), r.toDataURL()
                },
                getElement: function() {
                    return this.get("element")
                },
                update: function(e) {
                    var t = this,
                        n = t.get("gradientArr"),
                        r = t.get("ctx"),
                        i = t.get("labelsEl"),
                        s, o = "",
                        u;
                    for (var a = 0; a < n.length; a++)
                        s = e * n[a].stop >> 0, u = r.measureText(s).width / 2 >> 0, a == 0 && (u = 0), a == n.length - 1 && (u *= 2), o += '<li style="position:absolute;left:' + (((1 / (n.length - 1) * a * 256 || 0) >> 0) - u + .5) + 'px">' + s + "</li>";
                    i.innerHTML = o
                }
            };
            var n = function(n) {
                var r = {
                    radius: 40,
                    element: {},
                    canvas: {},
                    acanvas: {},
                    ctx: {},
                    actx: {},
                    legend: null,
                    visible: !0,
                    width: 0,
                    height: 0,
                    max: !1,
                    gradient: !1,
                    opacity: 180,
                    premultiplyAlpha: !1,
                    bounds: {
                        l: 1e3,
                        r: 0,
                        t: 1e3,
                        b: 0
                    },
                    debug: !1
                };
                this.store = new e(this), this.get = function(e) {
                    return r[e]
                }, this.set = function(e, t) {
                    r[e] = t
                }, this.configure(n), this.init()
            };
            return n.prototype = {
                configure: function(e) {
                    var n = this,
                        r, i;
                    n.set("radius", e.radius || 40), n.set("element", e.element instanceof Object ? e.element : document.getElementById(e.element)), n.set("visible", e.visible != null ? e.visible : !0), n.set("max", e.max || !1), n.set("gradient", e.gradient || {
                        .45: "rgb(0,0,255)",
                        .55: "rgb(0,255,255)",
                        .65: "rgb(0,255,0)",
                        .95: "yellow",
                        1: "rgb(255,0,0)"
                    }), n.set("opacity", parseInt(255 / (100 / e.opacity), 10) || 180), n.set("width", e.width || 0), n.set("height", e.height || 0), n.set("debug", e.debug);
                    if (e.legend) {
                        var s = e.legend;
                        s.gradient = n.get("gradient"), n.set("legend", new t(s))
                    }
                },
                resize: function() {
                    var e = this,
                        t = e.get("element"),
                        n = e.get("canvas"),
                        r = e.get("acanvas");
                    n.width = r.width = e.get("width") || t.style.width.replace(/px/, "") || e.getWidth(t), this.set("width", n.width), n.height = r.height = e.get("height") || t.style.height.replace(/px/, "") || e.getHeight(t), this.set("height", n.height)
                },
                init: function() {
                    var e = this,
                        t = document.createElement("canvas"),
                        n = document.createElement("canvas"),
                        r = t.getContext("2d"),
                        i = n.getContext("2d"),
                        s = e.get("element");
                    e.initColorPalette(), e.set("canvas", t), e.set("ctx", r), e.set("acanvas", n), e.set("actx", i), e.resize(), t.style.cssText = n.style.cssText = "position:absolute;top:0;left:0;z-index:10000000;", e.get("visible") || (t.style.display = "none"), s.appendChild(t), e.get("legend") && s.appendChild(e.get("legend").getElement()), e.get("debug") && document.body.appendChild(n), i.shadowOffsetX = 15e3, i.shadowOffsetY = 15e3, i.shadowBlur = 15
                },
                initColorPalette: function() {
                    var e = this,
                        t = document.createElement("canvas"),
                        n = e.get("gradient"),
                        r, i, s;
                    t.width = "1", t.height = "256", r = t.getContext("2d"), i = r.createLinearGradient(0, 0, 1, 256), s = r.getImageData(0, 0, 1, 1), s.data[0] = s.data[3] = 64, s.data[1] = s.data[2] = 0, r.putImageData(s, 0, 0), s = r.getImageData(0, 0, 1, 1), e.set("premultiplyAlpha", s.data[0] < 60 || s.data[0] > 70);
                    for (var o in n)
                        i.addColorStop(o, n[o]);
                    r.fillStyle = i, r.fillRect(0, 0, 1, 256), e.set("gradient", r.getImageData(0, 0, 1, 256).data)
                },
                getWidth: function(e) {
                    var t = e.offsetWidth;
                    return e.style.paddingLeft && (t += e.style.paddingLeft), e.style.paddingRight && (t += e.style.paddingRight), t
                },
                getHeight: function(e) {
                    var t = e.offsetHeight;
                    return e.style.paddingTop && (t += e.style.paddingTop), e.style.paddingBottom && (t += e.style.paddingBottom), t
                },
                colorize: function(e, t) {
                    var n = this,
                        r = n.get("width"),
                        i = n.get("radius"),
                        s = n.get("height"),
                        o = n.get("actx"),
                        u = n.get("ctx"),
                        a = i * 3,
                        f = n.get("premultiplyAlpha"),
                        l = n.get("gradient"),
                        c = n.get("opacity"),
                        h = n.get("bounds"),
                        p, d, v, m, g, y, b, w, E, S;
                    e != null && t != null ? (e + a > r && (e = r - a), e < 0 && (e = 0), t < 0 && (t = 0), t + a > s && (t = s - a), p = e, d = t, m = e + a, v = t + a) : (h.l < 0 ? p = 0 : p = h.l, h.r > r ? m = r : m = h.r, h.t < 0 ? d = 0 : d = h.t, h.b > s ? v = s : v = h.b), g = o.getImageData(p, d, m - p, v - d), y = g.data, b = y.length;
                    for (var x = 3; x < b; x += 4) {
                        w = y[x], E = w * 4;
                        if (!E)
                            continue;
                        S = w < c ? w : c, y[x - 3] = l[E], y[x - 2] = l[E + 1], y[x - 1] = l[E + 2], f && (y[x - 3] /= 255 / S, y[x - 2] /= 255 / S, y[x - 1] /= 255 / S), y[x] = S
                    }
                    g.data = y, u.putImageData(g, p, d)
                },
                drawAlpha: function(e, t, n, r) {
                    var i = this,
                        s = i.get("radius"),
                        o = i.get("actx"),
                        u = i.get("max"),
                        a = i.get("bounds"),
                        f = e - 1.5 * s >> 0,
                        l = t - 1.5 * s >> 0,
                        c = e + 1.5 * s >> 0,
                        h = t + 1.5 * s >> 0;
                    o.shadowColor = "rgba(0,0,0," + (n ? n / i.store.max : "0.1") + ")", o.shadowOffsetX = 15e3, o.shadowOffsetY = 15e3, o.shadowBlur = 15, o.beginPath(), o.arc(e - 15e3, t - 15e3, s, 0, Math.PI * 2, !0), o.closePath(), o.fill(), r ? i.colorize(f, l) : (f < a.l && (a.l = f), l < a.t && (a.t = l), c > a.r && (a.r = c), h > a.b && (a.b = h))
                },
                toggleDisplay: function() {
                    var e = this,
                        t = e.get("visible"),
                        n = e.get("canvas");
                    t ? n.style.display = "none" : n.style.display = "block", e.set("visible", !t)
                },
                getImageData: function() {
                    return this.get("canvas").toDataURL()
                },
                clear: function() {
                    var e = this,
                        t = e.get("width"),
                        n = e.get("height");
                    e.store.set("data", []), e.get("ctx").clearRect(0, 0, t, n), e.get("actx").clearRect(0, 0, t, n)
                },
                cleanup: function() {
                    var e = this;
                    e.get("element").removeChild(e.get("canvas"))
                }
            }, {
                create: function(e) {
                    return new n(e)
                },
                util: {
                    mousePosition: function(e) {
                        var t, n;
                        e.layerX ? (t = e.layerX, n = e.layerY) : e.offsetX && (t = e.offsetX, n = e.offsetY);
                        if (typeof t == "undefined")
                            return;
                        return [t, n]
                    }
                }
            }
        }();
        e.h337 = e.heatmapFactory = t
    }(window), define("heatmap", function() {}), define("views/HeatmapsView", ["views/BaseView", "lib/dust.ws", "heatmap"], function(e) {
    var t = e.extend({
        el: "#heatmaps",
        template: "heatmaps",
        defaults: {
            pitchOptions: {
                width: 320,
                height: 200,
                columns: 20,
                rows: 20,
                boxMargin: 1
            },
            heatmaps: {
                home: [],
                away: []
            },
            selectedPlayers: {
                home: [],
                away: []
            },
            teamIds: {
                home: [],
                away: []
            }
        },
        events: {
            "click .player": "playerSelected",
            "click .team": "teamSelected"
        },
        initialize: function() {
            this.pitchOptions.boxWidth = this.pitchOptions.width / parseFloat(this.pitchOptions.columns) - this.pitchOptions.boxMargin * 2, this.pitchOptions.boxHeight = this.pitchOptions.height / parseFloat(this.pitchOptions.rows) - this.pitchOptions.boxMargin * 2
        },
        onModelChange: function() {
            this.render()
        },
        onRender: function() {
            this.teamIds.home = this.model.home.get("teamId"), this.teamIds.away = this.model.away.get("teamId"), this.drawPitches()
        },
        playerSelected: function(e) {
            var t = $(e.currentTarget);
            t.toggleClass("selected"), t.find("input").selected(t.hasClass("selected"));
            var n = $.isEmptyObject(t.attr("data-is-first-eleven")),
                r = $.isEmptyObject(t.attr("data-subbed-in"));
            if (!n && !r)
                return;
            var i = t.attr("data-player-id"),
                s = t.attr("data-field");
            this.selectedPlayers[s][i] ? delete this.selectedPlayers[s][i] : this.selectedPlayers[s][i] = !0, this.drawPitches()
        },
        teamSelected: function(e) {
            var t = $(e.currentTarget),
                n = t.attr("data-field");
            t.toggleClass("selected"), t.find("input").selected(t.hasClass("selected"));
            var r = t.hasClass("selected");
            r ? (this.$el.find("[data-field={0}] .player".format(n)).addClass("selected"), this.$el.find("[data-field={0}] .player input".format(n)).selected(!0), this.selectedPlayers[n] = _.pluck(this.model[n].get("players"), "playerId")) : (this.$el.find("[data-field={0}] .player".format(n)).removeClass("selected"), this.$el.find("[data-field={0}] .player input".format(n)).selected(!1), this.selectedPlayers[n] = []), this.drawPitches()
        },
        drawPitches: function() {
            this.pitches || (this.pitches = {
                home: this.getPitchForTeam("home"),
                away: this.getPitchForTeam("away")
            }), this.loadPitchForTeam("home"), this.loadPitchForTeam("away")
        },
        loadPitchForTeam: function(e) {
            this.pitches[e].load({
                heatmap: this.heatmaps[e],
                heatmapData: this.getHeatmapDataForTeam(e)
            })
        },
        getHeatmapDataForTeam: function(e) {
            var t = this.getSelectedPlayersForTeam(e);
            return this.getHeatmapDataFromPlayers(t, e)
        },
        getHeatmapDataFromPlayers: function(e, t) {
            var n = this.getPlayerEventsForHeatmap(e),
                r = _.countBy(n, _.bind(function(e) {
                    var n = "home" == t ? e.x : 100 - e.x,
                        r = e.y,
                        i = this.getCoordinateRange(n, 1, this.pitchOptions.columns),
                        s = this.getCoordinateRange(r, 1, this.pitchOptions.rows);
                    return "{0}_{1}".format(i, s)
                }, this)),
                i = [],
                s = 0;
            for (var o in r) {
                var u = o.split("_"),
                    a = r[o];
                s = Math.max(a, s);
                var f = this.pitchOptions.boxWidth * parseInt(u[0], 10),
                    l = this.pitchOptions.boxHeight * parseInt(u[1], 10);
                i.push({
                    x: f,
                    y: l,
                    count: r[o]
                })
            }
            return {
                data: i,
                max: s
            }
        },
        getCoordinateRange: function(e, t, n) {
            return Math.round((n - t) * (e / 100) + t)
        },
        getPlayerEventsForHeatmap: function(e) {
            var t = _.pluck(e, "playerId");
            return _.filter(this.model.get("events"), function(e) {
                return -1 != _.indexOf(t, e.playerId)
            })
        },
        getSelectedPlayersForTeam: function(e) {
            var t = this.model[e].get("players");
            return 0 == this.selectedPlayers[e].length ? t : _.filter(t, _.bind(function(t) {
                return this.selectedPlayers[e][t.playerId]
            }, this))
        },
        getPitchForTeam: function(e) {
            var t = "heatmaps .canvas-container[data-for={0}]".format(e),
                n = $("#" + t),
                r = {
                    element: n[0],
                    radius: 20,
                    opacity: 50
                },
                i = h337.create(r);
            this.heatmaps[e] = i;
            var s = {
                heatmap: i,
                view: {
                    width: this.pitchOptions.width,
                    height: this.pitchOptions.height,
                    renderTo: t
                },
                model: {
                    instanceType: nextgame.statistics.heatmaps
                }
            };
            return new WS.Canvas(s)
        }
    });
    return t
}), require(["views/MatchCentreView", "views/MatchCentreCommentaryView", "views/ChalkboardView", "views/MatchCentreHeaderView", "models/MatchCentreModel", "views/LoadingView", "views/HeatmapsView"], function(e, t, n, r, i, s, o) {
    if ("match-centre" != window.currentView)
        return;
    var u = _.invert(matchCentreEventTypeJson),
        a = new i(matchCentreData);
    a.id = matchId, window.model = a;
    var f = new s({
        el: "#match-loading-view"
    });
    a.bind("before-fetch", function() {
        c.attr("data-mode", 1), f.show()
    }).bind("fetched-with-success", function() {
        c.attr("data-mode", 2), f.hide()
    }).bind("fetched-with-error", function() {
        c.attr("data-mode", 3), f.hide()
    }).bind("is-not-valid", function() {
        c.attr("data-mode", 3), f.hide()
    });
    var l = $("#match-last-updated-at"),
        c = $("#live-match"),
        h, p = function() {
            clearInterval(h);
            var e = this.get("timeStamp"),
                t = this.get("timeoutInSeconds"),
                n = 3 == this.get("statusCode"),
                r = function() {
                    0 < t && l.html("Will be refreshed in " + t--+" seconds")
                };
            n ? h = setInterval(r, 1e3) : e && l.html("Last updated at " + e)
        },
        d = /([a-z])([A-Z])/g,
        v = function() {
            $(".incident-icon-legend").each(function() {
                var e = $(this).find(".incident-icon"),
                    t = $(this).find("label").html(),
                    n = e.data();
                for (var r in n) {
                    var i = "data-" + r.replace(d, "$1-$2").toLowerCase(),
                        s = n[r],
                        o = ".incident-icon[" + i + (s ? "=" + s : "") + "]";
                    $("body").on("DOMNodeInserted", o, function() {
                        $(this).attr("title", t)
                    })
                }
            })
        };
    a.on("change", function() {
        _.bind(p, this)(), setTimeout(v(), 3e3)
    });
    var m = new e({
            eventTypeMappings: u,
            formationList: formationIdNameMappings
        }),
        g = new t({
            el: "#match-commentary",
            eventTypeMappings: u,
            formationList: formationIdNameMappings
        }),
        y = new n({
            eventTypes: matchCentreEventTypeJson,
            eventTypeMappings: u,
            formationList: formationIdNameMappings
        }),
        b = new r({
            model: a,
            eventTypeMappings: u,
            formationList: formationIdNameMappings
        }),
        w = new o({});
    m.setModel(a), y.setModel(a), g.setModel(a), w.setModel(a);
    var E = !1,
        S = function() {
            if (E)
                return;
            E = !0, m.$bindTo(m.$el, "comments-summary-show-more", function() {
                $('#live-match-options [href="#match-commentary"]').click()
            }), m.$bindTo(m.$el, "minutes-range-changed-for-match-centre", function(e, t) {
                b.$el.trigger("minutes-range-changed-for-match-header", [t])
            }), m.$bindTo(m.$el, "team-rating-changed", function(e, t) {
                b.$el.trigger("team-rating-changed-for-header", [t])
            }), b.$bindTo(b.$el, "team-selected", function(e) {
                m.$el.trigger("team-mode-selected")
            }), $(".simple-tabs").on("click", "a", function(e) {
                e.preventDefault();
                var t = $(e.delegateTarget),
                    n = $(e.currentTarget),
                    r = t.find(".selected").removeClass("selected").attr("href");
                n.addClass("selected"), $(r).removeClass("is-active-panel");
                var i = n.attr("href"),
                    s = $(i).addClass("is-active-panel");
                return s.attr("data-initialized", !0), "#match-centre" == i ? (m.activate(), g.deactivate(), y.deactivate(), w.deactivate()) : "#match-commentary" == i ? (m.deactivate(), g.activate(), y.deactivate(), w.deactivate()) : "#chalkboard" == i ? (m.deactivate(), g.deactivate(), y.activate(), w.deactivate()) : "#heatmaps" == i && (m.deactivate(), g.deactivate(), y.deactivate(), w.activate()), !1
            })
        };
    S(), $('#live-match-options [href="#match-centre"]').click()
}), define("match-centre", function() {}), require(["tables-statistics", "tables-player", "tables-tournament-player", "tables-tournament-team", "tables-team", "tables-team-history", "tables-player", "tables-player-history", "tables-match-h2h", "tables-match-matchcentre", "match-centre"], function() {}), define("module-loader", function() {});